#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_BindImage;
void *ptr_BindImage = NULL;
extern void *ptr_BindImageEx;
void *ptr_BindImageEx = NULL;
extern void *ptr_CheckSumMappedFile;
void *ptr_CheckSumMappedFile = NULL;
extern void *ptr_EnumerateLoadedModules;
void *ptr_EnumerateLoadedModules = NULL;
extern void *ptr_EnumerateLoadedModules64;
void *ptr_EnumerateLoadedModules64 = NULL;
extern void *ptr_EnumerateLoadedModulesEx;
void *ptr_EnumerateLoadedModulesEx = NULL;
extern void *ptr_EnumerateLoadedModulesExW;
void *ptr_EnumerateLoadedModulesExW = NULL;
extern void *ptr_EnumerateLoadedModulesW64;
void *ptr_EnumerateLoadedModulesW64 = NULL;
extern void *ptr_FindDebugInfoFile;
void *ptr_FindDebugInfoFile = NULL;
extern void *ptr_FindDebugInfoFileEx;
void *ptr_FindDebugInfoFileEx = NULL;
extern void *ptr_FindExecutableImage;
void *ptr_FindExecutableImage = NULL;
extern void *ptr_FindExecutableImageEx;
void *ptr_FindExecutableImageEx = NULL;
extern void *ptr_FindFileInPath;
void *ptr_FindFileInPath = NULL;
extern void *ptr_FindFileInSearchPath;
void *ptr_FindFileInSearchPath = NULL;
extern void *ptr_GetImageConfigInformation;
void *ptr_GetImageConfigInformation = NULL;
extern void *ptr_GetImageUnusedHeaderBytes;
void *ptr_GetImageUnusedHeaderBytes = NULL;
extern void *ptr_GetTimestampForLoadedLibrary;
void *ptr_GetTimestampForLoadedLibrary = NULL;
extern void *ptr_ImageAddCertificate;
void *ptr_ImageAddCertificate = NULL;
extern void *ptr_ImageDirectoryEntryToData;
void *ptr_ImageDirectoryEntryToData = NULL;
extern void *ptr_ImageDirectoryEntryToDataEx;
void *ptr_ImageDirectoryEntryToDataEx = NULL;
extern void *ptr_ImageEnumerateCertificates;
void *ptr_ImageEnumerateCertificates = NULL;
extern void *ptr_ImageGetCertificateData;
void *ptr_ImageGetCertificateData = NULL;
extern void *ptr_ImageGetCertificateHeader;
void *ptr_ImageGetCertificateHeader = NULL;
extern void *ptr_ImageGetDigestStream;
void *ptr_ImageGetDigestStream = NULL;
extern void *ptr_ImageLoad;
void *ptr_ImageLoad = NULL;
extern void *ptr_ImageNtHeader;
void *ptr_ImageNtHeader = NULL;
extern void *ptr_ImageRemoveCertificate;
void *ptr_ImageRemoveCertificate = NULL;
extern void *ptr_ImageRvaToSection;
void *ptr_ImageRvaToSection = NULL;
extern void *ptr_ImageRvaToVa;
void *ptr_ImageRvaToVa = NULL;
extern void *ptr_ImageUnload;
void *ptr_ImageUnload = NULL;
extern void *ptr_ImagehlpApiVersion;
void *ptr_ImagehlpApiVersion = NULL;
extern void *ptr_ImagehlpApiVersionEx;
void *ptr_ImagehlpApiVersionEx = NULL;
extern void *ptr_MakeSureDirectoryPathExists;
void *ptr_MakeSureDirectoryPathExists = NULL;
extern void *ptr_MapAndLoad;
void *ptr_MapAndLoad = NULL;
extern void *ptr_MapFileAndCheckSumA;
void *ptr_MapFileAndCheckSumA = NULL;
extern void *ptr_MapFileAndCheckSumW;
void *ptr_MapFileAndCheckSumW = NULL;
extern void *ptr_ReBaseImage;
void *ptr_ReBaseImage = NULL;
extern void *ptr_ReBaseImage64;
void *ptr_ReBaseImage64 = NULL;
extern void *ptr_RemovePrivateCvSymbolic;
void *ptr_RemovePrivateCvSymbolic = NULL;
extern void *ptr_RemovePrivateCvSymbolicEx;
void *ptr_RemovePrivateCvSymbolicEx = NULL;
extern void *ptr_RemoveRelocations;
void *ptr_RemoveRelocations = NULL;
extern void *ptr_SearchTreeForFile;
void *ptr_SearchTreeForFile = NULL;
extern void *ptr_SetImageConfigInformation;
void *ptr_SetImageConfigInformation = NULL;
extern void *ptr_SplitSymbols;
void *ptr_SplitSymbols = NULL;
extern void *ptr_StackWalk;
void *ptr_StackWalk = NULL;
extern void *ptr_StackWalk64;
void *ptr_StackWalk64 = NULL;
extern void *ptr_SymCleanup;
void *ptr_SymCleanup = NULL;
extern void *ptr_SymEnumSym;
void *ptr_SymEnumSym = NULL;
extern void *ptr_SymEnumSymbols;
void *ptr_SymEnumSymbols = NULL;
extern void *ptr_SymEnumSymbolsForAddr;
void *ptr_SymEnumSymbolsForAddr = NULL;
extern void *ptr_SymEnumTypes;
void *ptr_SymEnumTypes = NULL;
extern void *ptr_SymEnumTypesByName;
void *ptr_SymEnumTypesByName = NULL;
extern void *ptr_SymEnumTypesByNameW;
void *ptr_SymEnumTypesByNameW = NULL;
extern void *ptr_SymEnumTypesW;
void *ptr_SymEnumTypesW = NULL;
extern void *ptr_SymEnumerateModules;
void *ptr_SymEnumerateModules = NULL;
extern void *ptr_SymEnumerateModules64;
void *ptr_SymEnumerateModules64 = NULL;
extern void *ptr_SymEnumerateSymbols;
void *ptr_SymEnumerateSymbols = NULL;
extern void *ptr_SymEnumerateSymbols64;
void *ptr_SymEnumerateSymbols64 = NULL;
extern void *ptr_SymEnumerateSymbolsW;
void *ptr_SymEnumerateSymbolsW = NULL;
extern void *ptr_SymEnumerateSymbolsW64;
void *ptr_SymEnumerateSymbolsW64 = NULL;
extern void *ptr_SymFindFileInPath;
void *ptr_SymFindFileInPath = NULL;
extern void *ptr_SymFindFileInPathW;
void *ptr_SymFindFileInPathW = NULL;
extern void *ptr_SymFromAddr;
void *ptr_SymFromAddr = NULL;
extern void *ptr_SymFromName;
void *ptr_SymFromName = NULL;
extern void *ptr_SymFunctionTableAccess;
void *ptr_SymFunctionTableAccess = NULL;
extern void *ptr_SymFunctionTableAccess64;
void *ptr_SymFunctionTableAccess64 = NULL;
extern void *ptr_SymGetLineFromAddr;
void *ptr_SymGetLineFromAddr = NULL;
extern void *ptr_SymGetLineFromAddr64;
void *ptr_SymGetLineFromAddr64 = NULL;
extern void *ptr_SymGetLineFromName;
void *ptr_SymGetLineFromName = NULL;
extern void *ptr_SymGetLineFromName64;
void *ptr_SymGetLineFromName64 = NULL;
extern void *ptr_SymGetLineNext;
void *ptr_SymGetLineNext = NULL;
extern void *ptr_SymGetLineNext64;
void *ptr_SymGetLineNext64 = NULL;
extern void *ptr_SymGetLinePrev;
void *ptr_SymGetLinePrev = NULL;
extern void *ptr_SymGetLinePrev64;
void *ptr_SymGetLinePrev64 = NULL;
extern void *ptr_SymGetModuleBase;
void *ptr_SymGetModuleBase = NULL;
extern void *ptr_SymGetModuleBase64;
void *ptr_SymGetModuleBase64 = NULL;
extern void *ptr_SymGetModuleInfo;
void *ptr_SymGetModuleInfo = NULL;
extern void *ptr_SymGetModuleInfo64;
void *ptr_SymGetModuleInfo64 = NULL;
extern void *ptr_SymGetModuleInfoW;
void *ptr_SymGetModuleInfoW = NULL;
extern void *ptr_SymGetModuleInfoW64;
void *ptr_SymGetModuleInfoW64 = NULL;
extern void *ptr_SymGetOptions;
void *ptr_SymGetOptions = NULL;
extern void *ptr_SymGetSearchPath;
void *ptr_SymGetSearchPath = NULL;
extern void *ptr_SymGetSourceFileFromTokenW;
void *ptr_SymGetSourceFileFromTokenW = NULL;
extern void *ptr_SymGetSourceFileTokenW;
void *ptr_SymGetSourceFileTokenW = NULL;
extern void *ptr_SymGetSourceVarFromTokenW;
void *ptr_SymGetSourceVarFromTokenW = NULL;
extern void *ptr_SymGetSymFromAddr;
void *ptr_SymGetSymFromAddr = NULL;
extern void *ptr_SymGetSymFromAddr64;
void *ptr_SymGetSymFromAddr64 = NULL;
extern void *ptr_SymGetSymFromName;
void *ptr_SymGetSymFromName = NULL;
extern void *ptr_SymGetSymFromName64;
void *ptr_SymGetSymFromName64 = NULL;
extern void *ptr_SymGetSymNext;
void *ptr_SymGetSymNext = NULL;
extern void *ptr_SymGetSymNext64;
void *ptr_SymGetSymNext64 = NULL;
extern void *ptr_SymGetSymPrev;
void *ptr_SymGetSymPrev = NULL;
extern void *ptr_SymGetSymPrev64;
void *ptr_SymGetSymPrev64 = NULL;
extern void *ptr_SymGetSymbolFile;
void *ptr_SymGetSymbolFile = NULL;
extern void *ptr_SymGetSymbolFileW;
void *ptr_SymGetSymbolFileW = NULL;
extern void *ptr_SymGetTypeFromName;
void *ptr_SymGetTypeFromName = NULL;
extern void *ptr_SymGetTypeFromNameW;
void *ptr_SymGetTypeFromNameW = NULL;
extern void *ptr_SymGetTypeInfo;
void *ptr_SymGetTypeInfo = NULL;
extern void *ptr_SymGetTypeInfoEx;
void *ptr_SymGetTypeInfoEx = NULL;
extern void *ptr_SymInitialize;
void *ptr_SymInitialize = NULL;
extern void *ptr_SymLoadModule;
void *ptr_SymLoadModule = NULL;
extern void *ptr_SymLoadModule64;
void *ptr_SymLoadModule64 = NULL;
extern void *ptr_SymMatchFileName;
void *ptr_SymMatchFileName = NULL;
extern void *ptr_SymMatchFileNameW;
void *ptr_SymMatchFileNameW = NULL;
extern void *ptr_SymMatchString;
void *ptr_SymMatchString = NULL;
extern void *ptr_SymMatchStringA;
void *ptr_SymMatchStringA = NULL;
extern void *ptr_SymMatchStringW;
void *ptr_SymMatchStringW = NULL;
extern void *ptr_SymRegisterCallback;
void *ptr_SymRegisterCallback = NULL;
extern void *ptr_SymRegisterCallback64;
void *ptr_SymRegisterCallback64 = NULL;
extern void *ptr_SymRegisterFunctionEntryCallback;
void *ptr_SymRegisterFunctionEntryCallback = NULL;
extern void *ptr_SymRegisterFunctionEntryCallback64;
void *ptr_SymRegisterFunctionEntryCallback64 = NULL;
extern void *ptr_SymSetContext;
void *ptr_SymSetContext = NULL;
extern void *ptr_SymSetOptions;
void *ptr_SymSetOptions = NULL;
extern void *ptr_SymSetScopeFromAddr;
void *ptr_SymSetScopeFromAddr = NULL;
extern void *ptr_SymSetScopeFromIndex;
void *ptr_SymSetScopeFromIndex = NULL;
extern void *ptr_SymSetSearchPath;
void *ptr_SymSetSearchPath = NULL;
extern void *ptr_SymSrvGetFileIndexString;
void *ptr_SymSrvGetFileIndexString = NULL;
extern void *ptr_SymSrvGetFileIndexStringW;
void *ptr_SymSrvGetFileIndexStringW = NULL;
extern void *ptr_SymSrvGetFileIndexes;
void *ptr_SymSrvGetFileIndexes = NULL;
extern void *ptr_SymSrvGetFileIndexesW;
void *ptr_SymSrvGetFileIndexesW = NULL;
extern void *ptr_SymUnDName;
void *ptr_SymUnDName = NULL;
extern void *ptr_SymUnDName64;
void *ptr_SymUnDName64 = NULL;
extern void *ptr_SymUnloadModule;
void *ptr_SymUnloadModule = NULL;
extern void *ptr_SymUnloadModule64;
void *ptr_SymUnloadModule64 = NULL;
extern void *ptr_TouchFileTimes;
void *ptr_TouchFileTimes = NULL;
extern void *ptr_UnDecorateSymbolName;
void *ptr_UnDecorateSymbolName = NULL;
extern void *ptr_UnMapAndLoad;
void *ptr_UnMapAndLoad = NULL;
extern void *ptr_UpdateDebugInfoFile;
void *ptr_UpdateDebugInfoFile = NULL;
extern void *ptr_UpdateDebugInfoFileEx;
void *ptr_UpdateDebugInfoFileEx = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\imagehlp.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_BindImage = (__vartype(ptr_BindImage))GetProcAddress(hModule, "BindImage");
   ptr_BindImageEx = (__vartype(ptr_BindImageEx))GetProcAddress(hModule, "BindImageEx");
   ptr_CheckSumMappedFile = (__vartype(ptr_CheckSumMappedFile))GetProcAddress(hModule, "CheckSumMappedFile");
   ptr_EnumerateLoadedModules = (__vartype(ptr_EnumerateLoadedModules))GetProcAddress(hModule, "EnumerateLoadedModules");
   ptr_EnumerateLoadedModules64 = (__vartype(ptr_EnumerateLoadedModules64))GetProcAddress(hModule, "EnumerateLoadedModules64");
   ptr_EnumerateLoadedModulesEx = (__vartype(ptr_EnumerateLoadedModulesEx))GetProcAddress(hModule, "EnumerateLoadedModulesEx");
   ptr_EnumerateLoadedModulesExW = (__vartype(ptr_EnumerateLoadedModulesExW))GetProcAddress(hModule, "EnumerateLoadedModulesExW");
   ptr_EnumerateLoadedModulesW64 = (__vartype(ptr_EnumerateLoadedModulesW64))GetProcAddress(hModule, "EnumerateLoadedModulesW64");
   ptr_FindDebugInfoFile = (__vartype(ptr_FindDebugInfoFile))GetProcAddress(hModule, "FindDebugInfoFile");
   ptr_FindDebugInfoFileEx = (__vartype(ptr_FindDebugInfoFileEx))GetProcAddress(hModule, "FindDebugInfoFileEx");
   ptr_FindExecutableImage = (__vartype(ptr_FindExecutableImage))GetProcAddress(hModule, "FindExecutableImage");
   ptr_FindExecutableImageEx = (__vartype(ptr_FindExecutableImageEx))GetProcAddress(hModule, "FindExecutableImageEx");
   ptr_FindFileInPath = (__vartype(ptr_FindFileInPath))GetProcAddress(hModule, "FindFileInPath");
   ptr_FindFileInSearchPath = (__vartype(ptr_FindFileInSearchPath))GetProcAddress(hModule, "FindFileInSearchPath");
   ptr_GetImageConfigInformation = (__vartype(ptr_GetImageConfigInformation))GetProcAddress(hModule, "GetImageConfigInformation");
   ptr_GetImageUnusedHeaderBytes = (__vartype(ptr_GetImageUnusedHeaderBytes))GetProcAddress(hModule, "GetImageUnusedHeaderBytes");
   ptr_GetTimestampForLoadedLibrary = (__vartype(ptr_GetTimestampForLoadedLibrary))GetProcAddress(hModule, "GetTimestampForLoadedLibrary");
   ptr_ImageAddCertificate = (__vartype(ptr_ImageAddCertificate))GetProcAddress(hModule, "ImageAddCertificate");
   ptr_ImageDirectoryEntryToData = (__vartype(ptr_ImageDirectoryEntryToData))GetProcAddress(hModule, "ImageDirectoryEntryToData");
   ptr_ImageDirectoryEntryToDataEx = (__vartype(ptr_ImageDirectoryEntryToDataEx))GetProcAddress(hModule, "ImageDirectoryEntryToDataEx");
   ptr_ImageEnumerateCertificates = (__vartype(ptr_ImageEnumerateCertificates))GetProcAddress(hModule, "ImageEnumerateCertificates");
   ptr_ImageGetCertificateData = (__vartype(ptr_ImageGetCertificateData))GetProcAddress(hModule, "ImageGetCertificateData");
   ptr_ImageGetCertificateHeader = (__vartype(ptr_ImageGetCertificateHeader))GetProcAddress(hModule, "ImageGetCertificateHeader");
   ptr_ImageGetDigestStream = (__vartype(ptr_ImageGetDigestStream))GetProcAddress(hModule, "ImageGetDigestStream");
   ptr_ImageLoad = (__vartype(ptr_ImageLoad))GetProcAddress(hModule, "ImageLoad");
   ptr_ImageNtHeader = (__vartype(ptr_ImageNtHeader))GetProcAddress(hModule, "ImageNtHeader");
   ptr_ImageRemoveCertificate = (__vartype(ptr_ImageRemoveCertificate))GetProcAddress(hModule, "ImageRemoveCertificate");
   ptr_ImageRvaToSection = (__vartype(ptr_ImageRvaToSection))GetProcAddress(hModule, "ImageRvaToSection");
   ptr_ImageRvaToVa = (__vartype(ptr_ImageRvaToVa))GetProcAddress(hModule, "ImageRvaToVa");
   ptr_ImageUnload = (__vartype(ptr_ImageUnload))GetProcAddress(hModule, "ImageUnload");
   ptr_ImagehlpApiVersion = (__vartype(ptr_ImagehlpApiVersion))GetProcAddress(hModule, "ImagehlpApiVersion");
   ptr_ImagehlpApiVersionEx = (__vartype(ptr_ImagehlpApiVersionEx))GetProcAddress(hModule, "ImagehlpApiVersionEx");
   ptr_MakeSureDirectoryPathExists = (__vartype(ptr_MakeSureDirectoryPathExists))GetProcAddress(hModule, "MakeSureDirectoryPathExists");
   ptr_MapAndLoad = (__vartype(ptr_MapAndLoad))GetProcAddress(hModule, "MapAndLoad");
   ptr_MapFileAndCheckSumA = (__vartype(ptr_MapFileAndCheckSumA))GetProcAddress(hModule, "MapFileAndCheckSumA");
   ptr_MapFileAndCheckSumW = (__vartype(ptr_MapFileAndCheckSumW))GetProcAddress(hModule, "MapFileAndCheckSumW");
   ptr_ReBaseImage = (__vartype(ptr_ReBaseImage))GetProcAddress(hModule, "ReBaseImage");
   ptr_ReBaseImage64 = (__vartype(ptr_ReBaseImage64))GetProcAddress(hModule, "ReBaseImage64");
   ptr_RemovePrivateCvSymbolic = (__vartype(ptr_RemovePrivateCvSymbolic))GetProcAddress(hModule, "RemovePrivateCvSymbolic");
   ptr_RemovePrivateCvSymbolicEx = (__vartype(ptr_RemovePrivateCvSymbolicEx))GetProcAddress(hModule, "RemovePrivateCvSymbolicEx");
   ptr_RemoveRelocations = (__vartype(ptr_RemoveRelocations))GetProcAddress(hModule, "RemoveRelocations");
   ptr_SearchTreeForFile = (__vartype(ptr_SearchTreeForFile))GetProcAddress(hModule, "SearchTreeForFile");
   ptr_SetImageConfigInformation = (__vartype(ptr_SetImageConfigInformation))GetProcAddress(hModule, "SetImageConfigInformation");
   ptr_SplitSymbols = (__vartype(ptr_SplitSymbols))GetProcAddress(hModule, "SplitSymbols");
   ptr_StackWalk = (__vartype(ptr_StackWalk))GetProcAddress(hModule, "StackWalk");
   ptr_StackWalk64 = (__vartype(ptr_StackWalk64))GetProcAddress(hModule, "StackWalk64");
   ptr_SymCleanup = (__vartype(ptr_SymCleanup))GetProcAddress(hModule, "SymCleanup");
   ptr_SymEnumSym = (__vartype(ptr_SymEnumSym))GetProcAddress(hModule, "SymEnumSym");
   ptr_SymEnumSymbols = (__vartype(ptr_SymEnumSymbols))GetProcAddress(hModule, "SymEnumSymbols");
   ptr_SymEnumSymbolsForAddr = (__vartype(ptr_SymEnumSymbolsForAddr))GetProcAddress(hModule, "SymEnumSymbolsForAddr");
   ptr_SymEnumTypes = (__vartype(ptr_SymEnumTypes))GetProcAddress(hModule, "SymEnumTypes");
   ptr_SymEnumTypesByName = (__vartype(ptr_SymEnumTypesByName))GetProcAddress(hModule, "SymEnumTypesByName");
   ptr_SymEnumTypesByNameW = (__vartype(ptr_SymEnumTypesByNameW))GetProcAddress(hModule, "SymEnumTypesByNameW");
   ptr_SymEnumTypesW = (__vartype(ptr_SymEnumTypesW))GetProcAddress(hModule, "SymEnumTypesW");
   ptr_SymEnumerateModules = (__vartype(ptr_SymEnumerateModules))GetProcAddress(hModule, "SymEnumerateModules");
   ptr_SymEnumerateModules64 = (__vartype(ptr_SymEnumerateModules64))GetProcAddress(hModule, "SymEnumerateModules64");
   ptr_SymEnumerateSymbols = (__vartype(ptr_SymEnumerateSymbols))GetProcAddress(hModule, "SymEnumerateSymbols");
   ptr_SymEnumerateSymbols64 = (__vartype(ptr_SymEnumerateSymbols64))GetProcAddress(hModule, "SymEnumerateSymbols64");
   ptr_SymEnumerateSymbolsW = (__vartype(ptr_SymEnumerateSymbolsW))GetProcAddress(hModule, "SymEnumerateSymbolsW");
   ptr_SymEnumerateSymbolsW64 = (__vartype(ptr_SymEnumerateSymbolsW64))GetProcAddress(hModule, "SymEnumerateSymbolsW64");
   ptr_SymFindFileInPath = (__vartype(ptr_SymFindFileInPath))GetProcAddress(hModule, "SymFindFileInPath");
   ptr_SymFindFileInPathW = (__vartype(ptr_SymFindFileInPathW))GetProcAddress(hModule, "SymFindFileInPathW");
   ptr_SymFromAddr = (__vartype(ptr_SymFromAddr))GetProcAddress(hModule, "SymFromAddr");
   ptr_SymFromName = (__vartype(ptr_SymFromName))GetProcAddress(hModule, "SymFromName");
   ptr_SymFunctionTableAccess = (__vartype(ptr_SymFunctionTableAccess))GetProcAddress(hModule, "SymFunctionTableAccess");
   ptr_SymFunctionTableAccess64 = (__vartype(ptr_SymFunctionTableAccess64))GetProcAddress(hModule, "SymFunctionTableAccess64");
   ptr_SymGetLineFromAddr = (__vartype(ptr_SymGetLineFromAddr))GetProcAddress(hModule, "SymGetLineFromAddr");
   ptr_SymGetLineFromAddr64 = (__vartype(ptr_SymGetLineFromAddr64))GetProcAddress(hModule, "SymGetLineFromAddr64");
   ptr_SymGetLineFromName = (__vartype(ptr_SymGetLineFromName))GetProcAddress(hModule, "SymGetLineFromName");
   ptr_SymGetLineFromName64 = (__vartype(ptr_SymGetLineFromName64))GetProcAddress(hModule, "SymGetLineFromName64");
   ptr_SymGetLineNext = (__vartype(ptr_SymGetLineNext))GetProcAddress(hModule, "SymGetLineNext");
   ptr_SymGetLineNext64 = (__vartype(ptr_SymGetLineNext64))GetProcAddress(hModule, "SymGetLineNext64");
   ptr_SymGetLinePrev = (__vartype(ptr_SymGetLinePrev))GetProcAddress(hModule, "SymGetLinePrev");
   ptr_SymGetLinePrev64 = (__vartype(ptr_SymGetLinePrev64))GetProcAddress(hModule, "SymGetLinePrev64");
   ptr_SymGetModuleBase = (__vartype(ptr_SymGetModuleBase))GetProcAddress(hModule, "SymGetModuleBase");
   ptr_SymGetModuleBase64 = (__vartype(ptr_SymGetModuleBase64))GetProcAddress(hModule, "SymGetModuleBase64");
   ptr_SymGetModuleInfo = (__vartype(ptr_SymGetModuleInfo))GetProcAddress(hModule, "SymGetModuleInfo");
   ptr_SymGetModuleInfo64 = (__vartype(ptr_SymGetModuleInfo64))GetProcAddress(hModule, "SymGetModuleInfo64");
   ptr_SymGetModuleInfoW = (__vartype(ptr_SymGetModuleInfoW))GetProcAddress(hModule, "SymGetModuleInfoW");
   ptr_SymGetModuleInfoW64 = (__vartype(ptr_SymGetModuleInfoW64))GetProcAddress(hModule, "SymGetModuleInfoW64");
   ptr_SymGetOptions = (__vartype(ptr_SymGetOptions))GetProcAddress(hModule, "SymGetOptions");
   ptr_SymGetSearchPath = (__vartype(ptr_SymGetSearchPath))GetProcAddress(hModule, "SymGetSearchPath");
   ptr_SymGetSourceFileFromTokenW = (__vartype(ptr_SymGetSourceFileFromTokenW))GetProcAddress(hModule, "SymGetSourceFileFromTokenW");
   ptr_SymGetSourceFileTokenW = (__vartype(ptr_SymGetSourceFileTokenW))GetProcAddress(hModule, "SymGetSourceFileTokenW");
   ptr_SymGetSourceVarFromTokenW = (__vartype(ptr_SymGetSourceVarFromTokenW))GetProcAddress(hModule, "SymGetSourceVarFromTokenW");
   ptr_SymGetSymFromAddr = (__vartype(ptr_SymGetSymFromAddr))GetProcAddress(hModule, "SymGetSymFromAddr");
   ptr_SymGetSymFromAddr64 = (__vartype(ptr_SymGetSymFromAddr64))GetProcAddress(hModule, "SymGetSymFromAddr64");
   ptr_SymGetSymFromName = (__vartype(ptr_SymGetSymFromName))GetProcAddress(hModule, "SymGetSymFromName");
   ptr_SymGetSymFromName64 = (__vartype(ptr_SymGetSymFromName64))GetProcAddress(hModule, "SymGetSymFromName64");
   ptr_SymGetSymNext = (__vartype(ptr_SymGetSymNext))GetProcAddress(hModule, "SymGetSymNext");
   ptr_SymGetSymNext64 = (__vartype(ptr_SymGetSymNext64))GetProcAddress(hModule, "SymGetSymNext64");
   ptr_SymGetSymPrev = (__vartype(ptr_SymGetSymPrev))GetProcAddress(hModule, "SymGetSymPrev");
   ptr_SymGetSymPrev64 = (__vartype(ptr_SymGetSymPrev64))GetProcAddress(hModule, "SymGetSymPrev64");
   ptr_SymGetSymbolFile = (__vartype(ptr_SymGetSymbolFile))GetProcAddress(hModule, "SymGetSymbolFile");
   ptr_SymGetSymbolFileW = (__vartype(ptr_SymGetSymbolFileW))GetProcAddress(hModule, "SymGetSymbolFileW");
   ptr_SymGetTypeFromName = (__vartype(ptr_SymGetTypeFromName))GetProcAddress(hModule, "SymGetTypeFromName");
   ptr_SymGetTypeFromNameW = (__vartype(ptr_SymGetTypeFromNameW))GetProcAddress(hModule, "SymGetTypeFromNameW");
   ptr_SymGetTypeInfo = (__vartype(ptr_SymGetTypeInfo))GetProcAddress(hModule, "SymGetTypeInfo");
   ptr_SymGetTypeInfoEx = (__vartype(ptr_SymGetTypeInfoEx))GetProcAddress(hModule, "SymGetTypeInfoEx");
   ptr_SymInitialize = (__vartype(ptr_SymInitialize))GetProcAddress(hModule, "SymInitialize");
   ptr_SymLoadModule = (__vartype(ptr_SymLoadModule))GetProcAddress(hModule, "SymLoadModule");
   ptr_SymLoadModule64 = (__vartype(ptr_SymLoadModule64))GetProcAddress(hModule, "SymLoadModule64");
   ptr_SymMatchFileName = (__vartype(ptr_SymMatchFileName))GetProcAddress(hModule, "SymMatchFileName");
   ptr_SymMatchFileNameW = (__vartype(ptr_SymMatchFileNameW))GetProcAddress(hModule, "SymMatchFileNameW");
   ptr_SymMatchString = (__vartype(ptr_SymMatchString))GetProcAddress(hModule, "SymMatchString");
   ptr_SymMatchStringA = (__vartype(ptr_SymMatchStringA))GetProcAddress(hModule, "SymMatchStringA");
   ptr_SymMatchStringW = (__vartype(ptr_SymMatchStringW))GetProcAddress(hModule, "SymMatchStringW");
   ptr_SymRegisterCallback = (__vartype(ptr_SymRegisterCallback))GetProcAddress(hModule, "SymRegisterCallback");
   ptr_SymRegisterCallback64 = (__vartype(ptr_SymRegisterCallback64))GetProcAddress(hModule, "SymRegisterCallback64");
   ptr_SymRegisterFunctionEntryCallback = (__vartype(ptr_SymRegisterFunctionEntryCallback))GetProcAddress(hModule, "SymRegisterFunctionEntryCallback");
   ptr_SymRegisterFunctionEntryCallback64 = (__vartype(ptr_SymRegisterFunctionEntryCallback64))GetProcAddress(hModule, "SymRegisterFunctionEntryCallback64");
   ptr_SymSetContext = (__vartype(ptr_SymSetContext))GetProcAddress(hModule, "SymSetContext");
   ptr_SymSetOptions = (__vartype(ptr_SymSetOptions))GetProcAddress(hModule, "SymSetOptions");
   ptr_SymSetScopeFromAddr = (__vartype(ptr_SymSetScopeFromAddr))GetProcAddress(hModule, "SymSetScopeFromAddr");
   ptr_SymSetScopeFromIndex = (__vartype(ptr_SymSetScopeFromIndex))GetProcAddress(hModule, "SymSetScopeFromIndex");
   ptr_SymSetSearchPath = (__vartype(ptr_SymSetSearchPath))GetProcAddress(hModule, "SymSetSearchPath");
   ptr_SymSrvGetFileIndexString = (__vartype(ptr_SymSrvGetFileIndexString))GetProcAddress(hModule, "SymSrvGetFileIndexString");
   ptr_SymSrvGetFileIndexStringW = (__vartype(ptr_SymSrvGetFileIndexStringW))GetProcAddress(hModule, "SymSrvGetFileIndexStringW");
   ptr_SymSrvGetFileIndexes = (__vartype(ptr_SymSrvGetFileIndexes))GetProcAddress(hModule, "SymSrvGetFileIndexes");
   ptr_SymSrvGetFileIndexesW = (__vartype(ptr_SymSrvGetFileIndexesW))GetProcAddress(hModule, "SymSrvGetFileIndexesW");
   ptr_SymUnDName = (__vartype(ptr_SymUnDName))GetProcAddress(hModule, "SymUnDName");
   ptr_SymUnDName64 = (__vartype(ptr_SymUnDName64))GetProcAddress(hModule, "SymUnDName64");
   ptr_SymUnloadModule = (__vartype(ptr_SymUnloadModule))GetProcAddress(hModule, "SymUnloadModule");
   ptr_SymUnloadModule64 = (__vartype(ptr_SymUnloadModule64))GetProcAddress(hModule, "SymUnloadModule64");
   ptr_TouchFileTimes = (__vartype(ptr_TouchFileTimes))GetProcAddress(hModule, "TouchFileTimes");
   ptr_UnDecorateSymbolName = (__vartype(ptr_UnDecorateSymbolName))GetProcAddress(hModule, "UnDecorateSymbolName");
   ptr_UnMapAndLoad = (__vartype(ptr_UnMapAndLoad))GetProcAddress(hModule, "UnMapAndLoad");
   ptr_UpdateDebugInfoFile = (__vartype(ptr_UpdateDebugInfoFile))GetProcAddress(hModule, "UpdateDebugInfoFile");
   ptr_UpdateDebugInfoFileEx = (__vartype(ptr_UpdateDebugInfoFileEx))GetProcAddress(hModule, "UpdateDebugInfoFileEx");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

