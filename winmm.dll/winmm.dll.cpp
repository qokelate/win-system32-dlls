#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_CloseDriver;
void *ptr_CloseDriver = NULL;
extern void *ptr_DefDriverProc;
void *ptr_DefDriverProc = NULL;
extern void *ptr_DriverCallback;
void *ptr_DriverCallback = NULL;
extern void *ptr_DrvGetModuleHandle;
void *ptr_DrvGetModuleHandle = NULL;
extern void *ptr_GetDriverModuleHandle;
void *ptr_GetDriverModuleHandle = NULL;
extern void *ptr_OpenDriver;
void *ptr_OpenDriver = NULL;
extern void *ptr_PlaySound;
void *ptr_PlaySound = NULL;
extern void *ptr_PlaySoundA;
void *ptr_PlaySoundA = NULL;
extern void *ptr_PlaySoundW;
void *ptr_PlaySoundW = NULL;
extern void *ptr_SendDriverMessage;
void *ptr_SendDriverMessage = NULL;
extern void *ptr_WOWAppExit;
void *ptr_WOWAppExit = NULL;
extern void *ptr_auxGetDevCapsA;
void *ptr_auxGetDevCapsA = NULL;
extern void *ptr_auxGetDevCapsW;
void *ptr_auxGetDevCapsW = NULL;
extern void *ptr_auxGetNumDevs;
void *ptr_auxGetNumDevs = NULL;
extern void *ptr_auxGetVolume;
void *ptr_auxGetVolume = NULL;
extern void *ptr_auxOutMessage;
void *ptr_auxOutMessage = NULL;
extern void *ptr_auxSetVolume;
void *ptr_auxSetVolume = NULL;
extern void *ptr_joyConfigChanged;
void *ptr_joyConfigChanged = NULL;
extern void *ptr_joyGetDevCapsA;
void *ptr_joyGetDevCapsA = NULL;
extern void *ptr_joyGetDevCapsW;
void *ptr_joyGetDevCapsW = NULL;
extern void *ptr_joyGetNumDevs;
void *ptr_joyGetNumDevs = NULL;
extern void *ptr_joyGetPos;
void *ptr_joyGetPos = NULL;
extern void *ptr_joyGetPosEx;
void *ptr_joyGetPosEx = NULL;
extern void *ptr_joyGetThreshold;
void *ptr_joyGetThreshold = NULL;
extern void *ptr_joyReleaseCapture;
void *ptr_joyReleaseCapture = NULL;
extern void *ptr_joySetCapture;
void *ptr_joySetCapture = NULL;
extern void *ptr_joySetThreshold;
void *ptr_joySetThreshold = NULL;
extern void *ptr_mciDriverNotify;
void *ptr_mciDriverNotify = NULL;
extern void *ptr_mciDriverYield;
void *ptr_mciDriverYield = NULL;
extern void *ptr_mciExecute;
void *ptr_mciExecute = NULL;
extern void *ptr_mciFreeCommandResource;
void *ptr_mciFreeCommandResource = NULL;
extern void *ptr_mciGetCreatorTask;
void *ptr_mciGetCreatorTask = NULL;
extern void *ptr_mciGetDeviceIDA;
void *ptr_mciGetDeviceIDA = NULL;
extern void *ptr_mciGetDeviceIDFromElementIDA;
void *ptr_mciGetDeviceIDFromElementIDA = NULL;
extern void *ptr_mciGetDeviceIDFromElementIDW;
void *ptr_mciGetDeviceIDFromElementIDW = NULL;
extern void *ptr_mciGetDeviceIDW;
void *ptr_mciGetDeviceIDW = NULL;
extern void *ptr_mciGetDriverData;
void *ptr_mciGetDriverData = NULL;
extern void *ptr_mciGetErrorStringA;
void *ptr_mciGetErrorStringA = NULL;
extern void *ptr_mciGetErrorStringW;
void *ptr_mciGetErrorStringW = NULL;
extern void *ptr_mciGetYieldProc;
void *ptr_mciGetYieldProc = NULL;
extern void *ptr_mciLoadCommandResource;
void *ptr_mciLoadCommandResource = NULL;
extern void *ptr_mciSendCommandA;
void *ptr_mciSendCommandA = NULL;
extern void *ptr_mciSendCommandW;
void *ptr_mciSendCommandW = NULL;
extern void *ptr_mciSendStringA;
void *ptr_mciSendStringA = NULL;
extern void *ptr_mciSendStringW;
void *ptr_mciSendStringW = NULL;
extern void *ptr_mciSetDriverData;
void *ptr_mciSetDriverData = NULL;
extern void *ptr_mciSetYieldProc;
void *ptr_mciSetYieldProc = NULL;
extern void *ptr_midiConnect;
void *ptr_midiConnect = NULL;
extern void *ptr_midiDisconnect;
void *ptr_midiDisconnect = NULL;
extern void *ptr_midiInAddBuffer;
void *ptr_midiInAddBuffer = NULL;
extern void *ptr_midiInClose;
void *ptr_midiInClose = NULL;
extern void *ptr_midiInGetDevCapsA;
void *ptr_midiInGetDevCapsA = NULL;
extern void *ptr_midiInGetDevCapsW;
void *ptr_midiInGetDevCapsW = NULL;
extern void *ptr_midiInGetErrorTextA;
void *ptr_midiInGetErrorTextA = NULL;
extern void *ptr_midiInGetErrorTextW;
void *ptr_midiInGetErrorTextW = NULL;
extern void *ptr_midiInGetID;
void *ptr_midiInGetID = NULL;
extern void *ptr_midiInGetNumDevs;
void *ptr_midiInGetNumDevs = NULL;
extern void *ptr_midiInMessage;
void *ptr_midiInMessage = NULL;
extern void *ptr_midiInOpen;
void *ptr_midiInOpen = NULL;
extern void *ptr_midiInPrepareHeader;
void *ptr_midiInPrepareHeader = NULL;
extern void *ptr_midiInReset;
void *ptr_midiInReset = NULL;
extern void *ptr_midiInStart;
void *ptr_midiInStart = NULL;
extern void *ptr_midiInStop;
void *ptr_midiInStop = NULL;
extern void *ptr_midiInUnprepareHeader;
void *ptr_midiInUnprepareHeader = NULL;
extern void *ptr_midiOutCacheDrumPatches;
void *ptr_midiOutCacheDrumPatches = NULL;
extern void *ptr_midiOutCachePatches;
void *ptr_midiOutCachePatches = NULL;
extern void *ptr_midiOutClose;
void *ptr_midiOutClose = NULL;
extern void *ptr_midiOutGetDevCapsA;
void *ptr_midiOutGetDevCapsA = NULL;
extern void *ptr_midiOutGetDevCapsW;
void *ptr_midiOutGetDevCapsW = NULL;
extern void *ptr_midiOutGetErrorTextA;
void *ptr_midiOutGetErrorTextA = NULL;
extern void *ptr_midiOutGetErrorTextW;
void *ptr_midiOutGetErrorTextW = NULL;
extern void *ptr_midiOutGetID;
void *ptr_midiOutGetID = NULL;
extern void *ptr_midiOutGetNumDevs;
void *ptr_midiOutGetNumDevs = NULL;
extern void *ptr_midiOutGetVolume;
void *ptr_midiOutGetVolume = NULL;
extern void *ptr_midiOutLongMsg;
void *ptr_midiOutLongMsg = NULL;
extern void *ptr_midiOutMessage;
void *ptr_midiOutMessage = NULL;
extern void *ptr_midiOutOpen;
void *ptr_midiOutOpen = NULL;
extern void *ptr_midiOutPrepareHeader;
void *ptr_midiOutPrepareHeader = NULL;
extern void *ptr_midiOutReset;
void *ptr_midiOutReset = NULL;
extern void *ptr_midiOutSetVolume;
void *ptr_midiOutSetVolume = NULL;
extern void *ptr_midiOutShortMsg;
void *ptr_midiOutShortMsg = NULL;
extern void *ptr_midiOutUnprepareHeader;
void *ptr_midiOutUnprepareHeader = NULL;
extern void *ptr_midiStreamClose;
void *ptr_midiStreamClose = NULL;
extern void *ptr_midiStreamOpen;
void *ptr_midiStreamOpen = NULL;
extern void *ptr_midiStreamOut;
void *ptr_midiStreamOut = NULL;
extern void *ptr_midiStreamPause;
void *ptr_midiStreamPause = NULL;
extern void *ptr_midiStreamPosition;
void *ptr_midiStreamPosition = NULL;
extern void *ptr_midiStreamProperty;
void *ptr_midiStreamProperty = NULL;
extern void *ptr_midiStreamRestart;
void *ptr_midiStreamRestart = NULL;
extern void *ptr_midiStreamStop;
void *ptr_midiStreamStop = NULL;
extern void *ptr_mixerClose;
void *ptr_mixerClose = NULL;
extern void *ptr_mixerGetControlDetailsA;
void *ptr_mixerGetControlDetailsA = NULL;
extern void *ptr_mixerGetControlDetailsW;
void *ptr_mixerGetControlDetailsW = NULL;
extern void *ptr_mixerGetDevCapsA;
void *ptr_mixerGetDevCapsA = NULL;
extern void *ptr_mixerGetDevCapsW;
void *ptr_mixerGetDevCapsW = NULL;
extern void *ptr_mixerGetID;
void *ptr_mixerGetID = NULL;
extern void *ptr_mixerGetLineControlsA;
void *ptr_mixerGetLineControlsA = NULL;
extern void *ptr_mixerGetLineControlsW;
void *ptr_mixerGetLineControlsW = NULL;
extern void *ptr_mixerGetLineInfoA;
void *ptr_mixerGetLineInfoA = NULL;
extern void *ptr_mixerGetLineInfoW;
void *ptr_mixerGetLineInfoW = NULL;
extern void *ptr_mixerGetNumDevs;
void *ptr_mixerGetNumDevs = NULL;
extern void *ptr_mixerMessage;
void *ptr_mixerMessage = NULL;
extern void *ptr_mixerOpen;
void *ptr_mixerOpen = NULL;
extern void *ptr_mixerSetControlDetails;
void *ptr_mixerSetControlDetails = NULL;
extern void *ptr_mmDrvInstall;
void *ptr_mmDrvInstall = NULL;
extern void *ptr_mmGetCurrentTask;
void *ptr_mmGetCurrentTask = NULL;
extern void *ptr_mmTaskBlock;
void *ptr_mmTaskBlock = NULL;
extern void *ptr_mmTaskCreate;
void *ptr_mmTaskCreate = NULL;
extern void *ptr_mmTaskSignal;
void *ptr_mmTaskSignal = NULL;
extern void *ptr_mmTaskYield;
void *ptr_mmTaskYield = NULL;
extern void *ptr_mmioAdvance;
void *ptr_mmioAdvance = NULL;
extern void *ptr_mmioAscend;
void *ptr_mmioAscend = NULL;
extern void *ptr_mmioClose;
void *ptr_mmioClose = NULL;
extern void *ptr_mmioCreateChunk;
void *ptr_mmioCreateChunk = NULL;
extern void *ptr_mmioDescend;
void *ptr_mmioDescend = NULL;
extern void *ptr_mmioFlush;
void *ptr_mmioFlush = NULL;
extern void *ptr_mmioGetInfo;
void *ptr_mmioGetInfo = NULL;
extern void *ptr_mmioInstallIOProcA;
void *ptr_mmioInstallIOProcA = NULL;
extern void *ptr_mmioInstallIOProcW;
void *ptr_mmioInstallIOProcW = NULL;
extern void *ptr_mmioOpenA;
void *ptr_mmioOpenA = NULL;
extern void *ptr_mmioOpenW;
void *ptr_mmioOpenW = NULL;
extern void *ptr_mmioRead;
void *ptr_mmioRead = NULL;
extern void *ptr_mmioRenameA;
void *ptr_mmioRenameA = NULL;
extern void *ptr_mmioRenameW;
void *ptr_mmioRenameW = NULL;
extern void *ptr_mmioSeek;
void *ptr_mmioSeek = NULL;
extern void *ptr_mmioSendMessage;
void *ptr_mmioSendMessage = NULL;
extern void *ptr_mmioSetBuffer;
void *ptr_mmioSetBuffer = NULL;
extern void *ptr_mmioSetInfo;
void *ptr_mmioSetInfo = NULL;
extern void *ptr_mmioStringToFOURCCA;
void *ptr_mmioStringToFOURCCA = NULL;
extern void *ptr_mmioStringToFOURCCW;
void *ptr_mmioStringToFOURCCW = NULL;
extern void *ptr_mmioWrite;
void *ptr_mmioWrite = NULL;
extern void *ptr_mmsystemGetVersion;
void *ptr_mmsystemGetVersion = NULL;
extern void *ptr_sndPlaySoundA;
void *ptr_sndPlaySoundA = NULL;
extern void *ptr_sndPlaySoundW;
void *ptr_sndPlaySoundW = NULL;
extern void *ptr_timeBeginPeriod;
void *ptr_timeBeginPeriod = NULL;
extern void *ptr_timeEndPeriod;
void *ptr_timeEndPeriod = NULL;
extern void *ptr_timeGetDevCaps;
void *ptr_timeGetDevCaps = NULL;
extern void *ptr_timeGetSystemTime;
void *ptr_timeGetSystemTime = NULL;
extern void *ptr_timeGetTime;
void *ptr_timeGetTime = NULL;
extern void *ptr_timeKillEvent;
void *ptr_timeKillEvent = NULL;
extern void *ptr_timeSetEvent;
void *ptr_timeSetEvent = NULL;
extern void *ptr_waveInAddBuffer;
void *ptr_waveInAddBuffer = NULL;
extern void *ptr_waveInClose;
void *ptr_waveInClose = NULL;
extern void *ptr_waveInGetDevCapsA;
void *ptr_waveInGetDevCapsA = NULL;
extern void *ptr_waveInGetDevCapsW;
void *ptr_waveInGetDevCapsW = NULL;
extern void *ptr_waveInGetErrorTextA;
void *ptr_waveInGetErrorTextA = NULL;
extern void *ptr_waveInGetErrorTextW;
void *ptr_waveInGetErrorTextW = NULL;
extern void *ptr_waveInGetID;
void *ptr_waveInGetID = NULL;
extern void *ptr_waveInGetNumDevs;
void *ptr_waveInGetNumDevs = NULL;
extern void *ptr_waveInGetPosition;
void *ptr_waveInGetPosition = NULL;
extern void *ptr_waveInMessage;
void *ptr_waveInMessage = NULL;
extern void *ptr_waveInOpen;
void *ptr_waveInOpen = NULL;
extern void *ptr_waveInPrepareHeader;
void *ptr_waveInPrepareHeader = NULL;
extern void *ptr_waveInReset;
void *ptr_waveInReset = NULL;
extern void *ptr_waveInStart;
void *ptr_waveInStart = NULL;
extern void *ptr_waveInStop;
void *ptr_waveInStop = NULL;
extern void *ptr_waveInUnprepareHeader;
void *ptr_waveInUnprepareHeader = NULL;
extern void *ptr_waveOutBreakLoop;
void *ptr_waveOutBreakLoop = NULL;
extern void *ptr_waveOutClose;
void *ptr_waveOutClose = NULL;
extern void *ptr_waveOutGetDevCapsA;
void *ptr_waveOutGetDevCapsA = NULL;
extern void *ptr_waveOutGetDevCapsW;
void *ptr_waveOutGetDevCapsW = NULL;
extern void *ptr_waveOutGetErrorTextA;
void *ptr_waveOutGetErrorTextA = NULL;
extern void *ptr_waveOutGetErrorTextW;
void *ptr_waveOutGetErrorTextW = NULL;
extern void *ptr_waveOutGetID;
void *ptr_waveOutGetID = NULL;
extern void *ptr_waveOutGetNumDevs;
void *ptr_waveOutGetNumDevs = NULL;
extern void *ptr_waveOutGetPitch;
void *ptr_waveOutGetPitch = NULL;
extern void *ptr_waveOutGetPlaybackRate;
void *ptr_waveOutGetPlaybackRate = NULL;
extern void *ptr_waveOutGetPosition;
void *ptr_waveOutGetPosition = NULL;
extern void *ptr_waveOutGetVolume;
void *ptr_waveOutGetVolume = NULL;
extern void *ptr_waveOutMessage;
void *ptr_waveOutMessage = NULL;
extern void *ptr_waveOutOpen;
void *ptr_waveOutOpen = NULL;
extern void *ptr_waveOutPause;
void *ptr_waveOutPause = NULL;
extern void *ptr_waveOutPrepareHeader;
void *ptr_waveOutPrepareHeader = NULL;
extern void *ptr_waveOutReset;
void *ptr_waveOutReset = NULL;
extern void *ptr_waveOutRestart;
void *ptr_waveOutRestart = NULL;
extern void *ptr_waveOutSetPitch;
void *ptr_waveOutSetPitch = NULL;
extern void *ptr_waveOutSetPlaybackRate;
void *ptr_waveOutSetPlaybackRate = NULL;
extern void *ptr_waveOutSetVolume;
void *ptr_waveOutSetVolume = NULL;
extern void *ptr_waveOutUnprepareHeader;
void *ptr_waveOutUnprepareHeader = NULL;
extern void *ptr_waveOutWrite;
void *ptr_waveOutWrite = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\winmm.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_CloseDriver = (__vartype(ptr_CloseDriver))GetProcAddress(hModule, "CloseDriver");
   ptr_DefDriverProc = (__vartype(ptr_DefDriverProc))GetProcAddress(hModule, "DefDriverProc");
   ptr_DriverCallback = (__vartype(ptr_DriverCallback))GetProcAddress(hModule, "DriverCallback");
   ptr_DrvGetModuleHandle = (__vartype(ptr_DrvGetModuleHandle))GetProcAddress(hModule, "DrvGetModuleHandle");
   ptr_GetDriverModuleHandle = (__vartype(ptr_GetDriverModuleHandle))GetProcAddress(hModule, "GetDriverModuleHandle");
   ptr_OpenDriver = (__vartype(ptr_OpenDriver))GetProcAddress(hModule, "OpenDriver");
   ptr_PlaySound = (__vartype(ptr_PlaySound))GetProcAddress(hModule, "PlaySound");
   ptr_PlaySoundA = (__vartype(ptr_PlaySoundA))GetProcAddress(hModule, "PlaySoundA");
   ptr_PlaySoundW = (__vartype(ptr_PlaySoundW))GetProcAddress(hModule, "PlaySoundW");
   ptr_SendDriverMessage = (__vartype(ptr_SendDriverMessage))GetProcAddress(hModule, "SendDriverMessage");
   ptr_WOWAppExit = (__vartype(ptr_WOWAppExit))GetProcAddress(hModule, "WOWAppExit");
   ptr_auxGetDevCapsA = (__vartype(ptr_auxGetDevCapsA))GetProcAddress(hModule, "auxGetDevCapsA");
   ptr_auxGetDevCapsW = (__vartype(ptr_auxGetDevCapsW))GetProcAddress(hModule, "auxGetDevCapsW");
   ptr_auxGetNumDevs = (__vartype(ptr_auxGetNumDevs))GetProcAddress(hModule, "auxGetNumDevs");
   ptr_auxGetVolume = (__vartype(ptr_auxGetVolume))GetProcAddress(hModule, "auxGetVolume");
   ptr_auxOutMessage = (__vartype(ptr_auxOutMessage))GetProcAddress(hModule, "auxOutMessage");
   ptr_auxSetVolume = (__vartype(ptr_auxSetVolume))GetProcAddress(hModule, "auxSetVolume");
   ptr_joyConfigChanged = (__vartype(ptr_joyConfigChanged))GetProcAddress(hModule, "joyConfigChanged");
   ptr_joyGetDevCapsA = (__vartype(ptr_joyGetDevCapsA))GetProcAddress(hModule, "joyGetDevCapsA");
   ptr_joyGetDevCapsW = (__vartype(ptr_joyGetDevCapsW))GetProcAddress(hModule, "joyGetDevCapsW");
   ptr_joyGetNumDevs = (__vartype(ptr_joyGetNumDevs))GetProcAddress(hModule, "joyGetNumDevs");
   ptr_joyGetPos = (__vartype(ptr_joyGetPos))GetProcAddress(hModule, "joyGetPos");
   ptr_joyGetPosEx = (__vartype(ptr_joyGetPosEx))GetProcAddress(hModule, "joyGetPosEx");
   ptr_joyGetThreshold = (__vartype(ptr_joyGetThreshold))GetProcAddress(hModule, "joyGetThreshold");
   ptr_joyReleaseCapture = (__vartype(ptr_joyReleaseCapture))GetProcAddress(hModule, "joyReleaseCapture");
   ptr_joySetCapture = (__vartype(ptr_joySetCapture))GetProcAddress(hModule, "joySetCapture");
   ptr_joySetThreshold = (__vartype(ptr_joySetThreshold))GetProcAddress(hModule, "joySetThreshold");
   ptr_mciDriverNotify = (__vartype(ptr_mciDriverNotify))GetProcAddress(hModule, "mciDriverNotify");
   ptr_mciDriverYield = (__vartype(ptr_mciDriverYield))GetProcAddress(hModule, "mciDriverYield");
   ptr_mciExecute = (__vartype(ptr_mciExecute))GetProcAddress(hModule, "mciExecute");
   ptr_mciFreeCommandResource = (__vartype(ptr_mciFreeCommandResource))GetProcAddress(hModule, "mciFreeCommandResource");
   ptr_mciGetCreatorTask = (__vartype(ptr_mciGetCreatorTask))GetProcAddress(hModule, "mciGetCreatorTask");
   ptr_mciGetDeviceIDA = (__vartype(ptr_mciGetDeviceIDA))GetProcAddress(hModule, "mciGetDeviceIDA");
   ptr_mciGetDeviceIDFromElementIDA = (__vartype(ptr_mciGetDeviceIDFromElementIDA))GetProcAddress(hModule, "mciGetDeviceIDFromElementIDA");
   ptr_mciGetDeviceIDFromElementIDW = (__vartype(ptr_mciGetDeviceIDFromElementIDW))GetProcAddress(hModule, "mciGetDeviceIDFromElementIDW");
   ptr_mciGetDeviceIDW = (__vartype(ptr_mciGetDeviceIDW))GetProcAddress(hModule, "mciGetDeviceIDW");
   ptr_mciGetDriverData = (__vartype(ptr_mciGetDriverData))GetProcAddress(hModule, "mciGetDriverData");
   ptr_mciGetErrorStringA = (__vartype(ptr_mciGetErrorStringA))GetProcAddress(hModule, "mciGetErrorStringA");
   ptr_mciGetErrorStringW = (__vartype(ptr_mciGetErrorStringW))GetProcAddress(hModule, "mciGetErrorStringW");
   ptr_mciGetYieldProc = (__vartype(ptr_mciGetYieldProc))GetProcAddress(hModule, "mciGetYieldProc");
   ptr_mciLoadCommandResource = (__vartype(ptr_mciLoadCommandResource))GetProcAddress(hModule, "mciLoadCommandResource");
   ptr_mciSendCommandA = (__vartype(ptr_mciSendCommandA))GetProcAddress(hModule, "mciSendCommandA");
   ptr_mciSendCommandW = (__vartype(ptr_mciSendCommandW))GetProcAddress(hModule, "mciSendCommandW");
   ptr_mciSendStringA = (__vartype(ptr_mciSendStringA))GetProcAddress(hModule, "mciSendStringA");
   ptr_mciSendStringW = (__vartype(ptr_mciSendStringW))GetProcAddress(hModule, "mciSendStringW");
   ptr_mciSetDriverData = (__vartype(ptr_mciSetDriverData))GetProcAddress(hModule, "mciSetDriverData");
   ptr_mciSetYieldProc = (__vartype(ptr_mciSetYieldProc))GetProcAddress(hModule, "mciSetYieldProc");
   ptr_midiConnect = (__vartype(ptr_midiConnect))GetProcAddress(hModule, "midiConnect");
   ptr_midiDisconnect = (__vartype(ptr_midiDisconnect))GetProcAddress(hModule, "midiDisconnect");
   ptr_midiInAddBuffer = (__vartype(ptr_midiInAddBuffer))GetProcAddress(hModule, "midiInAddBuffer");
   ptr_midiInClose = (__vartype(ptr_midiInClose))GetProcAddress(hModule, "midiInClose");
   ptr_midiInGetDevCapsA = (__vartype(ptr_midiInGetDevCapsA))GetProcAddress(hModule, "midiInGetDevCapsA");
   ptr_midiInGetDevCapsW = (__vartype(ptr_midiInGetDevCapsW))GetProcAddress(hModule, "midiInGetDevCapsW");
   ptr_midiInGetErrorTextA = (__vartype(ptr_midiInGetErrorTextA))GetProcAddress(hModule, "midiInGetErrorTextA");
   ptr_midiInGetErrorTextW = (__vartype(ptr_midiInGetErrorTextW))GetProcAddress(hModule, "midiInGetErrorTextW");
   ptr_midiInGetID = (__vartype(ptr_midiInGetID))GetProcAddress(hModule, "midiInGetID");
   ptr_midiInGetNumDevs = (__vartype(ptr_midiInGetNumDevs))GetProcAddress(hModule, "midiInGetNumDevs");
   ptr_midiInMessage = (__vartype(ptr_midiInMessage))GetProcAddress(hModule, "midiInMessage");
   ptr_midiInOpen = (__vartype(ptr_midiInOpen))GetProcAddress(hModule, "midiInOpen");
   ptr_midiInPrepareHeader = (__vartype(ptr_midiInPrepareHeader))GetProcAddress(hModule, "midiInPrepareHeader");
   ptr_midiInReset = (__vartype(ptr_midiInReset))GetProcAddress(hModule, "midiInReset");
   ptr_midiInStart = (__vartype(ptr_midiInStart))GetProcAddress(hModule, "midiInStart");
   ptr_midiInStop = (__vartype(ptr_midiInStop))GetProcAddress(hModule, "midiInStop");
   ptr_midiInUnprepareHeader = (__vartype(ptr_midiInUnprepareHeader))GetProcAddress(hModule, "midiInUnprepareHeader");
   ptr_midiOutCacheDrumPatches = (__vartype(ptr_midiOutCacheDrumPatches))GetProcAddress(hModule, "midiOutCacheDrumPatches");
   ptr_midiOutCachePatches = (__vartype(ptr_midiOutCachePatches))GetProcAddress(hModule, "midiOutCachePatches");
   ptr_midiOutClose = (__vartype(ptr_midiOutClose))GetProcAddress(hModule, "midiOutClose");
   ptr_midiOutGetDevCapsA = (__vartype(ptr_midiOutGetDevCapsA))GetProcAddress(hModule, "midiOutGetDevCapsA");
   ptr_midiOutGetDevCapsW = (__vartype(ptr_midiOutGetDevCapsW))GetProcAddress(hModule, "midiOutGetDevCapsW");
   ptr_midiOutGetErrorTextA = (__vartype(ptr_midiOutGetErrorTextA))GetProcAddress(hModule, "midiOutGetErrorTextA");
   ptr_midiOutGetErrorTextW = (__vartype(ptr_midiOutGetErrorTextW))GetProcAddress(hModule, "midiOutGetErrorTextW");
   ptr_midiOutGetID = (__vartype(ptr_midiOutGetID))GetProcAddress(hModule, "midiOutGetID");
   ptr_midiOutGetNumDevs = (__vartype(ptr_midiOutGetNumDevs))GetProcAddress(hModule, "midiOutGetNumDevs");
   ptr_midiOutGetVolume = (__vartype(ptr_midiOutGetVolume))GetProcAddress(hModule, "midiOutGetVolume");
   ptr_midiOutLongMsg = (__vartype(ptr_midiOutLongMsg))GetProcAddress(hModule, "midiOutLongMsg");
   ptr_midiOutMessage = (__vartype(ptr_midiOutMessage))GetProcAddress(hModule, "midiOutMessage");
   ptr_midiOutOpen = (__vartype(ptr_midiOutOpen))GetProcAddress(hModule, "midiOutOpen");
   ptr_midiOutPrepareHeader = (__vartype(ptr_midiOutPrepareHeader))GetProcAddress(hModule, "midiOutPrepareHeader");
   ptr_midiOutReset = (__vartype(ptr_midiOutReset))GetProcAddress(hModule, "midiOutReset");
   ptr_midiOutSetVolume = (__vartype(ptr_midiOutSetVolume))GetProcAddress(hModule, "midiOutSetVolume");
   ptr_midiOutShortMsg = (__vartype(ptr_midiOutShortMsg))GetProcAddress(hModule, "midiOutShortMsg");
   ptr_midiOutUnprepareHeader = (__vartype(ptr_midiOutUnprepareHeader))GetProcAddress(hModule, "midiOutUnprepareHeader");
   ptr_midiStreamClose = (__vartype(ptr_midiStreamClose))GetProcAddress(hModule, "midiStreamClose");
   ptr_midiStreamOpen = (__vartype(ptr_midiStreamOpen))GetProcAddress(hModule, "midiStreamOpen");
   ptr_midiStreamOut = (__vartype(ptr_midiStreamOut))GetProcAddress(hModule, "midiStreamOut");
   ptr_midiStreamPause = (__vartype(ptr_midiStreamPause))GetProcAddress(hModule, "midiStreamPause");
   ptr_midiStreamPosition = (__vartype(ptr_midiStreamPosition))GetProcAddress(hModule, "midiStreamPosition");
   ptr_midiStreamProperty = (__vartype(ptr_midiStreamProperty))GetProcAddress(hModule, "midiStreamProperty");
   ptr_midiStreamRestart = (__vartype(ptr_midiStreamRestart))GetProcAddress(hModule, "midiStreamRestart");
   ptr_midiStreamStop = (__vartype(ptr_midiStreamStop))GetProcAddress(hModule, "midiStreamStop");
   ptr_mixerClose = (__vartype(ptr_mixerClose))GetProcAddress(hModule, "mixerClose");
   ptr_mixerGetControlDetailsA = (__vartype(ptr_mixerGetControlDetailsA))GetProcAddress(hModule, "mixerGetControlDetailsA");
   ptr_mixerGetControlDetailsW = (__vartype(ptr_mixerGetControlDetailsW))GetProcAddress(hModule, "mixerGetControlDetailsW");
   ptr_mixerGetDevCapsA = (__vartype(ptr_mixerGetDevCapsA))GetProcAddress(hModule, "mixerGetDevCapsA");
   ptr_mixerGetDevCapsW = (__vartype(ptr_mixerGetDevCapsW))GetProcAddress(hModule, "mixerGetDevCapsW");
   ptr_mixerGetID = (__vartype(ptr_mixerGetID))GetProcAddress(hModule, "mixerGetID");
   ptr_mixerGetLineControlsA = (__vartype(ptr_mixerGetLineControlsA))GetProcAddress(hModule, "mixerGetLineControlsA");
   ptr_mixerGetLineControlsW = (__vartype(ptr_mixerGetLineControlsW))GetProcAddress(hModule, "mixerGetLineControlsW");
   ptr_mixerGetLineInfoA = (__vartype(ptr_mixerGetLineInfoA))GetProcAddress(hModule, "mixerGetLineInfoA");
   ptr_mixerGetLineInfoW = (__vartype(ptr_mixerGetLineInfoW))GetProcAddress(hModule, "mixerGetLineInfoW");
   ptr_mixerGetNumDevs = (__vartype(ptr_mixerGetNumDevs))GetProcAddress(hModule, "mixerGetNumDevs");
   ptr_mixerMessage = (__vartype(ptr_mixerMessage))GetProcAddress(hModule, "mixerMessage");
   ptr_mixerOpen = (__vartype(ptr_mixerOpen))GetProcAddress(hModule, "mixerOpen");
   ptr_mixerSetControlDetails = (__vartype(ptr_mixerSetControlDetails))GetProcAddress(hModule, "mixerSetControlDetails");
   ptr_mmDrvInstall = (__vartype(ptr_mmDrvInstall))GetProcAddress(hModule, "mmDrvInstall");
   ptr_mmGetCurrentTask = (__vartype(ptr_mmGetCurrentTask))GetProcAddress(hModule, "mmGetCurrentTask");
   ptr_mmTaskBlock = (__vartype(ptr_mmTaskBlock))GetProcAddress(hModule, "mmTaskBlock");
   ptr_mmTaskCreate = (__vartype(ptr_mmTaskCreate))GetProcAddress(hModule, "mmTaskCreate");
   ptr_mmTaskSignal = (__vartype(ptr_mmTaskSignal))GetProcAddress(hModule, "mmTaskSignal");
   ptr_mmTaskYield = (__vartype(ptr_mmTaskYield))GetProcAddress(hModule, "mmTaskYield");
   ptr_mmioAdvance = (__vartype(ptr_mmioAdvance))GetProcAddress(hModule, "mmioAdvance");
   ptr_mmioAscend = (__vartype(ptr_mmioAscend))GetProcAddress(hModule, "mmioAscend");
   ptr_mmioClose = (__vartype(ptr_mmioClose))GetProcAddress(hModule, "mmioClose");
   ptr_mmioCreateChunk = (__vartype(ptr_mmioCreateChunk))GetProcAddress(hModule, "mmioCreateChunk");
   ptr_mmioDescend = (__vartype(ptr_mmioDescend))GetProcAddress(hModule, "mmioDescend");
   ptr_mmioFlush = (__vartype(ptr_mmioFlush))GetProcAddress(hModule, "mmioFlush");
   ptr_mmioGetInfo = (__vartype(ptr_mmioGetInfo))GetProcAddress(hModule, "mmioGetInfo");
   ptr_mmioInstallIOProcA = (__vartype(ptr_mmioInstallIOProcA))GetProcAddress(hModule, "mmioInstallIOProcA");
   ptr_mmioInstallIOProcW = (__vartype(ptr_mmioInstallIOProcW))GetProcAddress(hModule, "mmioInstallIOProcW");
   ptr_mmioOpenA = (__vartype(ptr_mmioOpenA))GetProcAddress(hModule, "mmioOpenA");
   ptr_mmioOpenW = (__vartype(ptr_mmioOpenW))GetProcAddress(hModule, "mmioOpenW");
   ptr_mmioRead = (__vartype(ptr_mmioRead))GetProcAddress(hModule, "mmioRead");
   ptr_mmioRenameA = (__vartype(ptr_mmioRenameA))GetProcAddress(hModule, "mmioRenameA");
   ptr_mmioRenameW = (__vartype(ptr_mmioRenameW))GetProcAddress(hModule, "mmioRenameW");
   ptr_mmioSeek = (__vartype(ptr_mmioSeek))GetProcAddress(hModule, "mmioSeek");
   ptr_mmioSendMessage = (__vartype(ptr_mmioSendMessage))GetProcAddress(hModule, "mmioSendMessage");
   ptr_mmioSetBuffer = (__vartype(ptr_mmioSetBuffer))GetProcAddress(hModule, "mmioSetBuffer");
   ptr_mmioSetInfo = (__vartype(ptr_mmioSetInfo))GetProcAddress(hModule, "mmioSetInfo");
   ptr_mmioStringToFOURCCA = (__vartype(ptr_mmioStringToFOURCCA))GetProcAddress(hModule, "mmioStringToFOURCCA");
   ptr_mmioStringToFOURCCW = (__vartype(ptr_mmioStringToFOURCCW))GetProcAddress(hModule, "mmioStringToFOURCCW");
   ptr_mmioWrite = (__vartype(ptr_mmioWrite))GetProcAddress(hModule, "mmioWrite");
   ptr_mmsystemGetVersion = (__vartype(ptr_mmsystemGetVersion))GetProcAddress(hModule, "mmsystemGetVersion");
   ptr_sndPlaySoundA = (__vartype(ptr_sndPlaySoundA))GetProcAddress(hModule, "sndPlaySoundA");
   ptr_sndPlaySoundW = (__vartype(ptr_sndPlaySoundW))GetProcAddress(hModule, "sndPlaySoundW");
   ptr_timeBeginPeriod = (__vartype(ptr_timeBeginPeriod))GetProcAddress(hModule, "timeBeginPeriod");
   ptr_timeEndPeriod = (__vartype(ptr_timeEndPeriod))GetProcAddress(hModule, "timeEndPeriod");
   ptr_timeGetDevCaps = (__vartype(ptr_timeGetDevCaps))GetProcAddress(hModule, "timeGetDevCaps");
   ptr_timeGetSystemTime = (__vartype(ptr_timeGetSystemTime))GetProcAddress(hModule, "timeGetSystemTime");
   ptr_timeGetTime = (__vartype(ptr_timeGetTime))GetProcAddress(hModule, "timeGetTime");
   ptr_timeKillEvent = (__vartype(ptr_timeKillEvent))GetProcAddress(hModule, "timeKillEvent");
   ptr_timeSetEvent = (__vartype(ptr_timeSetEvent))GetProcAddress(hModule, "timeSetEvent");
   ptr_waveInAddBuffer = (__vartype(ptr_waveInAddBuffer))GetProcAddress(hModule, "waveInAddBuffer");
   ptr_waveInClose = (__vartype(ptr_waveInClose))GetProcAddress(hModule, "waveInClose");
   ptr_waveInGetDevCapsA = (__vartype(ptr_waveInGetDevCapsA))GetProcAddress(hModule, "waveInGetDevCapsA");
   ptr_waveInGetDevCapsW = (__vartype(ptr_waveInGetDevCapsW))GetProcAddress(hModule, "waveInGetDevCapsW");
   ptr_waveInGetErrorTextA = (__vartype(ptr_waveInGetErrorTextA))GetProcAddress(hModule, "waveInGetErrorTextA");
   ptr_waveInGetErrorTextW = (__vartype(ptr_waveInGetErrorTextW))GetProcAddress(hModule, "waveInGetErrorTextW");
   ptr_waveInGetID = (__vartype(ptr_waveInGetID))GetProcAddress(hModule, "waveInGetID");
   ptr_waveInGetNumDevs = (__vartype(ptr_waveInGetNumDevs))GetProcAddress(hModule, "waveInGetNumDevs");
   ptr_waveInGetPosition = (__vartype(ptr_waveInGetPosition))GetProcAddress(hModule, "waveInGetPosition");
   ptr_waveInMessage = (__vartype(ptr_waveInMessage))GetProcAddress(hModule, "waveInMessage");
   ptr_waveInOpen = (__vartype(ptr_waveInOpen))GetProcAddress(hModule, "waveInOpen");
   ptr_waveInPrepareHeader = (__vartype(ptr_waveInPrepareHeader))GetProcAddress(hModule, "waveInPrepareHeader");
   ptr_waveInReset = (__vartype(ptr_waveInReset))GetProcAddress(hModule, "waveInReset");
   ptr_waveInStart = (__vartype(ptr_waveInStart))GetProcAddress(hModule, "waveInStart");
   ptr_waveInStop = (__vartype(ptr_waveInStop))GetProcAddress(hModule, "waveInStop");
   ptr_waveInUnprepareHeader = (__vartype(ptr_waveInUnprepareHeader))GetProcAddress(hModule, "waveInUnprepareHeader");
   ptr_waveOutBreakLoop = (__vartype(ptr_waveOutBreakLoop))GetProcAddress(hModule, "waveOutBreakLoop");
   ptr_waveOutClose = (__vartype(ptr_waveOutClose))GetProcAddress(hModule, "waveOutClose");
   ptr_waveOutGetDevCapsA = (__vartype(ptr_waveOutGetDevCapsA))GetProcAddress(hModule, "waveOutGetDevCapsA");
   ptr_waveOutGetDevCapsW = (__vartype(ptr_waveOutGetDevCapsW))GetProcAddress(hModule, "waveOutGetDevCapsW");
   ptr_waveOutGetErrorTextA = (__vartype(ptr_waveOutGetErrorTextA))GetProcAddress(hModule, "waveOutGetErrorTextA");
   ptr_waveOutGetErrorTextW = (__vartype(ptr_waveOutGetErrorTextW))GetProcAddress(hModule, "waveOutGetErrorTextW");
   ptr_waveOutGetID = (__vartype(ptr_waveOutGetID))GetProcAddress(hModule, "waveOutGetID");
   ptr_waveOutGetNumDevs = (__vartype(ptr_waveOutGetNumDevs))GetProcAddress(hModule, "waveOutGetNumDevs");
   ptr_waveOutGetPitch = (__vartype(ptr_waveOutGetPitch))GetProcAddress(hModule, "waveOutGetPitch");
   ptr_waveOutGetPlaybackRate = (__vartype(ptr_waveOutGetPlaybackRate))GetProcAddress(hModule, "waveOutGetPlaybackRate");
   ptr_waveOutGetPosition = (__vartype(ptr_waveOutGetPosition))GetProcAddress(hModule, "waveOutGetPosition");
   ptr_waveOutGetVolume = (__vartype(ptr_waveOutGetVolume))GetProcAddress(hModule, "waveOutGetVolume");
   ptr_waveOutMessage = (__vartype(ptr_waveOutMessage))GetProcAddress(hModule, "waveOutMessage");
   ptr_waveOutOpen = (__vartype(ptr_waveOutOpen))GetProcAddress(hModule, "waveOutOpen");
   ptr_waveOutPause = (__vartype(ptr_waveOutPause))GetProcAddress(hModule, "waveOutPause");
   ptr_waveOutPrepareHeader = (__vartype(ptr_waveOutPrepareHeader))GetProcAddress(hModule, "waveOutPrepareHeader");
   ptr_waveOutReset = (__vartype(ptr_waveOutReset))GetProcAddress(hModule, "waveOutReset");
   ptr_waveOutRestart = (__vartype(ptr_waveOutRestart))GetProcAddress(hModule, "waveOutRestart");
   ptr_waveOutSetPitch = (__vartype(ptr_waveOutSetPitch))GetProcAddress(hModule, "waveOutSetPitch");
   ptr_waveOutSetPlaybackRate = (__vartype(ptr_waveOutSetPlaybackRate))GetProcAddress(hModule, "waveOutSetPlaybackRate");
   ptr_waveOutSetVolume = (__vartype(ptr_waveOutSetVolume))GetProcAddress(hModule, "waveOutSetVolume");
   ptr_waveOutUnprepareHeader = (__vartype(ptr_waveOutUnprepareHeader))GetProcAddress(hModule, "waveOutUnprepareHeader");
   ptr_waveOutWrite = (__vartype(ptr_waveOutWrite))GetProcAddress(hModule, "waveOutWrite");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

