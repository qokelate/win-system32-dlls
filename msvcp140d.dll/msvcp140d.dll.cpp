#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr__Chmod;
void *ptr__Chmod = NULL;
extern void *ptr__Close_dir;
void *ptr__Close_dir = NULL;
extern void *ptr__Cnd_broadcast;
void *ptr__Cnd_broadcast = NULL;
extern void *ptr__Cnd_destroy;
void *ptr__Cnd_destroy = NULL;
extern void *ptr__Cnd_destroy_in_situ;
void *ptr__Cnd_destroy_in_situ = NULL;
extern void *ptr__Cnd_do_broadcast_at_thread_exit;
void *ptr__Cnd_do_broadcast_at_thread_exit = NULL;
extern void *ptr__Cnd_init;
void *ptr__Cnd_init = NULL;
extern void *ptr__Cnd_init_in_situ;
void *ptr__Cnd_init_in_situ = NULL;
extern void *ptr__Cnd_register_at_thread_exit;
void *ptr__Cnd_register_at_thread_exit = NULL;
extern void *ptr__Cnd_signal;
void *ptr__Cnd_signal = NULL;
extern void *ptr__Cnd_timedwait;
void *ptr__Cnd_timedwait = NULL;
extern void *ptr__Cnd_unregister_at_thread_exit;
void *ptr__Cnd_unregister_at_thread_exit = NULL;
extern void *ptr__Cnd_wait;
void *ptr__Cnd_wait = NULL;
extern void *ptr__Copy_file;
void *ptr__Copy_file = NULL;
extern void *ptr__Cosh;
void *ptr__Cosh = NULL;
extern void *ptr__Current_get;
void *ptr__Current_get = NULL;
extern void *ptr__Current_set;
void *ptr__Current_set = NULL;
extern void *ptr__Denorm;
void *ptr__Denorm = NULL;
extern void *ptr__Dtest;
void *ptr__Dtest = NULL;
extern void *ptr__Equivalent;
void *ptr__Equivalent = NULL;
extern void *ptr__Exp;
void *ptr__Exp = NULL;
extern void *ptr__FCosh;
void *ptr__FCosh = NULL;
extern void *ptr__FDenorm;
void *ptr__FDenorm = NULL;
extern void *ptr__FDtest;
void *ptr__FDtest = NULL;
extern void *ptr__FExp;
void *ptr__FExp = NULL;
extern void *ptr__FInf;
void *ptr__FInf = NULL;
extern void *ptr__FNan;
void *ptr__FNan = NULL;
extern void *ptr__FSinh;
void *ptr__FSinh = NULL;
extern void *ptr__FSnan;
void *ptr__FSnan = NULL;
extern void *ptr__File_size;
void *ptr__File_size = NULL;
extern void *ptr__Getcoll;
void *ptr__Getcoll = NULL;
extern void *ptr__Getctype;
void *ptr__Getctype = NULL;
extern void *ptr__Getcvt;
void *ptr__Getcvt = NULL;
extern void *ptr__Getdateorder;
void *ptr__Getdateorder = NULL;
extern void *ptr__Getwctype;
void *ptr__Getwctype = NULL;
extern void *ptr__Getwctypes;
void *ptr__Getwctypes = NULL;
extern void *ptr__Hard_links;
void *ptr__Hard_links = NULL;
extern void *ptr__Hugeval;
void *ptr__Hugeval = NULL;
extern void *ptr__Inf;
void *ptr__Inf = NULL;
extern void *ptr__LCosh;
void *ptr__LCosh = NULL;
extern void *ptr__LDenorm;
void *ptr__LDenorm = NULL;
extern void *ptr__LDtest;
void *ptr__LDtest = NULL;
extern void *ptr__LExp;
void *ptr__LExp = NULL;
extern void *ptr__LInf;
void *ptr__LInf = NULL;
extern void *ptr__LNan;
void *ptr__LNan = NULL;
extern void *ptr__LSinh;
void *ptr__LSinh = NULL;
extern void *ptr__LSnan;
void *ptr__LSnan = NULL;
extern void *ptr__Last_write_time;
void *ptr__Last_write_time = NULL;
extern void *ptr__Link;
void *ptr__Link = NULL;
extern void *ptr__Lock_shared_ptr_spin_lock;
void *ptr__Lock_shared_ptr_spin_lock = NULL;
extern void *ptr__Lstat;
void *ptr__Lstat = NULL;
extern void *ptr__Make_dir;
void *ptr__Make_dir = NULL;
extern void *ptr__Mbrtowc;
void *ptr__Mbrtowc = NULL;
extern void *ptr__Mtx_clear_owner;
void *ptr__Mtx_clear_owner = NULL;
extern void *ptr__Mtx_current_owns;
void *ptr__Mtx_current_owns = NULL;
extern void *ptr__Mtx_destroy;
void *ptr__Mtx_destroy = NULL;
extern void *ptr__Mtx_destroy_in_situ;
void *ptr__Mtx_destroy_in_situ = NULL;
extern void *ptr__Mtx_getconcrtcs;
void *ptr__Mtx_getconcrtcs = NULL;
extern void *ptr__Mtx_init;
void *ptr__Mtx_init = NULL;
extern void *ptr__Mtx_init_in_situ;
void *ptr__Mtx_init_in_situ = NULL;
extern void *ptr__Mtx_lock;
void *ptr__Mtx_lock = NULL;
extern void *ptr__Mtx_reset_owner;
void *ptr__Mtx_reset_owner = NULL;
extern void *ptr__Mtx_timedlock;
void *ptr__Mtx_timedlock = NULL;
extern void *ptr__Mtx_trylock;
void *ptr__Mtx_trylock = NULL;
extern void *ptr__Mtx_unlock;
void *ptr__Mtx_unlock = NULL;
extern void *ptr__Mtxdst;
void *ptr__Mtxdst = NULL;
extern void *ptr__Mtxinit;
void *ptr__Mtxinit = NULL;
extern void *ptr__Mtxlock;
void *ptr__Mtxlock = NULL;
extern void *ptr__Mtxunlock;
void *ptr__Mtxunlock = NULL;
extern void *ptr__Nan;
void *ptr__Nan = NULL;
extern void *ptr__Open_dir;
void *ptr__Open_dir = NULL;
extern void *ptr__Query_perf_counter;
void *ptr__Query_perf_counter = NULL;
extern void *ptr__Query_perf_frequency;
void *ptr__Query_perf_frequency = NULL;
extern void *ptr__Read_dir;
void *ptr__Read_dir = NULL;
extern void *ptr__Remove_dir;
void *ptr__Remove_dir = NULL;
extern void *ptr__Rename;
void *ptr__Rename = NULL;
extern void *ptr__Resize;
void *ptr__Resize = NULL;
extern void *ptr__Set_last_write_time;
void *ptr__Set_last_write_time = NULL;
extern void *ptr__Sinh;
void *ptr__Sinh = NULL;
extern void *ptr__Snan;
void *ptr__Snan = NULL;
extern void *ptr__Stat;
void *ptr__Stat = NULL;
extern void *ptr__Statvfs;
void *ptr__Statvfs = NULL;
extern void *ptr__Stod;
void *ptr__Stod = NULL;
extern void *ptr__Stodx;
void *ptr__Stodx = NULL;
extern void *ptr__Stof;
void *ptr__Stof = NULL;
extern void *ptr__Stofx;
void *ptr__Stofx = NULL;
extern void *ptr__Stold;
void *ptr__Stold = NULL;
extern void *ptr__Stoldx;
void *ptr__Stoldx = NULL;
extern void *ptr__Stoll;
void *ptr__Stoll = NULL;
extern void *ptr__Stollx;
void *ptr__Stollx = NULL;
extern void *ptr__Stolx;
void *ptr__Stolx = NULL;
extern void *ptr__Stoul;
void *ptr__Stoul = NULL;
extern void *ptr__Stoull;
void *ptr__Stoull = NULL;
extern void *ptr__Stoullx;
void *ptr__Stoullx = NULL;
extern void *ptr__Stoulx;
void *ptr__Stoulx = NULL;
extern void *ptr__Strcoll;
void *ptr__Strcoll = NULL;
extern void *ptr__Strxfrm;
void *ptr__Strxfrm = NULL;
extern void *ptr__Symlink;
void *ptr__Symlink = NULL;
extern void *ptr__Symlink_get;
void *ptr__Symlink_get = NULL;
extern void *ptr__Temp_get;
void *ptr__Temp_get = NULL;
extern void *ptr__Thrd_abort;
void *ptr__Thrd_abort = NULL;
extern void *ptr__Thrd_create;
void *ptr__Thrd_create = NULL;
extern void *ptr__Thrd_current;
void *ptr__Thrd_current = NULL;
extern void *ptr__Thrd_detach;
void *ptr__Thrd_detach = NULL;
extern void *ptr__Thrd_equal;
void *ptr__Thrd_equal = NULL;
extern void *ptr__Thrd_exit;
void *ptr__Thrd_exit = NULL;
extern void *ptr__Thrd_hardware_concurrency;
void *ptr__Thrd_hardware_concurrency = NULL;
extern void *ptr__Thrd_id;
void *ptr__Thrd_id = NULL;
extern void *ptr__Thrd_join;
void *ptr__Thrd_join = NULL;
extern void *ptr__Thrd_sleep;
void *ptr__Thrd_sleep = NULL;
extern void *ptr__Thrd_start;
void *ptr__Thrd_start = NULL;
extern void *ptr__Thrd_yield;
void *ptr__Thrd_yield = NULL;
extern void *ptr__To_byte;
void *ptr__To_byte = NULL;
extern void *ptr__To_wide;
void *ptr__To_wide = NULL;
extern void *ptr__Tolower;
void *ptr__Tolower = NULL;
extern void *ptr__Toupper;
void *ptr__Toupper = NULL;
extern void *ptr__Towlower;
void *ptr__Towlower = NULL;
extern void *ptr__Towupper;
void *ptr__Towupper = NULL;
extern void *ptr__Unlink;
void *ptr__Unlink = NULL;
extern void *ptr__Unlock_shared_ptr_spin_lock;
void *ptr__Unlock_shared_ptr_spin_lock = NULL;
extern void *ptr__WStod;
void *ptr__WStod = NULL;
extern void *ptr__WStodx;
void *ptr__WStodx = NULL;
extern void *ptr__WStof;
void *ptr__WStof = NULL;
extern void *ptr__WStofx;
void *ptr__WStofx = NULL;
extern void *ptr__WStold;
void *ptr__WStold = NULL;
extern void *ptr__WStoldx;
void *ptr__WStoldx = NULL;
extern void *ptr__Wcrtomb;
void *ptr__Wcrtomb = NULL;
extern void *ptr__Wcscoll;
void *ptr__Wcscoll = NULL;
extern void *ptr__Wcsxfrm;
void *ptr__Wcsxfrm = NULL;
extern void *ptr__Xtime_diff_to_millis;
void *ptr__Xtime_diff_to_millis = NULL;
extern void *ptr__Xtime_diff_to_millis2;
void *ptr__Xtime_diff_to_millis2 = NULL;
extern void *ptr__Xtime_get_ticks;
void *ptr__Xtime_get_ticks = NULL;
extern void *ptr___Wcrtomb_lk;
void *ptr___Wcrtomb_lk = NULL;
extern void *ptr___crtCloseThreadpoolTimer;
void *ptr___crtCloseThreadpoolTimer = NULL;
extern void *ptr___crtCloseThreadpoolWait;
void *ptr___crtCloseThreadpoolWait = NULL;
extern void *ptr___crtCompareStringA;
void *ptr___crtCompareStringA = NULL;
extern void *ptr___crtCompareStringEx;
void *ptr___crtCompareStringEx = NULL;
extern void *ptr___crtCompareStringW;
void *ptr___crtCompareStringW = NULL;
extern void *ptr___crtCreateEventExW;
void *ptr___crtCreateEventExW = NULL;
extern void *ptr___crtCreateSemaphoreExW;
void *ptr___crtCreateSemaphoreExW = NULL;
extern void *ptr___crtCreateSymbolicLinkW;
void *ptr___crtCreateSymbolicLinkW = NULL;
extern void *ptr___crtCreateThreadpoolTimer;
void *ptr___crtCreateThreadpoolTimer = NULL;
extern void *ptr___crtCreateThreadpoolWait;
void *ptr___crtCreateThreadpoolWait = NULL;
extern void *ptr___crtFlushProcessWriteBuffers;
void *ptr___crtFlushProcessWriteBuffers = NULL;
extern void *ptr___crtFreeLibraryWhenCallbackReturns;
void *ptr___crtFreeLibraryWhenCallbackReturns = NULL;
extern void *ptr___crtGetCurrentProcessorNumber;
void *ptr___crtGetCurrentProcessorNumber = NULL;
extern void *ptr___crtGetFileInformationByHandleEx;
void *ptr___crtGetFileInformationByHandleEx = NULL;
extern void *ptr___crtGetLocaleInfoEx;
void *ptr___crtGetLocaleInfoEx = NULL;
extern void *ptr___crtGetSystemTimePreciseAsFileTime;
void *ptr___crtGetSystemTimePreciseAsFileTime = NULL;
extern void *ptr___crtGetTickCount64;
void *ptr___crtGetTickCount64 = NULL;
extern void *ptr___crtInitOnceExecuteOnce;
void *ptr___crtInitOnceExecuteOnce = NULL;
extern void *ptr___crtInitializeCriticalSectionEx;
void *ptr___crtInitializeCriticalSectionEx = NULL;
extern void *ptr___crtIsPackagedApp;
void *ptr___crtIsPackagedApp = NULL;
extern void *ptr___crtLCMapStringA;
void *ptr___crtLCMapStringA = NULL;
extern void *ptr___crtLCMapStringEx;
void *ptr___crtLCMapStringEx = NULL;
extern void *ptr___crtLCMapStringW;
void *ptr___crtLCMapStringW = NULL;
extern void *ptr___crtSetFileInformationByHandle;
void *ptr___crtSetFileInformationByHandle = NULL;
extern void *ptr___crtSetThreadpoolTimer;
void *ptr___crtSetThreadpoolTimer = NULL;
extern void *ptr___crtSetThreadpoolWait;
void *ptr___crtSetThreadpoolWait = NULL;
extern void *ptr___crtWaitForThreadpoolTimerCallbacks;
void *ptr___crtWaitForThreadpoolTimerCallbacks = NULL;
extern void *ptr___set_stl_sync_api_mode;
void *ptr___set_stl_sync_api_mode = NULL;
extern void *ptr_xtime_get;
void *ptr_xtime_get = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\msvcp140d.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr__Chmod = (__vartype(ptr__Chmod))GetProcAddress(hModule, "_Chmod");
   ptr__Close_dir = (__vartype(ptr__Close_dir))GetProcAddress(hModule, "_Close_dir");
   ptr__Cnd_broadcast = (__vartype(ptr__Cnd_broadcast))GetProcAddress(hModule, "_Cnd_broadcast");
   ptr__Cnd_destroy = (__vartype(ptr__Cnd_destroy))GetProcAddress(hModule, "_Cnd_destroy");
   ptr__Cnd_destroy_in_situ = (__vartype(ptr__Cnd_destroy_in_situ))GetProcAddress(hModule, "_Cnd_destroy_in_situ");
   ptr__Cnd_do_broadcast_at_thread_exit = (__vartype(ptr__Cnd_do_broadcast_at_thread_exit))GetProcAddress(hModule, "_Cnd_do_broadcast_at_thread_exit");
   ptr__Cnd_init = (__vartype(ptr__Cnd_init))GetProcAddress(hModule, "_Cnd_init");
   ptr__Cnd_init_in_situ = (__vartype(ptr__Cnd_init_in_situ))GetProcAddress(hModule, "_Cnd_init_in_situ");
   ptr__Cnd_register_at_thread_exit = (__vartype(ptr__Cnd_register_at_thread_exit))GetProcAddress(hModule, "_Cnd_register_at_thread_exit");
   ptr__Cnd_signal = (__vartype(ptr__Cnd_signal))GetProcAddress(hModule, "_Cnd_signal");
   ptr__Cnd_timedwait = (__vartype(ptr__Cnd_timedwait))GetProcAddress(hModule, "_Cnd_timedwait");
   ptr__Cnd_unregister_at_thread_exit = (__vartype(ptr__Cnd_unregister_at_thread_exit))GetProcAddress(hModule, "_Cnd_unregister_at_thread_exit");
   ptr__Cnd_wait = (__vartype(ptr__Cnd_wait))GetProcAddress(hModule, "_Cnd_wait");
   ptr__Copy_file = (__vartype(ptr__Copy_file))GetProcAddress(hModule, "_Copy_file");
   ptr__Cosh = (__vartype(ptr__Cosh))GetProcAddress(hModule, "_Cosh");
   ptr__Current_get = (__vartype(ptr__Current_get))GetProcAddress(hModule, "_Current_get");
   ptr__Current_set = (__vartype(ptr__Current_set))GetProcAddress(hModule, "_Current_set");
   ptr__Denorm = (__vartype(ptr__Denorm))GetProcAddress(hModule, "_Denorm");
   ptr__Dtest = (__vartype(ptr__Dtest))GetProcAddress(hModule, "_Dtest");
   ptr__Equivalent = (__vartype(ptr__Equivalent))GetProcAddress(hModule, "_Equivalent");
   ptr__Exp = (__vartype(ptr__Exp))GetProcAddress(hModule, "_Exp");
   ptr__FCosh = (__vartype(ptr__FCosh))GetProcAddress(hModule, "_FCosh");
   ptr__FDenorm = (__vartype(ptr__FDenorm))GetProcAddress(hModule, "_FDenorm");
   ptr__FDtest = (__vartype(ptr__FDtest))GetProcAddress(hModule, "_FDtest");
   ptr__FExp = (__vartype(ptr__FExp))GetProcAddress(hModule, "_FExp");
   ptr__FInf = (__vartype(ptr__FInf))GetProcAddress(hModule, "_FInf");
   ptr__FNan = (__vartype(ptr__FNan))GetProcAddress(hModule, "_FNan");
   ptr__FSinh = (__vartype(ptr__FSinh))GetProcAddress(hModule, "_FSinh");
   ptr__FSnan = (__vartype(ptr__FSnan))GetProcAddress(hModule, "_FSnan");
   ptr__File_size = (__vartype(ptr__File_size))GetProcAddress(hModule, "_File_size");
   ptr__Getcoll = (__vartype(ptr__Getcoll))GetProcAddress(hModule, "_Getcoll");
   ptr__Getctype = (__vartype(ptr__Getctype))GetProcAddress(hModule, "_Getctype");
   ptr__Getcvt = (__vartype(ptr__Getcvt))GetProcAddress(hModule, "_Getcvt");
   ptr__Getdateorder = (__vartype(ptr__Getdateorder))GetProcAddress(hModule, "_Getdateorder");
   ptr__Getwctype = (__vartype(ptr__Getwctype))GetProcAddress(hModule, "_Getwctype");
   ptr__Getwctypes = (__vartype(ptr__Getwctypes))GetProcAddress(hModule, "_Getwctypes");
   ptr__Hard_links = (__vartype(ptr__Hard_links))GetProcAddress(hModule, "_Hard_links");
   ptr__Hugeval = (__vartype(ptr__Hugeval))GetProcAddress(hModule, "_Hugeval");
   ptr__Inf = (__vartype(ptr__Inf))GetProcAddress(hModule, "_Inf");
   ptr__LCosh = (__vartype(ptr__LCosh))GetProcAddress(hModule, "_LCosh");
   ptr__LDenorm = (__vartype(ptr__LDenorm))GetProcAddress(hModule, "_LDenorm");
   ptr__LDtest = (__vartype(ptr__LDtest))GetProcAddress(hModule, "_LDtest");
   ptr__LExp = (__vartype(ptr__LExp))GetProcAddress(hModule, "_LExp");
   ptr__LInf = (__vartype(ptr__LInf))GetProcAddress(hModule, "_LInf");
   ptr__LNan = (__vartype(ptr__LNan))GetProcAddress(hModule, "_LNan");
   ptr__LSinh = (__vartype(ptr__LSinh))GetProcAddress(hModule, "_LSinh");
   ptr__LSnan = (__vartype(ptr__LSnan))GetProcAddress(hModule, "_LSnan");
   ptr__Last_write_time = (__vartype(ptr__Last_write_time))GetProcAddress(hModule, "_Last_write_time");
   ptr__Link = (__vartype(ptr__Link))GetProcAddress(hModule, "_Link");
   ptr__Lock_shared_ptr_spin_lock = (__vartype(ptr__Lock_shared_ptr_spin_lock))GetProcAddress(hModule, "_Lock_shared_ptr_spin_lock");
   ptr__Lstat = (__vartype(ptr__Lstat))GetProcAddress(hModule, "_Lstat");
   ptr__Make_dir = (__vartype(ptr__Make_dir))GetProcAddress(hModule, "_Make_dir");
   ptr__Mbrtowc = (__vartype(ptr__Mbrtowc))GetProcAddress(hModule, "_Mbrtowc");
   ptr__Mtx_clear_owner = (__vartype(ptr__Mtx_clear_owner))GetProcAddress(hModule, "_Mtx_clear_owner");
   ptr__Mtx_current_owns = (__vartype(ptr__Mtx_current_owns))GetProcAddress(hModule, "_Mtx_current_owns");
   ptr__Mtx_destroy = (__vartype(ptr__Mtx_destroy))GetProcAddress(hModule, "_Mtx_destroy");
   ptr__Mtx_destroy_in_situ = (__vartype(ptr__Mtx_destroy_in_situ))GetProcAddress(hModule, "_Mtx_destroy_in_situ");
   ptr__Mtx_getconcrtcs = (__vartype(ptr__Mtx_getconcrtcs))GetProcAddress(hModule, "_Mtx_getconcrtcs");
   ptr__Mtx_init = (__vartype(ptr__Mtx_init))GetProcAddress(hModule, "_Mtx_init");
   ptr__Mtx_init_in_situ = (__vartype(ptr__Mtx_init_in_situ))GetProcAddress(hModule, "_Mtx_init_in_situ");
   ptr__Mtx_lock = (__vartype(ptr__Mtx_lock))GetProcAddress(hModule, "_Mtx_lock");
   ptr__Mtx_reset_owner = (__vartype(ptr__Mtx_reset_owner))GetProcAddress(hModule, "_Mtx_reset_owner");
   ptr__Mtx_timedlock = (__vartype(ptr__Mtx_timedlock))GetProcAddress(hModule, "_Mtx_timedlock");
   ptr__Mtx_trylock = (__vartype(ptr__Mtx_trylock))GetProcAddress(hModule, "_Mtx_trylock");
   ptr__Mtx_unlock = (__vartype(ptr__Mtx_unlock))GetProcAddress(hModule, "_Mtx_unlock");
   ptr__Mtxdst = (__vartype(ptr__Mtxdst))GetProcAddress(hModule, "_Mtxdst");
   ptr__Mtxinit = (__vartype(ptr__Mtxinit))GetProcAddress(hModule, "_Mtxinit");
   ptr__Mtxlock = (__vartype(ptr__Mtxlock))GetProcAddress(hModule, "_Mtxlock");
   ptr__Mtxunlock = (__vartype(ptr__Mtxunlock))GetProcAddress(hModule, "_Mtxunlock");
   ptr__Nan = (__vartype(ptr__Nan))GetProcAddress(hModule, "_Nan");
   ptr__Open_dir = (__vartype(ptr__Open_dir))GetProcAddress(hModule, "_Open_dir");
   ptr__Query_perf_counter = (__vartype(ptr__Query_perf_counter))GetProcAddress(hModule, "_Query_perf_counter");
   ptr__Query_perf_frequency = (__vartype(ptr__Query_perf_frequency))GetProcAddress(hModule, "_Query_perf_frequency");
   ptr__Read_dir = (__vartype(ptr__Read_dir))GetProcAddress(hModule, "_Read_dir");
   ptr__Remove_dir = (__vartype(ptr__Remove_dir))GetProcAddress(hModule, "_Remove_dir");
   ptr__Rename = (__vartype(ptr__Rename))GetProcAddress(hModule, "_Rename");
   ptr__Resize = (__vartype(ptr__Resize))GetProcAddress(hModule, "_Resize");
   ptr__Set_last_write_time = (__vartype(ptr__Set_last_write_time))GetProcAddress(hModule, "_Set_last_write_time");
   ptr__Sinh = (__vartype(ptr__Sinh))GetProcAddress(hModule, "_Sinh");
   ptr__Snan = (__vartype(ptr__Snan))GetProcAddress(hModule, "_Snan");
   ptr__Stat = (__vartype(ptr__Stat))GetProcAddress(hModule, "_Stat");
   ptr__Statvfs = (__vartype(ptr__Statvfs))GetProcAddress(hModule, "_Statvfs");
   ptr__Stod = (__vartype(ptr__Stod))GetProcAddress(hModule, "_Stod");
   ptr__Stodx = (__vartype(ptr__Stodx))GetProcAddress(hModule, "_Stodx");
   ptr__Stof = (__vartype(ptr__Stof))GetProcAddress(hModule, "_Stof");
   ptr__Stofx = (__vartype(ptr__Stofx))GetProcAddress(hModule, "_Stofx");
   ptr__Stold = (__vartype(ptr__Stold))GetProcAddress(hModule, "_Stold");
   ptr__Stoldx = (__vartype(ptr__Stoldx))GetProcAddress(hModule, "_Stoldx");
   ptr__Stoll = (__vartype(ptr__Stoll))GetProcAddress(hModule, "_Stoll");
   ptr__Stollx = (__vartype(ptr__Stollx))GetProcAddress(hModule, "_Stollx");
   ptr__Stolx = (__vartype(ptr__Stolx))GetProcAddress(hModule, "_Stolx");
   ptr__Stoul = (__vartype(ptr__Stoul))GetProcAddress(hModule, "_Stoul");
   ptr__Stoull = (__vartype(ptr__Stoull))GetProcAddress(hModule, "_Stoull");
   ptr__Stoullx = (__vartype(ptr__Stoullx))GetProcAddress(hModule, "_Stoullx");
   ptr__Stoulx = (__vartype(ptr__Stoulx))GetProcAddress(hModule, "_Stoulx");
   ptr__Strcoll = (__vartype(ptr__Strcoll))GetProcAddress(hModule, "_Strcoll");
   ptr__Strxfrm = (__vartype(ptr__Strxfrm))GetProcAddress(hModule, "_Strxfrm");
   ptr__Symlink = (__vartype(ptr__Symlink))GetProcAddress(hModule, "_Symlink");
   ptr__Symlink_get = (__vartype(ptr__Symlink_get))GetProcAddress(hModule, "_Symlink_get");
   ptr__Temp_get = (__vartype(ptr__Temp_get))GetProcAddress(hModule, "_Temp_get");
   ptr__Thrd_abort = (__vartype(ptr__Thrd_abort))GetProcAddress(hModule, "_Thrd_abort");
   ptr__Thrd_create = (__vartype(ptr__Thrd_create))GetProcAddress(hModule, "_Thrd_create");
   ptr__Thrd_current = (__vartype(ptr__Thrd_current))GetProcAddress(hModule, "_Thrd_current");
   ptr__Thrd_detach = (__vartype(ptr__Thrd_detach))GetProcAddress(hModule, "_Thrd_detach");
   ptr__Thrd_equal = (__vartype(ptr__Thrd_equal))GetProcAddress(hModule, "_Thrd_equal");
   ptr__Thrd_exit = (__vartype(ptr__Thrd_exit))GetProcAddress(hModule, "_Thrd_exit");
   ptr__Thrd_hardware_concurrency = (__vartype(ptr__Thrd_hardware_concurrency))GetProcAddress(hModule, "_Thrd_hardware_concurrency");
   ptr__Thrd_id = (__vartype(ptr__Thrd_id))GetProcAddress(hModule, "_Thrd_id");
   ptr__Thrd_join = (__vartype(ptr__Thrd_join))GetProcAddress(hModule, "_Thrd_join");
   ptr__Thrd_sleep = (__vartype(ptr__Thrd_sleep))GetProcAddress(hModule, "_Thrd_sleep");
   ptr__Thrd_start = (__vartype(ptr__Thrd_start))GetProcAddress(hModule, "_Thrd_start");
   ptr__Thrd_yield = (__vartype(ptr__Thrd_yield))GetProcAddress(hModule, "_Thrd_yield");
   ptr__To_byte = (__vartype(ptr__To_byte))GetProcAddress(hModule, "_To_byte");
   ptr__To_wide = (__vartype(ptr__To_wide))GetProcAddress(hModule, "_To_wide");
   ptr__Tolower = (__vartype(ptr__Tolower))GetProcAddress(hModule, "_Tolower");
   ptr__Toupper = (__vartype(ptr__Toupper))GetProcAddress(hModule, "_Toupper");
   ptr__Towlower = (__vartype(ptr__Towlower))GetProcAddress(hModule, "_Towlower");
   ptr__Towupper = (__vartype(ptr__Towupper))GetProcAddress(hModule, "_Towupper");
   ptr__Unlink = (__vartype(ptr__Unlink))GetProcAddress(hModule, "_Unlink");
   ptr__Unlock_shared_ptr_spin_lock = (__vartype(ptr__Unlock_shared_ptr_spin_lock))GetProcAddress(hModule, "_Unlock_shared_ptr_spin_lock");
   ptr__WStod = (__vartype(ptr__WStod))GetProcAddress(hModule, "_WStod");
   ptr__WStodx = (__vartype(ptr__WStodx))GetProcAddress(hModule, "_WStodx");
   ptr__WStof = (__vartype(ptr__WStof))GetProcAddress(hModule, "_WStof");
   ptr__WStofx = (__vartype(ptr__WStofx))GetProcAddress(hModule, "_WStofx");
   ptr__WStold = (__vartype(ptr__WStold))GetProcAddress(hModule, "_WStold");
   ptr__WStoldx = (__vartype(ptr__WStoldx))GetProcAddress(hModule, "_WStoldx");
   ptr__Wcrtomb = (__vartype(ptr__Wcrtomb))GetProcAddress(hModule, "_Wcrtomb");
   ptr__Wcscoll = (__vartype(ptr__Wcscoll))GetProcAddress(hModule, "_Wcscoll");
   ptr__Wcsxfrm = (__vartype(ptr__Wcsxfrm))GetProcAddress(hModule, "_Wcsxfrm");
   ptr__Xtime_diff_to_millis = (__vartype(ptr__Xtime_diff_to_millis))GetProcAddress(hModule, "_Xtime_diff_to_millis");
   ptr__Xtime_diff_to_millis2 = (__vartype(ptr__Xtime_diff_to_millis2))GetProcAddress(hModule, "_Xtime_diff_to_millis2");
   ptr__Xtime_get_ticks = (__vartype(ptr__Xtime_get_ticks))GetProcAddress(hModule, "_Xtime_get_ticks");
   ptr___Wcrtomb_lk = (__vartype(ptr___Wcrtomb_lk))GetProcAddress(hModule, "__Wcrtomb_lk");
   ptr___crtCloseThreadpoolTimer = (__vartype(ptr___crtCloseThreadpoolTimer))GetProcAddress(hModule, "__crtCloseThreadpoolTimer");
   ptr___crtCloseThreadpoolWait = (__vartype(ptr___crtCloseThreadpoolWait))GetProcAddress(hModule, "__crtCloseThreadpoolWait");
   ptr___crtCompareStringA = (__vartype(ptr___crtCompareStringA))GetProcAddress(hModule, "__crtCompareStringA");
   ptr___crtCompareStringEx = (__vartype(ptr___crtCompareStringEx))GetProcAddress(hModule, "__crtCompareStringEx");
   ptr___crtCompareStringW = (__vartype(ptr___crtCompareStringW))GetProcAddress(hModule, "__crtCompareStringW");
   ptr___crtCreateEventExW = (__vartype(ptr___crtCreateEventExW))GetProcAddress(hModule, "__crtCreateEventExW");
   ptr___crtCreateSemaphoreExW = (__vartype(ptr___crtCreateSemaphoreExW))GetProcAddress(hModule, "__crtCreateSemaphoreExW");
   ptr___crtCreateSymbolicLinkW = (__vartype(ptr___crtCreateSymbolicLinkW))GetProcAddress(hModule, "__crtCreateSymbolicLinkW");
   ptr___crtCreateThreadpoolTimer = (__vartype(ptr___crtCreateThreadpoolTimer))GetProcAddress(hModule, "__crtCreateThreadpoolTimer");
   ptr___crtCreateThreadpoolWait = (__vartype(ptr___crtCreateThreadpoolWait))GetProcAddress(hModule, "__crtCreateThreadpoolWait");
   ptr___crtFlushProcessWriteBuffers = (__vartype(ptr___crtFlushProcessWriteBuffers))GetProcAddress(hModule, "__crtFlushProcessWriteBuffers");
   ptr___crtFreeLibraryWhenCallbackReturns = (__vartype(ptr___crtFreeLibraryWhenCallbackReturns))GetProcAddress(hModule, "__crtFreeLibraryWhenCallbackReturns");
   ptr___crtGetCurrentProcessorNumber = (__vartype(ptr___crtGetCurrentProcessorNumber))GetProcAddress(hModule, "__crtGetCurrentProcessorNumber");
   ptr___crtGetFileInformationByHandleEx = (__vartype(ptr___crtGetFileInformationByHandleEx))GetProcAddress(hModule, "__crtGetFileInformationByHandleEx");
   ptr___crtGetLocaleInfoEx = (__vartype(ptr___crtGetLocaleInfoEx))GetProcAddress(hModule, "__crtGetLocaleInfoEx");
   ptr___crtGetSystemTimePreciseAsFileTime = (__vartype(ptr___crtGetSystemTimePreciseAsFileTime))GetProcAddress(hModule, "__crtGetSystemTimePreciseAsFileTime");
   ptr___crtGetTickCount64 = (__vartype(ptr___crtGetTickCount64))GetProcAddress(hModule, "__crtGetTickCount64");
   ptr___crtInitOnceExecuteOnce = (__vartype(ptr___crtInitOnceExecuteOnce))GetProcAddress(hModule, "__crtInitOnceExecuteOnce");
   ptr___crtInitializeCriticalSectionEx = (__vartype(ptr___crtInitializeCriticalSectionEx))GetProcAddress(hModule, "__crtInitializeCriticalSectionEx");
   ptr___crtIsPackagedApp = (__vartype(ptr___crtIsPackagedApp))GetProcAddress(hModule, "__crtIsPackagedApp");
   ptr___crtLCMapStringA = (__vartype(ptr___crtLCMapStringA))GetProcAddress(hModule, "__crtLCMapStringA");
   ptr___crtLCMapStringEx = (__vartype(ptr___crtLCMapStringEx))GetProcAddress(hModule, "__crtLCMapStringEx");
   ptr___crtLCMapStringW = (__vartype(ptr___crtLCMapStringW))GetProcAddress(hModule, "__crtLCMapStringW");
   ptr___crtSetFileInformationByHandle = (__vartype(ptr___crtSetFileInformationByHandle))GetProcAddress(hModule, "__crtSetFileInformationByHandle");
   ptr___crtSetThreadpoolTimer = (__vartype(ptr___crtSetThreadpoolTimer))GetProcAddress(hModule, "__crtSetThreadpoolTimer");
   ptr___crtSetThreadpoolWait = (__vartype(ptr___crtSetThreadpoolWait))GetProcAddress(hModule, "__crtSetThreadpoolWait");
   ptr___crtWaitForThreadpoolTimerCallbacks = (__vartype(ptr___crtWaitForThreadpoolTimerCallbacks))GetProcAddress(hModule, "__crtWaitForThreadpoolTimerCallbacks");
   ptr___set_stl_sync_api_mode = (__vartype(ptr___set_stl_sync_api_mode))GetProcAddress(hModule, "__set_stl_sync_api_mode");
   ptr_xtime_get = (__vartype(ptr_xtime_get))GetProcAddress(hModule, "xtime_get");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

