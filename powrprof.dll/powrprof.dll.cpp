#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_CallNtPowerInformation;
void *ptr_CallNtPowerInformation = NULL;
extern void *ptr_CanUserWritePwrScheme;
void *ptr_CanUserWritePwrScheme = NULL;
extern void *ptr_DeletePwrScheme;
void *ptr_DeletePwrScheme = NULL;
extern void *ptr_DevicePowerClose;
void *ptr_DevicePowerClose = NULL;
extern void *ptr_DevicePowerEnumDevices;
void *ptr_DevicePowerEnumDevices = NULL;
extern void *ptr_DevicePowerOpen;
void *ptr_DevicePowerOpen = NULL;
extern void *ptr_DevicePowerSetDeviceState;
void *ptr_DevicePowerSetDeviceState = NULL;
extern void *ptr_EnumPwrSchemes;
void *ptr_EnumPwrSchemes = NULL;
extern void *ptr_GUIDFormatToGlobalPowerPolicy;
void *ptr_GUIDFormatToGlobalPowerPolicy = NULL;
extern void *ptr_GUIDFormatToPowerPolicy;
void *ptr_GUIDFormatToPowerPolicy = NULL;
extern void *ptr_GetActivePwrScheme;
void *ptr_GetActivePwrScheme = NULL;
extern void *ptr_GetCurrentPowerPolicies;
void *ptr_GetCurrentPowerPolicies = NULL;
extern void *ptr_GetPwrCapabilities;
void *ptr_GetPwrCapabilities = NULL;
extern void *ptr_GetPwrDiskSpindownRange;
void *ptr_GetPwrDiskSpindownRange = NULL;
extern void *ptr_IsAdminOverrideActive;
void *ptr_IsAdminOverrideActive = NULL;
extern void *ptr_IsPwrHibernateAllowed;
void *ptr_IsPwrHibernateAllowed = NULL;
extern void *ptr_IsPwrShutdownAllowed;
void *ptr_IsPwrShutdownAllowed = NULL;
extern void *ptr_IsPwrSuspendAllowed;
void *ptr_IsPwrSuspendAllowed = NULL;
extern void *ptr_LoadCurrentPwrScheme;
void *ptr_LoadCurrentPwrScheme = NULL;
extern void *ptr_MergeLegacyPwrScheme;
void *ptr_MergeLegacyPwrScheme = NULL;
extern void *ptr_PowerApplyPowerRequestOverride;
void *ptr_PowerApplyPowerRequestOverride = NULL;
extern void *ptr_PowerCanRestoreIndividualDefaultPowerScheme;
void *ptr_PowerCanRestoreIndividualDefaultPowerScheme = NULL;
extern void *ptr_PowerCreatePossibleSetting;
void *ptr_PowerCreatePossibleSetting = NULL;
extern void *ptr_PowerCreateSetting;
void *ptr_PowerCreateSetting = NULL;
extern void *ptr_PowerCustomizePlatformPowerSettings;
void *ptr_PowerCustomizePlatformPowerSettings = NULL;
extern void *ptr_PowerDebugDifPowerPolicies;
void *ptr_PowerDebugDifPowerPolicies = NULL;
extern void *ptr_PowerDebugDifSystemPowerPolicies;
void *ptr_PowerDebugDifSystemPowerPolicies = NULL;
extern void *ptr_PowerDebugDumpPowerPolicy;
void *ptr_PowerDebugDumpPowerPolicy = NULL;
extern void *ptr_PowerDebugDumpPowerScheme;
void *ptr_PowerDebugDumpPowerScheme = NULL;
extern void *ptr_PowerDebugDumpSystemPowerCapabilities;
void *ptr_PowerDebugDumpSystemPowerCapabilities = NULL;
extern void *ptr_PowerDebugDumpSystemPowerPolicy;
void *ptr_PowerDebugDumpSystemPowerPolicy = NULL;
extern void *ptr_PowerDeleteScheme;
void *ptr_PowerDeleteScheme = NULL;
extern void *ptr_PowerDeterminePlatformRole;
void *ptr_PowerDeterminePlatformRole = NULL;
extern void *ptr_PowerDuplicateScheme;
void *ptr_PowerDuplicateScheme = NULL;
extern void *ptr_PowerEnumerate;
void *ptr_PowerEnumerate = NULL;
extern void *ptr_PowerGetActiveScheme;
void *ptr_PowerGetActiveScheme = NULL;
extern void *ptr_PowerImportPowerScheme;
void *ptr_PowerImportPowerScheme = NULL;
extern void *ptr_PowerOpenSystemPowerKey;
void *ptr_PowerOpenSystemPowerKey = NULL;
extern void *ptr_PowerOpenUserPowerKey;
void *ptr_PowerOpenUserPowerKey = NULL;
extern void *ptr_PowerPolicyToGUIDFormat;
void *ptr_PowerPolicyToGUIDFormat = NULL;
extern void *ptr_PowerReadACDefaultIndex;
void *ptr_PowerReadACDefaultIndex = NULL;
extern void *ptr_PowerReadACValue;
void *ptr_PowerReadACValue = NULL;
extern void *ptr_PowerReadACValueIndex;
void *ptr_PowerReadACValueIndex = NULL;
extern void *ptr_PowerReadDCDefaultIndex;
void *ptr_PowerReadDCDefaultIndex = NULL;
extern void *ptr_PowerReadDCValue;
void *ptr_PowerReadDCValue = NULL;
extern void *ptr_PowerReadDCValueIndex;
void *ptr_PowerReadDCValueIndex = NULL;
extern void *ptr_PowerReadDescription;
void *ptr_PowerReadDescription = NULL;
extern void *ptr_PowerReadFriendlyName;
void *ptr_PowerReadFriendlyName = NULL;
extern void *ptr_PowerReadIconResourceSpecifier;
void *ptr_PowerReadIconResourceSpecifier = NULL;
extern void *ptr_PowerReadPossibleDescription;
void *ptr_PowerReadPossibleDescription = NULL;
extern void *ptr_PowerReadPossibleFriendlyName;
void *ptr_PowerReadPossibleFriendlyName = NULL;
extern void *ptr_PowerReadPossibleValue;
void *ptr_PowerReadPossibleValue = NULL;
extern void *ptr_PowerReadSecurityDescriptor;
void *ptr_PowerReadSecurityDescriptor = NULL;
extern void *ptr_PowerReadSettingAttributes;
void *ptr_PowerReadSettingAttributes = NULL;
extern void *ptr_PowerReadValueIncrement;
void *ptr_PowerReadValueIncrement = NULL;
extern void *ptr_PowerReadValueMax;
void *ptr_PowerReadValueMax = NULL;
extern void *ptr_PowerReadValueMin;
void *ptr_PowerReadValueMin = NULL;
extern void *ptr_PowerReadValueUnitsSpecifier;
void *ptr_PowerReadValueUnitsSpecifier = NULL;
extern void *ptr_PowerRemovePowerSetting;
void *ptr_PowerRemovePowerSetting = NULL;
extern void *ptr_PowerReplaceDefaultPowerSchemes;
void *ptr_PowerReplaceDefaultPowerSchemes = NULL;
extern void *ptr_PowerRestoreDefaultPowerSchemes;
void *ptr_PowerRestoreDefaultPowerSchemes = NULL;
extern void *ptr_PowerRestoreIndividualDefaultPowerScheme;
void *ptr_PowerRestoreIndividualDefaultPowerScheme = NULL;
extern void *ptr_PowerSetActiveScheme;
void *ptr_PowerSetActiveScheme = NULL;
extern void *ptr_PowerSetAlsBrightnessOffset;
void *ptr_PowerSetAlsBrightnessOffset = NULL;
extern void *ptr_PowerSettingAccessCheck;
void *ptr_PowerSettingAccessCheck = NULL;
extern void *ptr_PowerSettingRegisterNotification;
void *ptr_PowerSettingRegisterNotification = NULL;
extern void *ptr_PowerSettingUnregisterNotification;
void *ptr_PowerSettingUnregisterNotification = NULL;
extern void *ptr_PowerWriteACDefaultIndex;
void *ptr_PowerWriteACDefaultIndex = NULL;
extern void *ptr_PowerWriteACValueIndex;
void *ptr_PowerWriteACValueIndex = NULL;
extern void *ptr_PowerWriteDCDefaultIndex;
void *ptr_PowerWriteDCDefaultIndex = NULL;
extern void *ptr_PowerWriteDCValueIndex;
void *ptr_PowerWriteDCValueIndex = NULL;
extern void *ptr_PowerWriteDescription;
void *ptr_PowerWriteDescription = NULL;
extern void *ptr_PowerWriteFriendlyName;
void *ptr_PowerWriteFriendlyName = NULL;
extern void *ptr_PowerWriteIconResourceSpecifier;
void *ptr_PowerWriteIconResourceSpecifier = NULL;
extern void *ptr_PowerWritePossibleDescription;
void *ptr_PowerWritePossibleDescription = NULL;
extern void *ptr_PowerWritePossibleFriendlyName;
void *ptr_PowerWritePossibleFriendlyName = NULL;
extern void *ptr_PowerWritePossibleValue;
void *ptr_PowerWritePossibleValue = NULL;
extern void *ptr_PowerWriteSecurityDescriptor;
void *ptr_PowerWriteSecurityDescriptor = NULL;
extern void *ptr_PowerWriteSettingAttributes;
void *ptr_PowerWriteSettingAttributes = NULL;
extern void *ptr_PowerWriteValueIncrement;
void *ptr_PowerWriteValueIncrement = NULL;
extern void *ptr_PowerWriteValueMax;
void *ptr_PowerWriteValueMax = NULL;
extern void *ptr_PowerWriteValueMin;
void *ptr_PowerWriteValueMin = NULL;
extern void *ptr_PowerWriteValueUnitsSpecifier;
void *ptr_PowerWriteValueUnitsSpecifier = NULL;
extern void *ptr_ReadGlobalPwrPolicy;
void *ptr_ReadGlobalPwrPolicy = NULL;
extern void *ptr_ReadProcessorPwrScheme;
void *ptr_ReadProcessorPwrScheme = NULL;
extern void *ptr_ReadPwrScheme;
void *ptr_ReadPwrScheme = NULL;
extern void *ptr_SetActivePwrScheme;
void *ptr_SetActivePwrScheme = NULL;
extern void *ptr_SetSuspendState;
void *ptr_SetSuspendState = NULL;
extern void *ptr_ValidatePowerPolicies;
void *ptr_ValidatePowerPolicies = NULL;
extern void *ptr_WriteGlobalPwrPolicy;
void *ptr_WriteGlobalPwrPolicy = NULL;
extern void *ptr_WriteProcessorPwrScheme;
void *ptr_WriteProcessorPwrScheme = NULL;
extern void *ptr_WritePwrScheme;
void *ptr_WritePwrScheme = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\powrprof.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_CallNtPowerInformation = (__vartype(ptr_CallNtPowerInformation))GetProcAddress(hModule, "CallNtPowerInformation");
   ptr_CanUserWritePwrScheme = (__vartype(ptr_CanUserWritePwrScheme))GetProcAddress(hModule, "CanUserWritePwrScheme");
   ptr_DeletePwrScheme = (__vartype(ptr_DeletePwrScheme))GetProcAddress(hModule, "DeletePwrScheme");
   ptr_DevicePowerClose = (__vartype(ptr_DevicePowerClose))GetProcAddress(hModule, "DevicePowerClose");
   ptr_DevicePowerEnumDevices = (__vartype(ptr_DevicePowerEnumDevices))GetProcAddress(hModule, "DevicePowerEnumDevices");
   ptr_DevicePowerOpen = (__vartype(ptr_DevicePowerOpen))GetProcAddress(hModule, "DevicePowerOpen");
   ptr_DevicePowerSetDeviceState = (__vartype(ptr_DevicePowerSetDeviceState))GetProcAddress(hModule, "DevicePowerSetDeviceState");
   ptr_EnumPwrSchemes = (__vartype(ptr_EnumPwrSchemes))GetProcAddress(hModule, "EnumPwrSchemes");
   ptr_GUIDFormatToGlobalPowerPolicy = (__vartype(ptr_GUIDFormatToGlobalPowerPolicy))GetProcAddress(hModule, "GUIDFormatToGlobalPowerPolicy");
   ptr_GUIDFormatToPowerPolicy = (__vartype(ptr_GUIDFormatToPowerPolicy))GetProcAddress(hModule, "GUIDFormatToPowerPolicy");
   ptr_GetActivePwrScheme = (__vartype(ptr_GetActivePwrScheme))GetProcAddress(hModule, "GetActivePwrScheme");
   ptr_GetCurrentPowerPolicies = (__vartype(ptr_GetCurrentPowerPolicies))GetProcAddress(hModule, "GetCurrentPowerPolicies");
   ptr_GetPwrCapabilities = (__vartype(ptr_GetPwrCapabilities))GetProcAddress(hModule, "GetPwrCapabilities");
   ptr_GetPwrDiskSpindownRange = (__vartype(ptr_GetPwrDiskSpindownRange))GetProcAddress(hModule, "GetPwrDiskSpindownRange");
   ptr_IsAdminOverrideActive = (__vartype(ptr_IsAdminOverrideActive))GetProcAddress(hModule, "IsAdminOverrideActive");
   ptr_IsPwrHibernateAllowed = (__vartype(ptr_IsPwrHibernateAllowed))GetProcAddress(hModule, "IsPwrHibernateAllowed");
   ptr_IsPwrShutdownAllowed = (__vartype(ptr_IsPwrShutdownAllowed))GetProcAddress(hModule, "IsPwrShutdownAllowed");
   ptr_IsPwrSuspendAllowed = (__vartype(ptr_IsPwrSuspendAllowed))GetProcAddress(hModule, "IsPwrSuspendAllowed");
   ptr_LoadCurrentPwrScheme = (__vartype(ptr_LoadCurrentPwrScheme))GetProcAddress(hModule, "LoadCurrentPwrScheme");
   ptr_MergeLegacyPwrScheme = (__vartype(ptr_MergeLegacyPwrScheme))GetProcAddress(hModule, "MergeLegacyPwrScheme");
   ptr_PowerApplyPowerRequestOverride = (__vartype(ptr_PowerApplyPowerRequestOverride))GetProcAddress(hModule, "PowerApplyPowerRequestOverride");
   ptr_PowerCanRestoreIndividualDefaultPowerScheme = (__vartype(ptr_PowerCanRestoreIndividualDefaultPowerScheme))GetProcAddress(hModule, "PowerCanRestoreIndividualDefaultPowerScheme");
   ptr_PowerCreatePossibleSetting = (__vartype(ptr_PowerCreatePossibleSetting))GetProcAddress(hModule, "PowerCreatePossibleSetting");
   ptr_PowerCreateSetting = (__vartype(ptr_PowerCreateSetting))GetProcAddress(hModule, "PowerCreateSetting");
   ptr_PowerCustomizePlatformPowerSettings = (__vartype(ptr_PowerCustomizePlatformPowerSettings))GetProcAddress(hModule, "PowerCustomizePlatformPowerSettings");
   ptr_PowerDebugDifPowerPolicies = (__vartype(ptr_PowerDebugDifPowerPolicies))GetProcAddress(hModule, "PowerDebugDifPowerPolicies");
   ptr_PowerDebugDifSystemPowerPolicies = (__vartype(ptr_PowerDebugDifSystemPowerPolicies))GetProcAddress(hModule, "PowerDebugDifSystemPowerPolicies");
   ptr_PowerDebugDumpPowerPolicy = (__vartype(ptr_PowerDebugDumpPowerPolicy))GetProcAddress(hModule, "PowerDebugDumpPowerPolicy");
   ptr_PowerDebugDumpPowerScheme = (__vartype(ptr_PowerDebugDumpPowerScheme))GetProcAddress(hModule, "PowerDebugDumpPowerScheme");
   ptr_PowerDebugDumpSystemPowerCapabilities = (__vartype(ptr_PowerDebugDumpSystemPowerCapabilities))GetProcAddress(hModule, "PowerDebugDumpSystemPowerCapabilities");
   ptr_PowerDebugDumpSystemPowerPolicy = (__vartype(ptr_PowerDebugDumpSystemPowerPolicy))GetProcAddress(hModule, "PowerDebugDumpSystemPowerPolicy");
   ptr_PowerDeleteScheme = (__vartype(ptr_PowerDeleteScheme))GetProcAddress(hModule, "PowerDeleteScheme");
   ptr_PowerDeterminePlatformRole = (__vartype(ptr_PowerDeterminePlatformRole))GetProcAddress(hModule, "PowerDeterminePlatformRole");
   ptr_PowerDuplicateScheme = (__vartype(ptr_PowerDuplicateScheme))GetProcAddress(hModule, "PowerDuplicateScheme");
   ptr_PowerEnumerate = (__vartype(ptr_PowerEnumerate))GetProcAddress(hModule, "PowerEnumerate");
   ptr_PowerGetActiveScheme = (__vartype(ptr_PowerGetActiveScheme))GetProcAddress(hModule, "PowerGetActiveScheme");
   ptr_PowerImportPowerScheme = (__vartype(ptr_PowerImportPowerScheme))GetProcAddress(hModule, "PowerImportPowerScheme");
   ptr_PowerOpenSystemPowerKey = (__vartype(ptr_PowerOpenSystemPowerKey))GetProcAddress(hModule, "PowerOpenSystemPowerKey");
   ptr_PowerOpenUserPowerKey = (__vartype(ptr_PowerOpenUserPowerKey))GetProcAddress(hModule, "PowerOpenUserPowerKey");
   ptr_PowerPolicyToGUIDFormat = (__vartype(ptr_PowerPolicyToGUIDFormat))GetProcAddress(hModule, "PowerPolicyToGUIDFormat");
   ptr_PowerReadACDefaultIndex = (__vartype(ptr_PowerReadACDefaultIndex))GetProcAddress(hModule, "PowerReadACDefaultIndex");
   ptr_PowerReadACValue = (__vartype(ptr_PowerReadACValue))GetProcAddress(hModule, "PowerReadACValue");
   ptr_PowerReadACValueIndex = (__vartype(ptr_PowerReadACValueIndex))GetProcAddress(hModule, "PowerReadACValueIndex");
   ptr_PowerReadDCDefaultIndex = (__vartype(ptr_PowerReadDCDefaultIndex))GetProcAddress(hModule, "PowerReadDCDefaultIndex");
   ptr_PowerReadDCValue = (__vartype(ptr_PowerReadDCValue))GetProcAddress(hModule, "PowerReadDCValue");
   ptr_PowerReadDCValueIndex = (__vartype(ptr_PowerReadDCValueIndex))GetProcAddress(hModule, "PowerReadDCValueIndex");
   ptr_PowerReadDescription = (__vartype(ptr_PowerReadDescription))GetProcAddress(hModule, "PowerReadDescription");
   ptr_PowerReadFriendlyName = (__vartype(ptr_PowerReadFriendlyName))GetProcAddress(hModule, "PowerReadFriendlyName");
   ptr_PowerReadIconResourceSpecifier = (__vartype(ptr_PowerReadIconResourceSpecifier))GetProcAddress(hModule, "PowerReadIconResourceSpecifier");
   ptr_PowerReadPossibleDescription = (__vartype(ptr_PowerReadPossibleDescription))GetProcAddress(hModule, "PowerReadPossibleDescription");
   ptr_PowerReadPossibleFriendlyName = (__vartype(ptr_PowerReadPossibleFriendlyName))GetProcAddress(hModule, "PowerReadPossibleFriendlyName");
   ptr_PowerReadPossibleValue = (__vartype(ptr_PowerReadPossibleValue))GetProcAddress(hModule, "PowerReadPossibleValue");
   ptr_PowerReadSecurityDescriptor = (__vartype(ptr_PowerReadSecurityDescriptor))GetProcAddress(hModule, "PowerReadSecurityDescriptor");
   ptr_PowerReadSettingAttributes = (__vartype(ptr_PowerReadSettingAttributes))GetProcAddress(hModule, "PowerReadSettingAttributes");
   ptr_PowerReadValueIncrement = (__vartype(ptr_PowerReadValueIncrement))GetProcAddress(hModule, "PowerReadValueIncrement");
   ptr_PowerReadValueMax = (__vartype(ptr_PowerReadValueMax))GetProcAddress(hModule, "PowerReadValueMax");
   ptr_PowerReadValueMin = (__vartype(ptr_PowerReadValueMin))GetProcAddress(hModule, "PowerReadValueMin");
   ptr_PowerReadValueUnitsSpecifier = (__vartype(ptr_PowerReadValueUnitsSpecifier))GetProcAddress(hModule, "PowerReadValueUnitsSpecifier");
   ptr_PowerRemovePowerSetting = (__vartype(ptr_PowerRemovePowerSetting))GetProcAddress(hModule, "PowerRemovePowerSetting");
   ptr_PowerReplaceDefaultPowerSchemes = (__vartype(ptr_PowerReplaceDefaultPowerSchemes))GetProcAddress(hModule, "PowerReplaceDefaultPowerSchemes");
   ptr_PowerRestoreDefaultPowerSchemes = (__vartype(ptr_PowerRestoreDefaultPowerSchemes))GetProcAddress(hModule, "PowerRestoreDefaultPowerSchemes");
   ptr_PowerRestoreIndividualDefaultPowerScheme = (__vartype(ptr_PowerRestoreIndividualDefaultPowerScheme))GetProcAddress(hModule, "PowerRestoreIndividualDefaultPowerScheme");
   ptr_PowerSetActiveScheme = (__vartype(ptr_PowerSetActiveScheme))GetProcAddress(hModule, "PowerSetActiveScheme");
   ptr_PowerSetAlsBrightnessOffset = (__vartype(ptr_PowerSetAlsBrightnessOffset))GetProcAddress(hModule, "PowerSetAlsBrightnessOffset");
   ptr_PowerSettingAccessCheck = (__vartype(ptr_PowerSettingAccessCheck))GetProcAddress(hModule, "PowerSettingAccessCheck");
   ptr_PowerSettingRegisterNotification = (__vartype(ptr_PowerSettingRegisterNotification))GetProcAddress(hModule, "PowerSettingRegisterNotification");
   ptr_PowerSettingUnregisterNotification = (__vartype(ptr_PowerSettingUnregisterNotification))GetProcAddress(hModule, "PowerSettingUnregisterNotification");
   ptr_PowerWriteACDefaultIndex = (__vartype(ptr_PowerWriteACDefaultIndex))GetProcAddress(hModule, "PowerWriteACDefaultIndex");
   ptr_PowerWriteACValueIndex = (__vartype(ptr_PowerWriteACValueIndex))GetProcAddress(hModule, "PowerWriteACValueIndex");
   ptr_PowerWriteDCDefaultIndex = (__vartype(ptr_PowerWriteDCDefaultIndex))GetProcAddress(hModule, "PowerWriteDCDefaultIndex");
   ptr_PowerWriteDCValueIndex = (__vartype(ptr_PowerWriteDCValueIndex))GetProcAddress(hModule, "PowerWriteDCValueIndex");
   ptr_PowerWriteDescription = (__vartype(ptr_PowerWriteDescription))GetProcAddress(hModule, "PowerWriteDescription");
   ptr_PowerWriteFriendlyName = (__vartype(ptr_PowerWriteFriendlyName))GetProcAddress(hModule, "PowerWriteFriendlyName");
   ptr_PowerWriteIconResourceSpecifier = (__vartype(ptr_PowerWriteIconResourceSpecifier))GetProcAddress(hModule, "PowerWriteIconResourceSpecifier");
   ptr_PowerWritePossibleDescription = (__vartype(ptr_PowerWritePossibleDescription))GetProcAddress(hModule, "PowerWritePossibleDescription");
   ptr_PowerWritePossibleFriendlyName = (__vartype(ptr_PowerWritePossibleFriendlyName))GetProcAddress(hModule, "PowerWritePossibleFriendlyName");
   ptr_PowerWritePossibleValue = (__vartype(ptr_PowerWritePossibleValue))GetProcAddress(hModule, "PowerWritePossibleValue");
   ptr_PowerWriteSecurityDescriptor = (__vartype(ptr_PowerWriteSecurityDescriptor))GetProcAddress(hModule, "PowerWriteSecurityDescriptor");
   ptr_PowerWriteSettingAttributes = (__vartype(ptr_PowerWriteSettingAttributes))GetProcAddress(hModule, "PowerWriteSettingAttributes");
   ptr_PowerWriteValueIncrement = (__vartype(ptr_PowerWriteValueIncrement))GetProcAddress(hModule, "PowerWriteValueIncrement");
   ptr_PowerWriteValueMax = (__vartype(ptr_PowerWriteValueMax))GetProcAddress(hModule, "PowerWriteValueMax");
   ptr_PowerWriteValueMin = (__vartype(ptr_PowerWriteValueMin))GetProcAddress(hModule, "PowerWriteValueMin");
   ptr_PowerWriteValueUnitsSpecifier = (__vartype(ptr_PowerWriteValueUnitsSpecifier))GetProcAddress(hModule, "PowerWriteValueUnitsSpecifier");
   ptr_ReadGlobalPwrPolicy = (__vartype(ptr_ReadGlobalPwrPolicy))GetProcAddress(hModule, "ReadGlobalPwrPolicy");
   ptr_ReadProcessorPwrScheme = (__vartype(ptr_ReadProcessorPwrScheme))GetProcAddress(hModule, "ReadProcessorPwrScheme");
   ptr_ReadPwrScheme = (__vartype(ptr_ReadPwrScheme))GetProcAddress(hModule, "ReadPwrScheme");
   ptr_SetActivePwrScheme = (__vartype(ptr_SetActivePwrScheme))GetProcAddress(hModule, "SetActivePwrScheme");
   ptr_SetSuspendState = (__vartype(ptr_SetSuspendState))GetProcAddress(hModule, "SetSuspendState");
   ptr_ValidatePowerPolicies = (__vartype(ptr_ValidatePowerPolicies))GetProcAddress(hModule, "ValidatePowerPolicies");
   ptr_WriteGlobalPwrPolicy = (__vartype(ptr_WriteGlobalPwrPolicy))GetProcAddress(hModule, "WriteGlobalPwrPolicy");
   ptr_WriteProcessorPwrScheme = (__vartype(ptr_WriteProcessorPwrScheme))GetProcAddress(hModule, "WriteProcessorPwrScheme");
   ptr_WritePwrScheme = (__vartype(ptr_WritePwrScheme))GetProcAddress(hModule, "WritePwrScheme");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

