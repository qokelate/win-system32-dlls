#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_BestMatchInTable;
void *ptr_BestMatchInTable = NULL;
extern void *ptr_CheckTable;
void *ptr_CheckTable = NULL;
extern void *ptr_CreateTable;
void *ptr_CreateTable = NULL;
extern void *ptr_DeleteFromTable;
void *ptr_DeleteFromTable = NULL;
extern void *ptr_DestroyTable;
void *ptr_DestroyTable = NULL;
extern void *ptr_DumpTable;
void *ptr_DumpTable = NULL;
extern void *ptr_EnumOverTable;
void *ptr_EnumOverTable = NULL;
extern void *ptr_InsertIntoTable;
void *ptr_InsertIntoTable = NULL;
extern void *ptr_MgmAddGroupMembershipEntry;
void *ptr_MgmAddGroupMembershipEntry = NULL;
extern void *ptr_MgmDeInitialize;
void *ptr_MgmDeInitialize = NULL;
extern void *ptr_MgmDeRegisterMProtocol;
void *ptr_MgmDeRegisterMProtocol = NULL;
extern void *ptr_MgmDeleteGroupMembershipEntry;
void *ptr_MgmDeleteGroupMembershipEntry = NULL;
extern void *ptr_MgmGetFirstMfe;
void *ptr_MgmGetFirstMfe = NULL;
extern void *ptr_MgmGetFirstMfeStats;
void *ptr_MgmGetFirstMfeStats = NULL;
extern void *ptr_MgmGetMfe;
void *ptr_MgmGetMfe = NULL;
extern void *ptr_MgmGetMfeStats;
void *ptr_MgmGetMfeStats = NULL;
extern void *ptr_MgmGetNextMfe;
void *ptr_MgmGetNextMfe = NULL;
extern void *ptr_MgmGetNextMfeStats;
void *ptr_MgmGetNextMfeStats = NULL;
extern void *ptr_MgmGetProtocolOnInterface;
void *ptr_MgmGetProtocolOnInterface = NULL;
extern void *ptr_MgmGroupEnumerationEnd;
void *ptr_MgmGroupEnumerationEnd = NULL;
extern void *ptr_MgmGroupEnumerationGetNext;
void *ptr_MgmGroupEnumerationGetNext = NULL;
extern void *ptr_MgmGroupEnumerationStart;
void *ptr_MgmGroupEnumerationStart = NULL;
extern void *ptr_MgmInitialize;
void *ptr_MgmInitialize = NULL;
extern void *ptr_MgmRegisterMProtocol;
void *ptr_MgmRegisterMProtocol = NULL;
extern void *ptr_MgmReleaseInterfaceOwnership;
void *ptr_MgmReleaseInterfaceOwnership = NULL;
extern void *ptr_MgmTakeInterfaceOwnership;
void *ptr_MgmTakeInterfaceOwnership = NULL;
extern void *ptr_NextMatchInTable;
void *ptr_NextMatchInTable = NULL;
extern void *ptr_RtmAddNextHop;
void *ptr_RtmAddNextHop = NULL;
extern void *ptr_RtmAddRoute;
void *ptr_RtmAddRoute = NULL;
extern void *ptr_RtmAddRouteToDest;
void *ptr_RtmAddRouteToDest = NULL;
extern void *ptr_RtmBlockConvertRoutesToStatic;
void *ptr_RtmBlockConvertRoutesToStatic = NULL;
extern void *ptr_RtmBlockDeleteRoutes;
void *ptr_RtmBlockDeleteRoutes = NULL;
extern void *ptr_RtmBlockMethods;
void *ptr_RtmBlockMethods = NULL;
extern void *ptr_RtmBlockSetRouteEnable;
void *ptr_RtmBlockSetRouteEnable = NULL;
extern void *ptr_RtmCloseEnumerationHandle;
void *ptr_RtmCloseEnumerationHandle = NULL;
extern void *ptr_RtmConvertIpv6AddressAndLengthToNetAddress;
void *ptr_RtmConvertIpv6AddressAndLengthToNetAddress = NULL;
extern void *ptr_RtmConvertNetAddressToIpv6AddressAndLength;
void *ptr_RtmConvertNetAddressToIpv6AddressAndLength = NULL;
extern void *ptr_RtmCreateDestEnum;
void *ptr_RtmCreateDestEnum = NULL;
extern void *ptr_RtmCreateEnumerationHandle;
void *ptr_RtmCreateEnumerationHandle = NULL;
extern void *ptr_RtmCreateNextHopEnum;
void *ptr_RtmCreateNextHopEnum = NULL;
extern void *ptr_RtmCreateRouteEnum;
void *ptr_RtmCreateRouteEnum = NULL;
extern void *ptr_RtmCreateRouteList;
void *ptr_RtmCreateRouteList = NULL;
extern void *ptr_RtmCreateRouteListEnum;
void *ptr_RtmCreateRouteListEnum = NULL;
extern void *ptr_RtmDeleteEnumHandle;
void *ptr_RtmDeleteEnumHandle = NULL;
extern void *ptr_RtmDeleteNextHop;
void *ptr_RtmDeleteNextHop = NULL;
extern void *ptr_RtmDeleteRoute;
void *ptr_RtmDeleteRoute = NULL;
extern void *ptr_RtmDeleteRouteList;
void *ptr_RtmDeleteRouteList = NULL;
extern void *ptr_RtmDeleteRouteTable;
void *ptr_RtmDeleteRouteTable = NULL;
extern void *ptr_RtmDeleteRouteToDest;
void *ptr_RtmDeleteRouteToDest = NULL;
extern void *ptr_RtmDequeueRouteChangeMessage;
void *ptr_RtmDequeueRouteChangeMessage = NULL;
extern void *ptr_RtmDereferenceHandles;
void *ptr_RtmDereferenceHandles = NULL;
extern void *ptr_RtmDeregisterClient;
void *ptr_RtmDeregisterClient = NULL;
extern void *ptr_RtmDeregisterEntity;
void *ptr_RtmDeregisterEntity = NULL;
extern void *ptr_RtmDeregisterFromChangeNotification;
void *ptr_RtmDeregisterFromChangeNotification = NULL;
extern void *ptr_RtmEnumerateGetNextRoute;
void *ptr_RtmEnumerateGetNextRoute = NULL;
extern void *ptr_RtmFindNextHop;
void *ptr_RtmFindNextHop = NULL;
extern void *ptr_RtmGetAddressFamilyInfo;
void *ptr_RtmGetAddressFamilyInfo = NULL;
extern void *ptr_RtmGetChangeStatus;
void *ptr_RtmGetChangeStatus = NULL;
extern void *ptr_RtmGetChangedDests;
void *ptr_RtmGetChangedDests = NULL;
extern void *ptr_RtmGetDestInfo;
void *ptr_RtmGetDestInfo = NULL;
extern void *ptr_RtmGetEntityInfo;
void *ptr_RtmGetEntityInfo = NULL;
extern void *ptr_RtmGetEntityMethods;
void *ptr_RtmGetEntityMethods = NULL;
extern void *ptr_RtmGetEnumDests;
void *ptr_RtmGetEnumDests = NULL;
extern void *ptr_RtmGetEnumNextHops;
void *ptr_RtmGetEnumNextHops = NULL;
extern void *ptr_RtmGetEnumRoutes;
void *ptr_RtmGetEnumRoutes = NULL;
extern void *ptr_RtmGetExactMatchDestination;
void *ptr_RtmGetExactMatchDestination = NULL;
extern void *ptr_RtmGetExactMatchRoute;
void *ptr_RtmGetExactMatchRoute = NULL;
extern void *ptr_RtmGetFirstRoute;
void *ptr_RtmGetFirstRoute = NULL;
extern void *ptr_RtmGetInstanceInfo;
void *ptr_RtmGetInstanceInfo = NULL;
extern void *ptr_RtmGetInstances;
void *ptr_RtmGetInstances = NULL;
extern void *ptr_RtmGetLessSpecificDestination;
void *ptr_RtmGetLessSpecificDestination = NULL;
extern void *ptr_RtmGetListEnumRoutes;
void *ptr_RtmGetListEnumRoutes = NULL;
extern void *ptr_RtmGetMostSpecificDestination;
void *ptr_RtmGetMostSpecificDestination = NULL;
extern void *ptr_RtmGetNetworkCount;
void *ptr_RtmGetNetworkCount = NULL;
extern void *ptr_RtmGetNextHopInfo;
void *ptr_RtmGetNextHopInfo = NULL;
extern void *ptr_RtmGetNextHopPointer;
void *ptr_RtmGetNextHopPointer = NULL;
extern void *ptr_RtmGetNextRoute;
void *ptr_RtmGetNextRoute = NULL;
extern void *ptr_RtmGetOpaqueInformationPointer;
void *ptr_RtmGetOpaqueInformationPointer = NULL;
extern void *ptr_RtmGetRegisteredEntities;
void *ptr_RtmGetRegisteredEntities = NULL;
extern void *ptr_RtmGetRouteAge;
void *ptr_RtmGetRouteAge = NULL;
extern void *ptr_RtmGetRouteInfo;
void *ptr_RtmGetRouteInfo = NULL;
extern void *ptr_RtmGetRoutePointer;
void *ptr_RtmGetRoutePointer = NULL;
extern void *ptr_RtmHoldDestination;
void *ptr_RtmHoldDestination = NULL;
extern void *ptr_RtmIgnoreChangedDests;
void *ptr_RtmIgnoreChangedDests = NULL;
extern void *ptr_RtmInsertInRouteList;
void *ptr_RtmInsertInRouteList = NULL;
extern void *ptr_RtmInvokeMethod;
void *ptr_RtmInvokeMethod = NULL;
extern void *ptr_RtmIsBestRoute;
void *ptr_RtmIsBestRoute = NULL;
extern void *ptr_RtmIsMarkedForChangeNotification;
void *ptr_RtmIsMarkedForChangeNotification = NULL;
extern void *ptr_RtmIsRoute;
void *ptr_RtmIsRoute = NULL;
extern void *ptr_RtmLockDestination;
void *ptr_RtmLockDestination = NULL;
extern void *ptr_RtmLockNextHop;
void *ptr_RtmLockNextHop = NULL;
extern void *ptr_RtmLockRoute;
void *ptr_RtmLockRoute = NULL;
extern void *ptr_RtmLookupIPDestination;
void *ptr_RtmLookupIPDestination = NULL;
extern void *ptr_RtmMarkDestForChangeNotification;
void *ptr_RtmMarkDestForChangeNotification = NULL;
extern void *ptr_RtmReadAddressFamilyConfig;
void *ptr_RtmReadAddressFamilyConfig = NULL;
extern void *ptr_RtmReadInstanceConfig;
void *ptr_RtmReadInstanceConfig = NULL;
extern void *ptr_RtmReferenceHandles;
void *ptr_RtmReferenceHandles = NULL;
extern void *ptr_RtmRegisterClient;
void *ptr_RtmRegisterClient = NULL;
extern void *ptr_RtmRegisterEntity;
void *ptr_RtmRegisterEntity = NULL;
extern void *ptr_RtmRegisterForChangeNotification;
void *ptr_RtmRegisterForChangeNotification = NULL;
extern void *ptr_RtmReleaseChangedDests;
void *ptr_RtmReleaseChangedDests = NULL;
extern void *ptr_RtmReleaseDestInfo;
void *ptr_RtmReleaseDestInfo = NULL;
extern void *ptr_RtmReleaseDests;
void *ptr_RtmReleaseDests = NULL;
extern void *ptr_RtmReleaseEntities;
void *ptr_RtmReleaseEntities = NULL;
extern void *ptr_RtmReleaseEntityInfo;
void *ptr_RtmReleaseEntityInfo = NULL;
extern void *ptr_RtmReleaseNextHopInfo;
void *ptr_RtmReleaseNextHopInfo = NULL;
extern void *ptr_RtmReleaseNextHops;
void *ptr_RtmReleaseNextHops = NULL;
extern void *ptr_RtmReleaseRouteInfo;
void *ptr_RtmReleaseRouteInfo = NULL;
extern void *ptr_RtmReleaseRoutes;
void *ptr_RtmReleaseRoutes = NULL;
extern void *ptr_RtmUpdateAndUnlockRoute;
void *ptr_RtmUpdateAndUnlockRoute = NULL;
extern void *ptr_RtmWriteAddressFamilyConfig;
void *ptr_RtmWriteAddressFamilyConfig = NULL;
extern void *ptr_RtmWriteInstanceConfig;
void *ptr_RtmWriteInstanceConfig = NULL;
extern void *ptr_SearchInTable;
void *ptr_SearchInTable = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\rtm.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_BestMatchInTable = (__vartype(ptr_BestMatchInTable))GetProcAddress(hModule, "BestMatchInTable");
   ptr_CheckTable = (__vartype(ptr_CheckTable))GetProcAddress(hModule, "CheckTable");
   ptr_CreateTable = (__vartype(ptr_CreateTable))GetProcAddress(hModule, "CreateTable");
   ptr_DeleteFromTable = (__vartype(ptr_DeleteFromTable))GetProcAddress(hModule, "DeleteFromTable");
   ptr_DestroyTable = (__vartype(ptr_DestroyTable))GetProcAddress(hModule, "DestroyTable");
   ptr_DumpTable = (__vartype(ptr_DumpTable))GetProcAddress(hModule, "DumpTable");
   ptr_EnumOverTable = (__vartype(ptr_EnumOverTable))GetProcAddress(hModule, "EnumOverTable");
   ptr_InsertIntoTable = (__vartype(ptr_InsertIntoTable))GetProcAddress(hModule, "InsertIntoTable");
   ptr_MgmAddGroupMembershipEntry = (__vartype(ptr_MgmAddGroupMembershipEntry))GetProcAddress(hModule, "MgmAddGroupMembershipEntry");
   ptr_MgmDeInitialize = (__vartype(ptr_MgmDeInitialize))GetProcAddress(hModule, "MgmDeInitialize");
   ptr_MgmDeRegisterMProtocol = (__vartype(ptr_MgmDeRegisterMProtocol))GetProcAddress(hModule, "MgmDeRegisterMProtocol");
   ptr_MgmDeleteGroupMembershipEntry = (__vartype(ptr_MgmDeleteGroupMembershipEntry))GetProcAddress(hModule, "MgmDeleteGroupMembershipEntry");
   ptr_MgmGetFirstMfe = (__vartype(ptr_MgmGetFirstMfe))GetProcAddress(hModule, "MgmGetFirstMfe");
   ptr_MgmGetFirstMfeStats = (__vartype(ptr_MgmGetFirstMfeStats))GetProcAddress(hModule, "MgmGetFirstMfeStats");
   ptr_MgmGetMfe = (__vartype(ptr_MgmGetMfe))GetProcAddress(hModule, "MgmGetMfe");
   ptr_MgmGetMfeStats = (__vartype(ptr_MgmGetMfeStats))GetProcAddress(hModule, "MgmGetMfeStats");
   ptr_MgmGetNextMfe = (__vartype(ptr_MgmGetNextMfe))GetProcAddress(hModule, "MgmGetNextMfe");
   ptr_MgmGetNextMfeStats = (__vartype(ptr_MgmGetNextMfeStats))GetProcAddress(hModule, "MgmGetNextMfeStats");
   ptr_MgmGetProtocolOnInterface = (__vartype(ptr_MgmGetProtocolOnInterface))GetProcAddress(hModule, "MgmGetProtocolOnInterface");
   ptr_MgmGroupEnumerationEnd = (__vartype(ptr_MgmGroupEnumerationEnd))GetProcAddress(hModule, "MgmGroupEnumerationEnd");
   ptr_MgmGroupEnumerationGetNext = (__vartype(ptr_MgmGroupEnumerationGetNext))GetProcAddress(hModule, "MgmGroupEnumerationGetNext");
   ptr_MgmGroupEnumerationStart = (__vartype(ptr_MgmGroupEnumerationStart))GetProcAddress(hModule, "MgmGroupEnumerationStart");
   ptr_MgmInitialize = (__vartype(ptr_MgmInitialize))GetProcAddress(hModule, "MgmInitialize");
   ptr_MgmRegisterMProtocol = (__vartype(ptr_MgmRegisterMProtocol))GetProcAddress(hModule, "MgmRegisterMProtocol");
   ptr_MgmReleaseInterfaceOwnership = (__vartype(ptr_MgmReleaseInterfaceOwnership))GetProcAddress(hModule, "MgmReleaseInterfaceOwnership");
   ptr_MgmTakeInterfaceOwnership = (__vartype(ptr_MgmTakeInterfaceOwnership))GetProcAddress(hModule, "MgmTakeInterfaceOwnership");
   ptr_NextMatchInTable = (__vartype(ptr_NextMatchInTable))GetProcAddress(hModule, "NextMatchInTable");
   ptr_RtmAddNextHop = (__vartype(ptr_RtmAddNextHop))GetProcAddress(hModule, "RtmAddNextHop");
   ptr_RtmAddRoute = (__vartype(ptr_RtmAddRoute))GetProcAddress(hModule, "RtmAddRoute");
   ptr_RtmAddRouteToDest = (__vartype(ptr_RtmAddRouteToDest))GetProcAddress(hModule, "RtmAddRouteToDest");
   ptr_RtmBlockConvertRoutesToStatic = (__vartype(ptr_RtmBlockConvertRoutesToStatic))GetProcAddress(hModule, "RtmBlockConvertRoutesToStatic");
   ptr_RtmBlockDeleteRoutes = (__vartype(ptr_RtmBlockDeleteRoutes))GetProcAddress(hModule, "RtmBlockDeleteRoutes");
   ptr_RtmBlockMethods = (__vartype(ptr_RtmBlockMethods))GetProcAddress(hModule, "RtmBlockMethods");
   ptr_RtmBlockSetRouteEnable = (__vartype(ptr_RtmBlockSetRouteEnable))GetProcAddress(hModule, "RtmBlockSetRouteEnable");
   ptr_RtmCloseEnumerationHandle = (__vartype(ptr_RtmCloseEnumerationHandle))GetProcAddress(hModule, "RtmCloseEnumerationHandle");
   ptr_RtmConvertIpv6AddressAndLengthToNetAddress = (__vartype(ptr_RtmConvertIpv6AddressAndLengthToNetAddress))GetProcAddress(hModule, "RtmConvertIpv6AddressAndLengthToNetAddress");
   ptr_RtmConvertNetAddressToIpv6AddressAndLength = (__vartype(ptr_RtmConvertNetAddressToIpv6AddressAndLength))GetProcAddress(hModule, "RtmConvertNetAddressToIpv6AddressAndLength");
   ptr_RtmCreateDestEnum = (__vartype(ptr_RtmCreateDestEnum))GetProcAddress(hModule, "RtmCreateDestEnum");
   ptr_RtmCreateEnumerationHandle = (__vartype(ptr_RtmCreateEnumerationHandle))GetProcAddress(hModule, "RtmCreateEnumerationHandle");
   ptr_RtmCreateNextHopEnum = (__vartype(ptr_RtmCreateNextHopEnum))GetProcAddress(hModule, "RtmCreateNextHopEnum");
   ptr_RtmCreateRouteEnum = (__vartype(ptr_RtmCreateRouteEnum))GetProcAddress(hModule, "RtmCreateRouteEnum");
   ptr_RtmCreateRouteList = (__vartype(ptr_RtmCreateRouteList))GetProcAddress(hModule, "RtmCreateRouteList");
   ptr_RtmCreateRouteListEnum = (__vartype(ptr_RtmCreateRouteListEnum))GetProcAddress(hModule, "RtmCreateRouteListEnum");
   ptr_RtmDeleteEnumHandle = (__vartype(ptr_RtmDeleteEnumHandle))GetProcAddress(hModule, "RtmDeleteEnumHandle");
   ptr_RtmDeleteNextHop = (__vartype(ptr_RtmDeleteNextHop))GetProcAddress(hModule, "RtmDeleteNextHop");
   ptr_RtmDeleteRoute = (__vartype(ptr_RtmDeleteRoute))GetProcAddress(hModule, "RtmDeleteRoute");
   ptr_RtmDeleteRouteList = (__vartype(ptr_RtmDeleteRouteList))GetProcAddress(hModule, "RtmDeleteRouteList");
   ptr_RtmDeleteRouteTable = (__vartype(ptr_RtmDeleteRouteTable))GetProcAddress(hModule, "RtmDeleteRouteTable");
   ptr_RtmDeleteRouteToDest = (__vartype(ptr_RtmDeleteRouteToDest))GetProcAddress(hModule, "RtmDeleteRouteToDest");
   ptr_RtmDequeueRouteChangeMessage = (__vartype(ptr_RtmDequeueRouteChangeMessage))GetProcAddress(hModule, "RtmDequeueRouteChangeMessage");
   ptr_RtmDereferenceHandles = (__vartype(ptr_RtmDereferenceHandles))GetProcAddress(hModule, "RtmDereferenceHandles");
   ptr_RtmDeregisterClient = (__vartype(ptr_RtmDeregisterClient))GetProcAddress(hModule, "RtmDeregisterClient");
   ptr_RtmDeregisterEntity = (__vartype(ptr_RtmDeregisterEntity))GetProcAddress(hModule, "RtmDeregisterEntity");
   ptr_RtmDeregisterFromChangeNotification = (__vartype(ptr_RtmDeregisterFromChangeNotification))GetProcAddress(hModule, "RtmDeregisterFromChangeNotification");
   ptr_RtmEnumerateGetNextRoute = (__vartype(ptr_RtmEnumerateGetNextRoute))GetProcAddress(hModule, "RtmEnumerateGetNextRoute");
   ptr_RtmFindNextHop = (__vartype(ptr_RtmFindNextHop))GetProcAddress(hModule, "RtmFindNextHop");
   ptr_RtmGetAddressFamilyInfo = (__vartype(ptr_RtmGetAddressFamilyInfo))GetProcAddress(hModule, "RtmGetAddressFamilyInfo");
   ptr_RtmGetChangeStatus = (__vartype(ptr_RtmGetChangeStatus))GetProcAddress(hModule, "RtmGetChangeStatus");
   ptr_RtmGetChangedDests = (__vartype(ptr_RtmGetChangedDests))GetProcAddress(hModule, "RtmGetChangedDests");
   ptr_RtmGetDestInfo = (__vartype(ptr_RtmGetDestInfo))GetProcAddress(hModule, "RtmGetDestInfo");
   ptr_RtmGetEntityInfo = (__vartype(ptr_RtmGetEntityInfo))GetProcAddress(hModule, "RtmGetEntityInfo");
   ptr_RtmGetEntityMethods = (__vartype(ptr_RtmGetEntityMethods))GetProcAddress(hModule, "RtmGetEntityMethods");
   ptr_RtmGetEnumDests = (__vartype(ptr_RtmGetEnumDests))GetProcAddress(hModule, "RtmGetEnumDests");
   ptr_RtmGetEnumNextHops = (__vartype(ptr_RtmGetEnumNextHops))GetProcAddress(hModule, "RtmGetEnumNextHops");
   ptr_RtmGetEnumRoutes = (__vartype(ptr_RtmGetEnumRoutes))GetProcAddress(hModule, "RtmGetEnumRoutes");
   ptr_RtmGetExactMatchDestination = (__vartype(ptr_RtmGetExactMatchDestination))GetProcAddress(hModule, "RtmGetExactMatchDestination");
   ptr_RtmGetExactMatchRoute = (__vartype(ptr_RtmGetExactMatchRoute))GetProcAddress(hModule, "RtmGetExactMatchRoute");
   ptr_RtmGetFirstRoute = (__vartype(ptr_RtmGetFirstRoute))GetProcAddress(hModule, "RtmGetFirstRoute");
   ptr_RtmGetInstanceInfo = (__vartype(ptr_RtmGetInstanceInfo))GetProcAddress(hModule, "RtmGetInstanceInfo");
   ptr_RtmGetInstances = (__vartype(ptr_RtmGetInstances))GetProcAddress(hModule, "RtmGetInstances");
   ptr_RtmGetLessSpecificDestination = (__vartype(ptr_RtmGetLessSpecificDestination))GetProcAddress(hModule, "RtmGetLessSpecificDestination");
   ptr_RtmGetListEnumRoutes = (__vartype(ptr_RtmGetListEnumRoutes))GetProcAddress(hModule, "RtmGetListEnumRoutes");
   ptr_RtmGetMostSpecificDestination = (__vartype(ptr_RtmGetMostSpecificDestination))GetProcAddress(hModule, "RtmGetMostSpecificDestination");
   ptr_RtmGetNetworkCount = (__vartype(ptr_RtmGetNetworkCount))GetProcAddress(hModule, "RtmGetNetworkCount");
   ptr_RtmGetNextHopInfo = (__vartype(ptr_RtmGetNextHopInfo))GetProcAddress(hModule, "RtmGetNextHopInfo");
   ptr_RtmGetNextHopPointer = (__vartype(ptr_RtmGetNextHopPointer))GetProcAddress(hModule, "RtmGetNextHopPointer");
   ptr_RtmGetNextRoute = (__vartype(ptr_RtmGetNextRoute))GetProcAddress(hModule, "RtmGetNextRoute");
   ptr_RtmGetOpaqueInformationPointer = (__vartype(ptr_RtmGetOpaqueInformationPointer))GetProcAddress(hModule, "RtmGetOpaqueInformationPointer");
   ptr_RtmGetRegisteredEntities = (__vartype(ptr_RtmGetRegisteredEntities))GetProcAddress(hModule, "RtmGetRegisteredEntities");
   ptr_RtmGetRouteAge = (__vartype(ptr_RtmGetRouteAge))GetProcAddress(hModule, "RtmGetRouteAge");
   ptr_RtmGetRouteInfo = (__vartype(ptr_RtmGetRouteInfo))GetProcAddress(hModule, "RtmGetRouteInfo");
   ptr_RtmGetRoutePointer = (__vartype(ptr_RtmGetRoutePointer))GetProcAddress(hModule, "RtmGetRoutePointer");
   ptr_RtmHoldDestination = (__vartype(ptr_RtmHoldDestination))GetProcAddress(hModule, "RtmHoldDestination");
   ptr_RtmIgnoreChangedDests = (__vartype(ptr_RtmIgnoreChangedDests))GetProcAddress(hModule, "RtmIgnoreChangedDests");
   ptr_RtmInsertInRouteList = (__vartype(ptr_RtmInsertInRouteList))GetProcAddress(hModule, "RtmInsertInRouteList");
   ptr_RtmInvokeMethod = (__vartype(ptr_RtmInvokeMethod))GetProcAddress(hModule, "RtmInvokeMethod");
   ptr_RtmIsBestRoute = (__vartype(ptr_RtmIsBestRoute))GetProcAddress(hModule, "RtmIsBestRoute");
   ptr_RtmIsMarkedForChangeNotification = (__vartype(ptr_RtmIsMarkedForChangeNotification))GetProcAddress(hModule, "RtmIsMarkedForChangeNotification");
   ptr_RtmIsRoute = (__vartype(ptr_RtmIsRoute))GetProcAddress(hModule, "RtmIsRoute");
   ptr_RtmLockDestination = (__vartype(ptr_RtmLockDestination))GetProcAddress(hModule, "RtmLockDestination");
   ptr_RtmLockNextHop = (__vartype(ptr_RtmLockNextHop))GetProcAddress(hModule, "RtmLockNextHop");
   ptr_RtmLockRoute = (__vartype(ptr_RtmLockRoute))GetProcAddress(hModule, "RtmLockRoute");
   ptr_RtmLookupIPDestination = (__vartype(ptr_RtmLookupIPDestination))GetProcAddress(hModule, "RtmLookupIPDestination");
   ptr_RtmMarkDestForChangeNotification = (__vartype(ptr_RtmMarkDestForChangeNotification))GetProcAddress(hModule, "RtmMarkDestForChangeNotification");
   ptr_RtmReadAddressFamilyConfig = (__vartype(ptr_RtmReadAddressFamilyConfig))GetProcAddress(hModule, "RtmReadAddressFamilyConfig");
   ptr_RtmReadInstanceConfig = (__vartype(ptr_RtmReadInstanceConfig))GetProcAddress(hModule, "RtmReadInstanceConfig");
   ptr_RtmReferenceHandles = (__vartype(ptr_RtmReferenceHandles))GetProcAddress(hModule, "RtmReferenceHandles");
   ptr_RtmRegisterClient = (__vartype(ptr_RtmRegisterClient))GetProcAddress(hModule, "RtmRegisterClient");
   ptr_RtmRegisterEntity = (__vartype(ptr_RtmRegisterEntity))GetProcAddress(hModule, "RtmRegisterEntity");
   ptr_RtmRegisterForChangeNotification = (__vartype(ptr_RtmRegisterForChangeNotification))GetProcAddress(hModule, "RtmRegisterForChangeNotification");
   ptr_RtmReleaseChangedDests = (__vartype(ptr_RtmReleaseChangedDests))GetProcAddress(hModule, "RtmReleaseChangedDests");
   ptr_RtmReleaseDestInfo = (__vartype(ptr_RtmReleaseDestInfo))GetProcAddress(hModule, "RtmReleaseDestInfo");
   ptr_RtmReleaseDests = (__vartype(ptr_RtmReleaseDests))GetProcAddress(hModule, "RtmReleaseDests");
   ptr_RtmReleaseEntities = (__vartype(ptr_RtmReleaseEntities))GetProcAddress(hModule, "RtmReleaseEntities");
   ptr_RtmReleaseEntityInfo = (__vartype(ptr_RtmReleaseEntityInfo))GetProcAddress(hModule, "RtmReleaseEntityInfo");
   ptr_RtmReleaseNextHopInfo = (__vartype(ptr_RtmReleaseNextHopInfo))GetProcAddress(hModule, "RtmReleaseNextHopInfo");
   ptr_RtmReleaseNextHops = (__vartype(ptr_RtmReleaseNextHops))GetProcAddress(hModule, "RtmReleaseNextHops");
   ptr_RtmReleaseRouteInfo = (__vartype(ptr_RtmReleaseRouteInfo))GetProcAddress(hModule, "RtmReleaseRouteInfo");
   ptr_RtmReleaseRoutes = (__vartype(ptr_RtmReleaseRoutes))GetProcAddress(hModule, "RtmReleaseRoutes");
   ptr_RtmUpdateAndUnlockRoute = (__vartype(ptr_RtmUpdateAndUnlockRoute))GetProcAddress(hModule, "RtmUpdateAndUnlockRoute");
   ptr_RtmWriteAddressFamilyConfig = (__vartype(ptr_RtmWriteAddressFamilyConfig))GetProcAddress(hModule, "RtmWriteAddressFamilyConfig");
   ptr_RtmWriteInstanceConfig = (__vartype(ptr_RtmWriteInstanceConfig))GetProcAddress(hModule, "RtmWriteInstanceConfig");
   ptr_SearchInTable = (__vartype(ptr_SearchInTable))GetProcAddress(hModule, "SearchInTable");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

