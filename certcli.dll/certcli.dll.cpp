#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_CAAccessCheck;
void *ptr_CAAccessCheck = NULL;
extern void *ptr_CAAccessCheckEx;
void *ptr_CAAccessCheckEx = NULL;
extern void *ptr_CAAddCACertificateType;
void *ptr_CAAddCACertificateType = NULL;
extern void *ptr_CAAddCACertificateTypeEx;
void *ptr_CAAddCACertificateTypeEx = NULL;
extern void *ptr_CACertTypeAccessCheck;
void *ptr_CACertTypeAccessCheck = NULL;
extern void *ptr_CACertTypeAccessCheckEx;
void *ptr_CACertTypeAccessCheckEx = NULL;
extern void *ptr_CACertTypeAuthzAccessCheck;
void *ptr_CACertTypeAuthzAccessCheck = NULL;
extern void *ptr_CACertTypeGetSecurity;
void *ptr_CACertTypeGetSecurity = NULL;
extern void *ptr_CACertTypeQuery;
void *ptr_CACertTypeQuery = NULL;
extern void *ptr_CACertTypeRegisterQuery;
void *ptr_CACertTypeRegisterQuery = NULL;
extern void *ptr_CACertTypeSetSecurity;
void *ptr_CACertTypeSetSecurity = NULL;
extern void *ptr_CACertTypeUnregisterQuery;
void *ptr_CACertTypeUnregisterQuery = NULL;
extern void *ptr_CACloneCertType;
void *ptr_CACloneCertType = NULL;
extern void *ptr_CACloseCA;
void *ptr_CACloseCA = NULL;
extern void *ptr_CACloseCertType;
void *ptr_CACloseCertType = NULL;
extern void *ptr_CACountCAs;
void *ptr_CACountCAs = NULL;
extern void *ptr_CACountCertTypes;
void *ptr_CACountCertTypes = NULL;
extern void *ptr_CACreateAutoEnrollmentObjectEx;
void *ptr_CACreateAutoEnrollmentObjectEx = NULL;
extern void *ptr_CACreateCertType;
void *ptr_CACreateCertType = NULL;
extern void *ptr_CACreateLocalAutoEnrollmentObject;
void *ptr_CACreateLocalAutoEnrollmentObject = NULL;
extern void *ptr_CACreateNewCA;
void *ptr_CACreateNewCA = NULL;
extern void *ptr_CADCSetCertTypePropertyEx;
void *ptr_CADCSetCertTypePropertyEx = NULL;
extern void *ptr_CADeleteCA;
void *ptr_CADeleteCA = NULL;
extern void *ptr_CADeleteCAEx;
void *ptr_CADeleteCAEx = NULL;
extern void *ptr_CADeleteCertType;
void *ptr_CADeleteCertType = NULL;
extern void *ptr_CADeleteCertTypeEx;
void *ptr_CADeleteCertTypeEx = NULL;
extern void *ptr_CADeleteLocalAutoEnrollmentObject;
void *ptr_CADeleteLocalAutoEnrollmentObject = NULL;
extern void *ptr_CAEnumCertTypes;
void *ptr_CAEnumCertTypes = NULL;
extern void *ptr_CAEnumCertTypesEx;
void *ptr_CAEnumCertTypesEx = NULL;
extern void *ptr_CAEnumCertTypesForCA;
void *ptr_CAEnumCertTypesForCA = NULL;
extern void *ptr_CAEnumCertTypesForCAEx;
void *ptr_CAEnumCertTypesForCAEx = NULL;
extern void *ptr_CAEnumFirstCA;
void *ptr_CAEnumFirstCA = NULL;
extern void *ptr_CAEnumNextCA;
void *ptr_CAEnumNextCA = NULL;
extern void *ptr_CAEnumNextCertType;
void *ptr_CAEnumNextCertType = NULL;
extern void *ptr_CAFindByCertType;
void *ptr_CAFindByCertType = NULL;
extern void *ptr_CAFindByIssuerDN;
void *ptr_CAFindByIssuerDN = NULL;
extern void *ptr_CAFindByName;
void *ptr_CAFindByName = NULL;
extern void *ptr_CAFindCertTypeByName;
void *ptr_CAFindCertTypeByName = NULL;
extern void *ptr_CAFreeCAProperty;
void *ptr_CAFreeCAProperty = NULL;
extern void *ptr_CAFreeCertTypeExtensions;
void *ptr_CAFreeCertTypeExtensions = NULL;
extern void *ptr_CAFreeCertTypeProperty;
void *ptr_CAFreeCertTypeProperty = NULL;
extern void *ptr_CAGetCACertificate;
void *ptr_CAGetCACertificate = NULL;
extern void *ptr_CAGetCAExpiration;
void *ptr_CAGetCAExpiration = NULL;
extern void *ptr_CAGetCAFlags;
void *ptr_CAGetCAFlags = NULL;
extern void *ptr_CAGetCAProperty;
void *ptr_CAGetCAProperty = NULL;
extern void *ptr_CAGetCASecurity;
void *ptr_CAGetCASecurity = NULL;
extern void *ptr_CAGetCertTypeExpiration;
void *ptr_CAGetCertTypeExpiration = NULL;
extern void *ptr_CAGetCertTypeExtensions;
void *ptr_CAGetCertTypeExtensions = NULL;
extern void *ptr_CAGetCertTypeExtensionsEx;
void *ptr_CAGetCertTypeExtensionsEx = NULL;
extern void *ptr_CAGetCertTypeFlags;
void *ptr_CAGetCertTypeFlags = NULL;
extern void *ptr_CAGetCertTypeFlagsEx;
void *ptr_CAGetCertTypeFlagsEx = NULL;
extern void *ptr_CAGetCertTypeKeySpec;
void *ptr_CAGetCertTypeKeySpec = NULL;
extern void *ptr_CAGetCertTypeProperty;
void *ptr_CAGetCertTypeProperty = NULL;
extern void *ptr_CAGetCertTypePropertyEx;
void *ptr_CAGetCertTypePropertyEx = NULL;
extern void *ptr_CAGetConfigStringFromUIPicker;
void *ptr_CAGetConfigStringFromUIPicker = NULL;
extern void *ptr_CAGetDN;
void *ptr_CAGetDN = NULL;
extern void *ptr_CAInstallDefaultCertType;
void *ptr_CAInstallDefaultCertType = NULL;
extern void *ptr_CAInstallDefaultCertTypeEx;
void *ptr_CAInstallDefaultCertTypeEx = NULL;
extern void *ptr_CAIsCertTypeCurrent;
void *ptr_CAIsCertTypeCurrent = NULL;
extern void *ptr_CAIsCertTypeCurrentEx;
void *ptr_CAIsCertTypeCurrentEx = NULL;
extern void *ptr_CAOIDAdd;
void *ptr_CAOIDAdd = NULL;
extern void *ptr_CAOIDAddEx;
void *ptr_CAOIDAddEx = NULL;
extern void *ptr_CAOIDCreateNew;
void *ptr_CAOIDCreateNew = NULL;
extern void *ptr_CAOIDCreateNewEx;
void *ptr_CAOIDCreateNewEx = NULL;
extern void *ptr_CAOIDDelete;
void *ptr_CAOIDDelete = NULL;
extern void *ptr_CAOIDDeleteEx;
void *ptr_CAOIDDeleteEx = NULL;
extern void *ptr_CAOIDFreeLdapURL;
void *ptr_CAOIDFreeLdapURL = NULL;
extern void *ptr_CAOIDFreeProperty;
void *ptr_CAOIDFreeProperty = NULL;
extern void *ptr_CAOIDGetLdapURL;
void *ptr_CAOIDGetLdapURL = NULL;
extern void *ptr_CAOIDGetProperty;
void *ptr_CAOIDGetProperty = NULL;
extern void *ptr_CAOIDGetPropertyEx;
void *ptr_CAOIDGetPropertyEx = NULL;
extern void *ptr_CAOIDSetProperty;
void *ptr_CAOIDSetProperty = NULL;
extern void *ptr_CAOIDSetPropertyEx;
void *ptr_CAOIDSetPropertyEx = NULL;
extern void *ptr_CARemoveCACertificateType;
void *ptr_CARemoveCACertificateType = NULL;
extern void *ptr_CARemoveCACertificateTypeEx;
void *ptr_CARemoveCACertificateTypeEx = NULL;
extern void *ptr_CASetCACertificate;
void *ptr_CASetCACertificate = NULL;
extern void *ptr_CASetCAExpiration;
void *ptr_CASetCAExpiration = NULL;
extern void *ptr_CASetCAFlags;
void *ptr_CASetCAFlags = NULL;
extern void *ptr_CASetCAProperty;
void *ptr_CASetCAProperty = NULL;
extern void *ptr_CASetCASecurity;
void *ptr_CASetCASecurity = NULL;
extern void *ptr_CASetCertTypeExpiration;
void *ptr_CASetCertTypeExpiration = NULL;
extern void *ptr_CASetCertTypeExtension;
void *ptr_CASetCertTypeExtension = NULL;
extern void *ptr_CASetCertTypeFlags;
void *ptr_CASetCertTypeFlags = NULL;
extern void *ptr_CASetCertTypeFlagsEx;
void *ptr_CASetCertTypeFlagsEx = NULL;
extern void *ptr_CASetCertTypeKeySpec;
void *ptr_CASetCertTypeKeySpec = NULL;
extern void *ptr_CASetCertTypeProperty;
void *ptr_CASetCertTypeProperty = NULL;
extern void *ptr_CASetCertTypePropertyEx;
void *ptr_CASetCertTypePropertyEx = NULL;
extern void *ptr_CAUpdateCA;
void *ptr_CAUpdateCA = NULL;
extern void *ptr_CAUpdateCAEx;
void *ptr_CAUpdateCAEx = NULL;
extern void *ptr_CAUpdateCertType;
void *ptr_CAUpdateCertType = NULL;
extern void *ptr_CAUpdateCertTypeEx;
void *ptr_CAUpdateCertTypeEx = NULL;
extern void *ptr_DllCanUnloadNow;
void *ptr_DllCanUnloadNow = NULL;
extern void *ptr_DllGetClassObject;
void *ptr_DllGetClassObject = NULL;
extern void *ptr_DllInstall;
void *ptr_DllInstall = NULL;
extern void *ptr_DllRegisterServer;
void *ptr_DllRegisterServer = NULL;
extern void *ptr_DllUnregisterServer;
void *ptr_DllUnregisterServer = NULL;
extern void *ptr_GetProxyDllInfo;
void *ptr_GetProxyDllInfo = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\certcli.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_CAAccessCheck = (__vartype(ptr_CAAccessCheck))GetProcAddress(hModule, "CAAccessCheck");
   ptr_CAAccessCheckEx = (__vartype(ptr_CAAccessCheckEx))GetProcAddress(hModule, "CAAccessCheckEx");
   ptr_CAAddCACertificateType = (__vartype(ptr_CAAddCACertificateType))GetProcAddress(hModule, "CAAddCACertificateType");
   ptr_CAAddCACertificateTypeEx = (__vartype(ptr_CAAddCACertificateTypeEx))GetProcAddress(hModule, "CAAddCACertificateTypeEx");
   ptr_CACertTypeAccessCheck = (__vartype(ptr_CACertTypeAccessCheck))GetProcAddress(hModule, "CACertTypeAccessCheck");
   ptr_CACertTypeAccessCheckEx = (__vartype(ptr_CACertTypeAccessCheckEx))GetProcAddress(hModule, "CACertTypeAccessCheckEx");
   ptr_CACertTypeAuthzAccessCheck = (__vartype(ptr_CACertTypeAuthzAccessCheck))GetProcAddress(hModule, "CACertTypeAuthzAccessCheck");
   ptr_CACertTypeGetSecurity = (__vartype(ptr_CACertTypeGetSecurity))GetProcAddress(hModule, "CACertTypeGetSecurity");
   ptr_CACertTypeQuery = (__vartype(ptr_CACertTypeQuery))GetProcAddress(hModule, "CACertTypeQuery");
   ptr_CACertTypeRegisterQuery = (__vartype(ptr_CACertTypeRegisterQuery))GetProcAddress(hModule, "CACertTypeRegisterQuery");
   ptr_CACertTypeSetSecurity = (__vartype(ptr_CACertTypeSetSecurity))GetProcAddress(hModule, "CACertTypeSetSecurity");
   ptr_CACertTypeUnregisterQuery = (__vartype(ptr_CACertTypeUnregisterQuery))GetProcAddress(hModule, "CACertTypeUnregisterQuery");
   ptr_CACloneCertType = (__vartype(ptr_CACloneCertType))GetProcAddress(hModule, "CACloneCertType");
   ptr_CACloseCA = (__vartype(ptr_CACloseCA))GetProcAddress(hModule, "CACloseCA");
   ptr_CACloseCertType = (__vartype(ptr_CACloseCertType))GetProcAddress(hModule, "CACloseCertType");
   ptr_CACountCAs = (__vartype(ptr_CACountCAs))GetProcAddress(hModule, "CACountCAs");
   ptr_CACountCertTypes = (__vartype(ptr_CACountCertTypes))GetProcAddress(hModule, "CACountCertTypes");
   ptr_CACreateAutoEnrollmentObjectEx = (__vartype(ptr_CACreateAutoEnrollmentObjectEx))GetProcAddress(hModule, "CACreateAutoEnrollmentObjectEx");
   ptr_CACreateCertType = (__vartype(ptr_CACreateCertType))GetProcAddress(hModule, "CACreateCertType");
   ptr_CACreateLocalAutoEnrollmentObject = (__vartype(ptr_CACreateLocalAutoEnrollmentObject))GetProcAddress(hModule, "CACreateLocalAutoEnrollmentObject");
   ptr_CACreateNewCA = (__vartype(ptr_CACreateNewCA))GetProcAddress(hModule, "CACreateNewCA");
   ptr_CADCSetCertTypePropertyEx = (__vartype(ptr_CADCSetCertTypePropertyEx))GetProcAddress(hModule, "CADCSetCertTypePropertyEx");
   ptr_CADeleteCA = (__vartype(ptr_CADeleteCA))GetProcAddress(hModule, "CADeleteCA");
   ptr_CADeleteCAEx = (__vartype(ptr_CADeleteCAEx))GetProcAddress(hModule, "CADeleteCAEx");
   ptr_CADeleteCertType = (__vartype(ptr_CADeleteCertType))GetProcAddress(hModule, "CADeleteCertType");
   ptr_CADeleteCertTypeEx = (__vartype(ptr_CADeleteCertTypeEx))GetProcAddress(hModule, "CADeleteCertTypeEx");
   ptr_CADeleteLocalAutoEnrollmentObject = (__vartype(ptr_CADeleteLocalAutoEnrollmentObject))GetProcAddress(hModule, "CADeleteLocalAutoEnrollmentObject");
   ptr_CAEnumCertTypes = (__vartype(ptr_CAEnumCertTypes))GetProcAddress(hModule, "CAEnumCertTypes");
   ptr_CAEnumCertTypesEx = (__vartype(ptr_CAEnumCertTypesEx))GetProcAddress(hModule, "CAEnumCertTypesEx");
   ptr_CAEnumCertTypesForCA = (__vartype(ptr_CAEnumCertTypesForCA))GetProcAddress(hModule, "CAEnumCertTypesForCA");
   ptr_CAEnumCertTypesForCAEx = (__vartype(ptr_CAEnumCertTypesForCAEx))GetProcAddress(hModule, "CAEnumCertTypesForCAEx");
   ptr_CAEnumFirstCA = (__vartype(ptr_CAEnumFirstCA))GetProcAddress(hModule, "CAEnumFirstCA");
   ptr_CAEnumNextCA = (__vartype(ptr_CAEnumNextCA))GetProcAddress(hModule, "CAEnumNextCA");
   ptr_CAEnumNextCertType = (__vartype(ptr_CAEnumNextCertType))GetProcAddress(hModule, "CAEnumNextCertType");
   ptr_CAFindByCertType = (__vartype(ptr_CAFindByCertType))GetProcAddress(hModule, "CAFindByCertType");
   ptr_CAFindByIssuerDN = (__vartype(ptr_CAFindByIssuerDN))GetProcAddress(hModule, "CAFindByIssuerDN");
   ptr_CAFindByName = (__vartype(ptr_CAFindByName))GetProcAddress(hModule, "CAFindByName");
   ptr_CAFindCertTypeByName = (__vartype(ptr_CAFindCertTypeByName))GetProcAddress(hModule, "CAFindCertTypeByName");
   ptr_CAFreeCAProperty = (__vartype(ptr_CAFreeCAProperty))GetProcAddress(hModule, "CAFreeCAProperty");
   ptr_CAFreeCertTypeExtensions = (__vartype(ptr_CAFreeCertTypeExtensions))GetProcAddress(hModule, "CAFreeCertTypeExtensions");
   ptr_CAFreeCertTypeProperty = (__vartype(ptr_CAFreeCertTypeProperty))GetProcAddress(hModule, "CAFreeCertTypeProperty");
   ptr_CAGetCACertificate = (__vartype(ptr_CAGetCACertificate))GetProcAddress(hModule, "CAGetCACertificate");
   ptr_CAGetCAExpiration = (__vartype(ptr_CAGetCAExpiration))GetProcAddress(hModule, "CAGetCAExpiration");
   ptr_CAGetCAFlags = (__vartype(ptr_CAGetCAFlags))GetProcAddress(hModule, "CAGetCAFlags");
   ptr_CAGetCAProperty = (__vartype(ptr_CAGetCAProperty))GetProcAddress(hModule, "CAGetCAProperty");
   ptr_CAGetCASecurity = (__vartype(ptr_CAGetCASecurity))GetProcAddress(hModule, "CAGetCASecurity");
   ptr_CAGetCertTypeExpiration = (__vartype(ptr_CAGetCertTypeExpiration))GetProcAddress(hModule, "CAGetCertTypeExpiration");
   ptr_CAGetCertTypeExtensions = (__vartype(ptr_CAGetCertTypeExtensions))GetProcAddress(hModule, "CAGetCertTypeExtensions");
   ptr_CAGetCertTypeExtensionsEx = (__vartype(ptr_CAGetCertTypeExtensionsEx))GetProcAddress(hModule, "CAGetCertTypeExtensionsEx");
   ptr_CAGetCertTypeFlags = (__vartype(ptr_CAGetCertTypeFlags))GetProcAddress(hModule, "CAGetCertTypeFlags");
   ptr_CAGetCertTypeFlagsEx = (__vartype(ptr_CAGetCertTypeFlagsEx))GetProcAddress(hModule, "CAGetCertTypeFlagsEx");
   ptr_CAGetCertTypeKeySpec = (__vartype(ptr_CAGetCertTypeKeySpec))GetProcAddress(hModule, "CAGetCertTypeKeySpec");
   ptr_CAGetCertTypeProperty = (__vartype(ptr_CAGetCertTypeProperty))GetProcAddress(hModule, "CAGetCertTypeProperty");
   ptr_CAGetCertTypePropertyEx = (__vartype(ptr_CAGetCertTypePropertyEx))GetProcAddress(hModule, "CAGetCertTypePropertyEx");
   ptr_CAGetConfigStringFromUIPicker = (__vartype(ptr_CAGetConfigStringFromUIPicker))GetProcAddress(hModule, "CAGetConfigStringFromUIPicker");
   ptr_CAGetDN = (__vartype(ptr_CAGetDN))GetProcAddress(hModule, "CAGetDN");
   ptr_CAInstallDefaultCertType = (__vartype(ptr_CAInstallDefaultCertType))GetProcAddress(hModule, "CAInstallDefaultCertType");
   ptr_CAInstallDefaultCertTypeEx = (__vartype(ptr_CAInstallDefaultCertTypeEx))GetProcAddress(hModule, "CAInstallDefaultCertTypeEx");
   ptr_CAIsCertTypeCurrent = (__vartype(ptr_CAIsCertTypeCurrent))GetProcAddress(hModule, "CAIsCertTypeCurrent");
   ptr_CAIsCertTypeCurrentEx = (__vartype(ptr_CAIsCertTypeCurrentEx))GetProcAddress(hModule, "CAIsCertTypeCurrentEx");
   ptr_CAOIDAdd = (__vartype(ptr_CAOIDAdd))GetProcAddress(hModule, "CAOIDAdd");
   ptr_CAOIDAddEx = (__vartype(ptr_CAOIDAddEx))GetProcAddress(hModule, "CAOIDAddEx");
   ptr_CAOIDCreateNew = (__vartype(ptr_CAOIDCreateNew))GetProcAddress(hModule, "CAOIDCreateNew");
   ptr_CAOIDCreateNewEx = (__vartype(ptr_CAOIDCreateNewEx))GetProcAddress(hModule, "CAOIDCreateNewEx");
   ptr_CAOIDDelete = (__vartype(ptr_CAOIDDelete))GetProcAddress(hModule, "CAOIDDelete");
   ptr_CAOIDDeleteEx = (__vartype(ptr_CAOIDDeleteEx))GetProcAddress(hModule, "CAOIDDeleteEx");
   ptr_CAOIDFreeLdapURL = (__vartype(ptr_CAOIDFreeLdapURL))GetProcAddress(hModule, "CAOIDFreeLdapURL");
   ptr_CAOIDFreeProperty = (__vartype(ptr_CAOIDFreeProperty))GetProcAddress(hModule, "CAOIDFreeProperty");
   ptr_CAOIDGetLdapURL = (__vartype(ptr_CAOIDGetLdapURL))GetProcAddress(hModule, "CAOIDGetLdapURL");
   ptr_CAOIDGetProperty = (__vartype(ptr_CAOIDGetProperty))GetProcAddress(hModule, "CAOIDGetProperty");
   ptr_CAOIDGetPropertyEx = (__vartype(ptr_CAOIDGetPropertyEx))GetProcAddress(hModule, "CAOIDGetPropertyEx");
   ptr_CAOIDSetProperty = (__vartype(ptr_CAOIDSetProperty))GetProcAddress(hModule, "CAOIDSetProperty");
   ptr_CAOIDSetPropertyEx = (__vartype(ptr_CAOIDSetPropertyEx))GetProcAddress(hModule, "CAOIDSetPropertyEx");
   ptr_CARemoveCACertificateType = (__vartype(ptr_CARemoveCACertificateType))GetProcAddress(hModule, "CARemoveCACertificateType");
   ptr_CARemoveCACertificateTypeEx = (__vartype(ptr_CARemoveCACertificateTypeEx))GetProcAddress(hModule, "CARemoveCACertificateTypeEx");
   ptr_CASetCACertificate = (__vartype(ptr_CASetCACertificate))GetProcAddress(hModule, "CASetCACertificate");
   ptr_CASetCAExpiration = (__vartype(ptr_CASetCAExpiration))GetProcAddress(hModule, "CASetCAExpiration");
   ptr_CASetCAFlags = (__vartype(ptr_CASetCAFlags))GetProcAddress(hModule, "CASetCAFlags");
   ptr_CASetCAProperty = (__vartype(ptr_CASetCAProperty))GetProcAddress(hModule, "CASetCAProperty");
   ptr_CASetCASecurity = (__vartype(ptr_CASetCASecurity))GetProcAddress(hModule, "CASetCASecurity");
   ptr_CASetCertTypeExpiration = (__vartype(ptr_CASetCertTypeExpiration))GetProcAddress(hModule, "CASetCertTypeExpiration");
   ptr_CASetCertTypeExtension = (__vartype(ptr_CASetCertTypeExtension))GetProcAddress(hModule, "CASetCertTypeExtension");
   ptr_CASetCertTypeFlags = (__vartype(ptr_CASetCertTypeFlags))GetProcAddress(hModule, "CASetCertTypeFlags");
   ptr_CASetCertTypeFlagsEx = (__vartype(ptr_CASetCertTypeFlagsEx))GetProcAddress(hModule, "CASetCertTypeFlagsEx");
   ptr_CASetCertTypeKeySpec = (__vartype(ptr_CASetCertTypeKeySpec))GetProcAddress(hModule, "CASetCertTypeKeySpec");
   ptr_CASetCertTypeProperty = (__vartype(ptr_CASetCertTypeProperty))GetProcAddress(hModule, "CASetCertTypeProperty");
   ptr_CASetCertTypePropertyEx = (__vartype(ptr_CASetCertTypePropertyEx))GetProcAddress(hModule, "CASetCertTypePropertyEx");
   ptr_CAUpdateCA = (__vartype(ptr_CAUpdateCA))GetProcAddress(hModule, "CAUpdateCA");
   ptr_CAUpdateCAEx = (__vartype(ptr_CAUpdateCAEx))GetProcAddress(hModule, "CAUpdateCAEx");
   ptr_CAUpdateCertType = (__vartype(ptr_CAUpdateCertType))GetProcAddress(hModule, "CAUpdateCertType");
   ptr_CAUpdateCertTypeEx = (__vartype(ptr_CAUpdateCertTypeEx))GetProcAddress(hModule, "CAUpdateCertTypeEx");
   ptr_DllCanUnloadNow = (__vartype(ptr_DllCanUnloadNow))GetProcAddress(hModule, "DllCanUnloadNow");
   ptr_DllGetClassObject = (__vartype(ptr_DllGetClassObject))GetProcAddress(hModule, "DllGetClassObject");
   ptr_DllInstall = (__vartype(ptr_DllInstall))GetProcAddress(hModule, "DllInstall");
   ptr_DllRegisterServer = (__vartype(ptr_DllRegisterServer))GetProcAddress(hModule, "DllRegisterServer");
   ptr_DllUnregisterServer = (__vartype(ptr_DllUnregisterServer))GetProcAddress(hModule, "DllUnregisterServer");
   ptr_GetProxyDllInfo = (__vartype(ptr_GetProxyDllInfo))GetProcAddress(hModule, "GetProxyDllInfo");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

