#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_ATMAddFont;
void *ptr_ATMAddFont = NULL;
extern void *ptr_ATMAddFontA;
void *ptr_ATMAddFontA = NULL;
extern void *ptr_ATMAddFontEx;
void *ptr_ATMAddFontEx = NULL;
extern void *ptr_ATMAddFontExA;
void *ptr_ATMAddFontExA = NULL;
extern void *ptr_ATMAddFontExW;
void *ptr_ATMAddFontExW = NULL;
extern void *ptr_ATMAddFontW;
void *ptr_ATMAddFontW = NULL;
extern void *ptr_ATMBBoxBaseXYShowText;
void *ptr_ATMBBoxBaseXYShowText = NULL;
extern void *ptr_ATMBBoxBaseXYShowTextA;
void *ptr_ATMBBoxBaseXYShowTextA = NULL;
extern void *ptr_ATMBBoxBaseXYShowTextW;
void *ptr_ATMBBoxBaseXYShowTextW = NULL;
extern void *ptr_ATMBeginFontChange;
void *ptr_ATMBeginFontChange = NULL;
extern void *ptr_ATMClient;
void *ptr_ATMClient = NULL;
extern void *ptr_ATMEndFontChange;
void *ptr_ATMEndFontChange = NULL;
extern void *ptr_ATMEnumFonts;
void *ptr_ATMEnumFonts = NULL;
extern void *ptr_ATMEnumFontsA;
void *ptr_ATMEnumFontsA = NULL;
extern void *ptr_ATMEnumFontsW;
void *ptr_ATMEnumFontsW = NULL;
extern void *ptr_ATMEnumMMFonts;
void *ptr_ATMEnumMMFonts = NULL;
extern void *ptr_ATMEnumMMFontsA;
void *ptr_ATMEnumMMFontsA = NULL;
extern void *ptr_ATMEnumMMFontsW;
void *ptr_ATMEnumMMFontsW = NULL;
extern void *ptr_ATMFinish;
void *ptr_ATMFinish = NULL;
extern void *ptr_ATMFontAvailable;
void *ptr_ATMFontAvailable = NULL;
extern void *ptr_ATMFontAvailableA;
void *ptr_ATMFontAvailableA = NULL;
extern void *ptr_ATMFontAvailableW;
void *ptr_ATMFontAvailableW = NULL;
extern void *ptr_ATMFontSelected;
void *ptr_ATMFontSelected = NULL;
extern void *ptr_ATMFontStatus;
void *ptr_ATMFontStatus = NULL;
extern void *ptr_ATMFontStatusA;
void *ptr_ATMFontStatusA = NULL;
extern void *ptr_ATMFontStatusW;
void *ptr_ATMFontStatusW = NULL;
extern void *ptr_ATMForceFontChange;
void *ptr_ATMForceFontChange = NULL;
extern void *ptr_ATMGetBuildStr;
void *ptr_ATMGetBuildStr = NULL;
extern void *ptr_ATMGetBuildStrA;
void *ptr_ATMGetBuildStrA = NULL;
extern void *ptr_ATMGetBuildStrW;
void *ptr_ATMGetBuildStrW = NULL;
extern void *ptr_ATMGetFontBBox;
void *ptr_ATMGetFontBBox = NULL;
extern void *ptr_ATMGetFontInfo;
void *ptr_ATMGetFontInfo = NULL;
extern void *ptr_ATMGetFontInfoA;
void *ptr_ATMGetFontInfoA = NULL;
extern void *ptr_ATMGetFontInfoW;
void *ptr_ATMGetFontInfoW = NULL;
extern void *ptr_ATMGetFontPaths;
void *ptr_ATMGetFontPaths = NULL;
extern void *ptr_ATMGetFontPathsA;
void *ptr_ATMGetFontPathsA = NULL;
extern void *ptr_ATMGetFontPathsW;
void *ptr_ATMGetFontPathsW = NULL;
extern void *ptr_ATMGetGlyphList;
void *ptr_ATMGetGlyphList = NULL;
extern void *ptr_ATMGetGlyphListA;
void *ptr_ATMGetGlyphListA = NULL;
extern void *ptr_ATMGetGlyphListW;
void *ptr_ATMGetGlyphListW = NULL;
extern void *ptr_ATMGetMenuName;
void *ptr_ATMGetMenuName = NULL;
extern void *ptr_ATMGetMenuNameA;
void *ptr_ATMGetMenuNameA = NULL;
extern void *ptr_ATMGetMenuNameW;
void *ptr_ATMGetMenuNameW = NULL;
extern void *ptr_ATMGetNtmFields;
void *ptr_ATMGetNtmFields = NULL;
extern void *ptr_ATMGetNtmFieldsA;
void *ptr_ATMGetNtmFieldsA = NULL;
extern void *ptr_ATMGetNtmFieldsW;
void *ptr_ATMGetNtmFieldsW = NULL;
extern void *ptr_ATMGetOutline;
void *ptr_ATMGetOutline = NULL;
extern void *ptr_ATMGetOutlineA;
void *ptr_ATMGetOutlineA = NULL;
extern void *ptr_ATMGetOutlineW;
void *ptr_ATMGetOutlineW = NULL;
extern void *ptr_ATMGetPostScriptName;
void *ptr_ATMGetPostScriptName = NULL;
extern void *ptr_ATMGetPostScriptNameA;
void *ptr_ATMGetPostScriptNameA = NULL;
extern void *ptr_ATMGetPostScriptNameW;
void *ptr_ATMGetPostScriptNameW = NULL;
extern void *ptr_ATMGetVersion;
void *ptr_ATMGetVersion = NULL;
extern void *ptr_ATMGetVersionEx;
void *ptr_ATMGetVersionEx = NULL;
extern void *ptr_ATMGetVersionExA;
void *ptr_ATMGetVersionExA = NULL;
extern void *ptr_ATMGetVersionExW;
void *ptr_ATMGetVersionExW = NULL;
extern void *ptr_ATMInstallSubstFontA;
void *ptr_ATMInstallSubstFontA = NULL;
extern void *ptr_ATMInstallSubstFontW;
void *ptr_ATMInstallSubstFontW = NULL;
extern void *ptr_ATMMakePFM;
void *ptr_ATMMakePFM = NULL;
extern void *ptr_ATMMakePFMA;
void *ptr_ATMMakePFMA = NULL;
extern void *ptr_ATMMakePFMW;
void *ptr_ATMMakePFMW = NULL;
extern void *ptr_ATMMakePSS;
void *ptr_ATMMakePSS = NULL;
extern void *ptr_ATMMakePSSA;
void *ptr_ATMMakePSSA = NULL;
extern void *ptr_ATMMakePSSW;
void *ptr_ATMMakePSSW = NULL;
extern void *ptr_ATMProperlyLoaded;
void *ptr_ATMProperlyLoaded = NULL;
extern void *ptr_ATMRemoveFont;
void *ptr_ATMRemoveFont = NULL;
extern void *ptr_ATMRemoveFontA;
void *ptr_ATMRemoveFontA = NULL;
extern void *ptr_ATMRemoveFontW;
void *ptr_ATMRemoveFontW = NULL;
extern void *ptr_ATMRemoveSubstFontA;
void *ptr_ATMRemoveSubstFontA = NULL;
extern void *ptr_ATMRemoveSubstFontW;
void *ptr_ATMRemoveSubstFontW = NULL;
extern void *ptr_ATMSelectEncoding;
void *ptr_ATMSelectEncoding = NULL;
extern void *ptr_ATMSelectObject;
void *ptr_ATMSelectObject = NULL;
extern void *ptr_ATMSetFlags;
void *ptr_ATMSetFlags = NULL;
extern void *ptr_ATMXYShowText;
void *ptr_ATMXYShowText = NULL;
extern void *ptr_ATMXYShowTextA;
void *ptr_ATMXYShowTextA = NULL;
extern void *ptr_ATMXYShowTextW;
void *ptr_ATMXYShowTextW = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\atmlib.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_ATMAddFont = (__vartype(ptr_ATMAddFont))GetProcAddress(hModule, "ATMAddFont");
   ptr_ATMAddFontA = (__vartype(ptr_ATMAddFontA))GetProcAddress(hModule, "ATMAddFontA");
   ptr_ATMAddFontEx = (__vartype(ptr_ATMAddFontEx))GetProcAddress(hModule, "ATMAddFontEx");
   ptr_ATMAddFontExA = (__vartype(ptr_ATMAddFontExA))GetProcAddress(hModule, "ATMAddFontExA");
   ptr_ATMAddFontExW = (__vartype(ptr_ATMAddFontExW))GetProcAddress(hModule, "ATMAddFontExW");
   ptr_ATMAddFontW = (__vartype(ptr_ATMAddFontW))GetProcAddress(hModule, "ATMAddFontW");
   ptr_ATMBBoxBaseXYShowText = (__vartype(ptr_ATMBBoxBaseXYShowText))GetProcAddress(hModule, "ATMBBoxBaseXYShowText");
   ptr_ATMBBoxBaseXYShowTextA = (__vartype(ptr_ATMBBoxBaseXYShowTextA))GetProcAddress(hModule, "ATMBBoxBaseXYShowTextA");
   ptr_ATMBBoxBaseXYShowTextW = (__vartype(ptr_ATMBBoxBaseXYShowTextW))GetProcAddress(hModule, "ATMBBoxBaseXYShowTextW");
   ptr_ATMBeginFontChange = (__vartype(ptr_ATMBeginFontChange))GetProcAddress(hModule, "ATMBeginFontChange");
   ptr_ATMClient = (__vartype(ptr_ATMClient))GetProcAddress(hModule, "ATMClient");
   ptr_ATMEndFontChange = (__vartype(ptr_ATMEndFontChange))GetProcAddress(hModule, "ATMEndFontChange");
   ptr_ATMEnumFonts = (__vartype(ptr_ATMEnumFonts))GetProcAddress(hModule, "ATMEnumFonts");
   ptr_ATMEnumFontsA = (__vartype(ptr_ATMEnumFontsA))GetProcAddress(hModule, "ATMEnumFontsA");
   ptr_ATMEnumFontsW = (__vartype(ptr_ATMEnumFontsW))GetProcAddress(hModule, "ATMEnumFontsW");
   ptr_ATMEnumMMFonts = (__vartype(ptr_ATMEnumMMFonts))GetProcAddress(hModule, "ATMEnumMMFonts");
   ptr_ATMEnumMMFontsA = (__vartype(ptr_ATMEnumMMFontsA))GetProcAddress(hModule, "ATMEnumMMFontsA");
   ptr_ATMEnumMMFontsW = (__vartype(ptr_ATMEnumMMFontsW))GetProcAddress(hModule, "ATMEnumMMFontsW");
   ptr_ATMFinish = (__vartype(ptr_ATMFinish))GetProcAddress(hModule, "ATMFinish");
   ptr_ATMFontAvailable = (__vartype(ptr_ATMFontAvailable))GetProcAddress(hModule, "ATMFontAvailable");
   ptr_ATMFontAvailableA = (__vartype(ptr_ATMFontAvailableA))GetProcAddress(hModule, "ATMFontAvailableA");
   ptr_ATMFontAvailableW = (__vartype(ptr_ATMFontAvailableW))GetProcAddress(hModule, "ATMFontAvailableW");
   ptr_ATMFontSelected = (__vartype(ptr_ATMFontSelected))GetProcAddress(hModule, "ATMFontSelected");
   ptr_ATMFontStatus = (__vartype(ptr_ATMFontStatus))GetProcAddress(hModule, "ATMFontStatus");
   ptr_ATMFontStatusA = (__vartype(ptr_ATMFontStatusA))GetProcAddress(hModule, "ATMFontStatusA");
   ptr_ATMFontStatusW = (__vartype(ptr_ATMFontStatusW))GetProcAddress(hModule, "ATMFontStatusW");
   ptr_ATMForceFontChange = (__vartype(ptr_ATMForceFontChange))GetProcAddress(hModule, "ATMForceFontChange");
   ptr_ATMGetBuildStr = (__vartype(ptr_ATMGetBuildStr))GetProcAddress(hModule, "ATMGetBuildStr");
   ptr_ATMGetBuildStrA = (__vartype(ptr_ATMGetBuildStrA))GetProcAddress(hModule, "ATMGetBuildStrA");
   ptr_ATMGetBuildStrW = (__vartype(ptr_ATMGetBuildStrW))GetProcAddress(hModule, "ATMGetBuildStrW");
   ptr_ATMGetFontBBox = (__vartype(ptr_ATMGetFontBBox))GetProcAddress(hModule, "ATMGetFontBBox");
   ptr_ATMGetFontInfo = (__vartype(ptr_ATMGetFontInfo))GetProcAddress(hModule, "ATMGetFontInfo");
   ptr_ATMGetFontInfoA = (__vartype(ptr_ATMGetFontInfoA))GetProcAddress(hModule, "ATMGetFontInfoA");
   ptr_ATMGetFontInfoW = (__vartype(ptr_ATMGetFontInfoW))GetProcAddress(hModule, "ATMGetFontInfoW");
   ptr_ATMGetFontPaths = (__vartype(ptr_ATMGetFontPaths))GetProcAddress(hModule, "ATMGetFontPaths");
   ptr_ATMGetFontPathsA = (__vartype(ptr_ATMGetFontPathsA))GetProcAddress(hModule, "ATMGetFontPathsA");
   ptr_ATMGetFontPathsW = (__vartype(ptr_ATMGetFontPathsW))GetProcAddress(hModule, "ATMGetFontPathsW");
   ptr_ATMGetGlyphList = (__vartype(ptr_ATMGetGlyphList))GetProcAddress(hModule, "ATMGetGlyphList");
   ptr_ATMGetGlyphListA = (__vartype(ptr_ATMGetGlyphListA))GetProcAddress(hModule, "ATMGetGlyphListA");
   ptr_ATMGetGlyphListW = (__vartype(ptr_ATMGetGlyphListW))GetProcAddress(hModule, "ATMGetGlyphListW");
   ptr_ATMGetMenuName = (__vartype(ptr_ATMGetMenuName))GetProcAddress(hModule, "ATMGetMenuName");
   ptr_ATMGetMenuNameA = (__vartype(ptr_ATMGetMenuNameA))GetProcAddress(hModule, "ATMGetMenuNameA");
   ptr_ATMGetMenuNameW = (__vartype(ptr_ATMGetMenuNameW))GetProcAddress(hModule, "ATMGetMenuNameW");
   ptr_ATMGetNtmFields = (__vartype(ptr_ATMGetNtmFields))GetProcAddress(hModule, "ATMGetNtmFields");
   ptr_ATMGetNtmFieldsA = (__vartype(ptr_ATMGetNtmFieldsA))GetProcAddress(hModule, "ATMGetNtmFieldsA");
   ptr_ATMGetNtmFieldsW = (__vartype(ptr_ATMGetNtmFieldsW))GetProcAddress(hModule, "ATMGetNtmFieldsW");
   ptr_ATMGetOutline = (__vartype(ptr_ATMGetOutline))GetProcAddress(hModule, "ATMGetOutline");
   ptr_ATMGetOutlineA = (__vartype(ptr_ATMGetOutlineA))GetProcAddress(hModule, "ATMGetOutlineA");
   ptr_ATMGetOutlineW = (__vartype(ptr_ATMGetOutlineW))GetProcAddress(hModule, "ATMGetOutlineW");
   ptr_ATMGetPostScriptName = (__vartype(ptr_ATMGetPostScriptName))GetProcAddress(hModule, "ATMGetPostScriptName");
   ptr_ATMGetPostScriptNameA = (__vartype(ptr_ATMGetPostScriptNameA))GetProcAddress(hModule, "ATMGetPostScriptNameA");
   ptr_ATMGetPostScriptNameW = (__vartype(ptr_ATMGetPostScriptNameW))GetProcAddress(hModule, "ATMGetPostScriptNameW");
   ptr_ATMGetVersion = (__vartype(ptr_ATMGetVersion))GetProcAddress(hModule, "ATMGetVersion");
   ptr_ATMGetVersionEx = (__vartype(ptr_ATMGetVersionEx))GetProcAddress(hModule, "ATMGetVersionEx");
   ptr_ATMGetVersionExA = (__vartype(ptr_ATMGetVersionExA))GetProcAddress(hModule, "ATMGetVersionExA");
   ptr_ATMGetVersionExW = (__vartype(ptr_ATMGetVersionExW))GetProcAddress(hModule, "ATMGetVersionExW");
   ptr_ATMInstallSubstFontA = (__vartype(ptr_ATMInstallSubstFontA))GetProcAddress(hModule, "ATMInstallSubstFontA");
   ptr_ATMInstallSubstFontW = (__vartype(ptr_ATMInstallSubstFontW))GetProcAddress(hModule, "ATMInstallSubstFontW");
   ptr_ATMMakePFM = (__vartype(ptr_ATMMakePFM))GetProcAddress(hModule, "ATMMakePFM");
   ptr_ATMMakePFMA = (__vartype(ptr_ATMMakePFMA))GetProcAddress(hModule, "ATMMakePFMA");
   ptr_ATMMakePFMW = (__vartype(ptr_ATMMakePFMW))GetProcAddress(hModule, "ATMMakePFMW");
   ptr_ATMMakePSS = (__vartype(ptr_ATMMakePSS))GetProcAddress(hModule, "ATMMakePSS");
   ptr_ATMMakePSSA = (__vartype(ptr_ATMMakePSSA))GetProcAddress(hModule, "ATMMakePSSA");
   ptr_ATMMakePSSW = (__vartype(ptr_ATMMakePSSW))GetProcAddress(hModule, "ATMMakePSSW");
   ptr_ATMProperlyLoaded = (__vartype(ptr_ATMProperlyLoaded))GetProcAddress(hModule, "ATMProperlyLoaded");
   ptr_ATMRemoveFont = (__vartype(ptr_ATMRemoveFont))GetProcAddress(hModule, "ATMRemoveFont");
   ptr_ATMRemoveFontA = (__vartype(ptr_ATMRemoveFontA))GetProcAddress(hModule, "ATMRemoveFontA");
   ptr_ATMRemoveFontW = (__vartype(ptr_ATMRemoveFontW))GetProcAddress(hModule, "ATMRemoveFontW");
   ptr_ATMRemoveSubstFontA = (__vartype(ptr_ATMRemoveSubstFontA))GetProcAddress(hModule, "ATMRemoveSubstFontA");
   ptr_ATMRemoveSubstFontW = (__vartype(ptr_ATMRemoveSubstFontW))GetProcAddress(hModule, "ATMRemoveSubstFontW");
   ptr_ATMSelectEncoding = (__vartype(ptr_ATMSelectEncoding))GetProcAddress(hModule, "ATMSelectEncoding");
   ptr_ATMSelectObject = (__vartype(ptr_ATMSelectObject))GetProcAddress(hModule, "ATMSelectObject");
   ptr_ATMSetFlags = (__vartype(ptr_ATMSetFlags))GetProcAddress(hModule, "ATMSetFlags");
   ptr_ATMXYShowText = (__vartype(ptr_ATMXYShowText))GetProcAddress(hModule, "ATMXYShowText");
   ptr_ATMXYShowTextA = (__vartype(ptr_ATMXYShowTextA))GetProcAddress(hModule, "ATMXYShowTextA");
   ptr_ATMXYShowTextW = (__vartype(ptr_ATMXYShowTextW))GetProcAddress(hModule, "ATMXYShowTextW");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

