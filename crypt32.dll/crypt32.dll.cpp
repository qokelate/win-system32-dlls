#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_CertAddCRLContextToStore;
void *ptr_CertAddCRLContextToStore = NULL;
extern void *ptr_CertAddCRLLinkToStore;
void *ptr_CertAddCRLLinkToStore = NULL;
extern void *ptr_CertAddCTLContextToStore;
void *ptr_CertAddCTLContextToStore = NULL;
extern void *ptr_CertAddCTLLinkToStore;
void *ptr_CertAddCTLLinkToStore = NULL;
extern void *ptr_CertAddCertificateContextToStore;
void *ptr_CertAddCertificateContextToStore = NULL;
extern void *ptr_CertAddCertificateLinkToStore;
void *ptr_CertAddCertificateLinkToStore = NULL;
extern void *ptr_CertAddEncodedCRLToStore;
void *ptr_CertAddEncodedCRLToStore = NULL;
extern void *ptr_CertAddEncodedCTLToStore;
void *ptr_CertAddEncodedCTLToStore = NULL;
extern void *ptr_CertAddEncodedCertificateToStore;
void *ptr_CertAddEncodedCertificateToStore = NULL;
extern void *ptr_CertAddEncodedCertificateToSystemStoreA;
void *ptr_CertAddEncodedCertificateToSystemStoreA = NULL;
extern void *ptr_CertAddEncodedCertificateToSystemStoreW;
void *ptr_CertAddEncodedCertificateToSystemStoreW = NULL;
extern void *ptr_CertAddEnhancedKeyUsageIdentifier;
void *ptr_CertAddEnhancedKeyUsageIdentifier = NULL;
extern void *ptr_CertAddRefServerOcspResponse;
void *ptr_CertAddRefServerOcspResponse = NULL;
extern void *ptr_CertAddRefServerOcspResponseContext;
void *ptr_CertAddRefServerOcspResponseContext = NULL;
extern void *ptr_CertAddSerializedElementToStore;
void *ptr_CertAddSerializedElementToStore = NULL;
extern void *ptr_CertAddStoreToCollection;
void *ptr_CertAddStoreToCollection = NULL;
extern void *ptr_CertAlgIdToOID;
void *ptr_CertAlgIdToOID = NULL;
extern void *ptr_CertCloseServerOcspResponse;
void *ptr_CertCloseServerOcspResponse = NULL;
extern void *ptr_CertCloseStore;
void *ptr_CertCloseStore = NULL;
extern void *ptr_CertCompareCertificate;
void *ptr_CertCompareCertificate = NULL;
extern void *ptr_CertCompareCertificateName;
void *ptr_CertCompareCertificateName = NULL;
extern void *ptr_CertCompareIntegerBlob;
void *ptr_CertCompareIntegerBlob = NULL;
extern void *ptr_CertComparePublicKeyInfo;
void *ptr_CertComparePublicKeyInfo = NULL;
extern void *ptr_CertControlStore;
void *ptr_CertControlStore = NULL;
extern void *ptr_CertCreateCRLContext;
void *ptr_CertCreateCRLContext = NULL;
extern void *ptr_CertCreateCTLContext;
void *ptr_CertCreateCTLContext = NULL;
extern void *ptr_CertCreateCTLEntryFromCertificateContextProperties;
void *ptr_CertCreateCTLEntryFromCertificateContextProperties = NULL;
extern void *ptr_CertCreateCertificateChainEngine;
void *ptr_CertCreateCertificateChainEngine = NULL;
extern void *ptr_CertCreateCertificateContext;
void *ptr_CertCreateCertificateContext = NULL;
extern void *ptr_CertCreateContext;
void *ptr_CertCreateContext = NULL;
extern void *ptr_CertCreateSelfSignCertificate;
void *ptr_CertCreateSelfSignCertificate = NULL;
extern void *ptr_CertDeleteCRLFromStore;
void *ptr_CertDeleteCRLFromStore = NULL;
extern void *ptr_CertDeleteCTLFromStore;
void *ptr_CertDeleteCTLFromStore = NULL;
extern void *ptr_CertDeleteCertificateFromStore;
void *ptr_CertDeleteCertificateFromStore = NULL;
extern void *ptr_CertDuplicateCRLContext;
void *ptr_CertDuplicateCRLContext = NULL;
extern void *ptr_CertDuplicateCTLContext;
void *ptr_CertDuplicateCTLContext = NULL;
extern void *ptr_CertDuplicateCertificateChain;
void *ptr_CertDuplicateCertificateChain = NULL;
extern void *ptr_CertDuplicateCertificateContext;
void *ptr_CertDuplicateCertificateContext = NULL;
extern void *ptr_CertDuplicateStore;
void *ptr_CertDuplicateStore = NULL;
extern void *ptr_CertEnumCRLContextProperties;
void *ptr_CertEnumCRLContextProperties = NULL;
extern void *ptr_CertEnumCRLsInStore;
void *ptr_CertEnumCRLsInStore = NULL;
extern void *ptr_CertEnumCTLContextProperties;
void *ptr_CertEnumCTLContextProperties = NULL;
extern void *ptr_CertEnumCTLsInStore;
void *ptr_CertEnumCTLsInStore = NULL;
extern void *ptr_CertEnumCertificateContextProperties;
void *ptr_CertEnumCertificateContextProperties = NULL;
extern void *ptr_CertEnumCertificatesInStore;
void *ptr_CertEnumCertificatesInStore = NULL;
extern void *ptr_CertEnumPhysicalStore;
void *ptr_CertEnumPhysicalStore = NULL;
extern void *ptr_CertEnumSubjectInSortedCTL;
void *ptr_CertEnumSubjectInSortedCTL = NULL;
extern void *ptr_CertEnumSystemStore;
void *ptr_CertEnumSystemStore = NULL;
extern void *ptr_CertEnumSystemStoreLocation;
void *ptr_CertEnumSystemStoreLocation = NULL;
extern void *ptr_CertFindAttribute;
void *ptr_CertFindAttribute = NULL;
extern void *ptr_CertFindCRLInStore;
void *ptr_CertFindCRLInStore = NULL;
extern void *ptr_CertFindCTLInStore;
void *ptr_CertFindCTLInStore = NULL;
extern void *ptr_CertFindCertificateInCRL;
void *ptr_CertFindCertificateInCRL = NULL;
extern void *ptr_CertFindCertificateInStore;
void *ptr_CertFindCertificateInStore = NULL;
extern void *ptr_CertFindChainInStore;
void *ptr_CertFindChainInStore = NULL;
extern void *ptr_CertFindExtension;
void *ptr_CertFindExtension = NULL;
extern void *ptr_CertFindRDNAttr;
void *ptr_CertFindRDNAttr = NULL;
extern void *ptr_CertFindSubjectInCTL;
void *ptr_CertFindSubjectInCTL = NULL;
extern void *ptr_CertFindSubjectInSortedCTL;
void *ptr_CertFindSubjectInSortedCTL = NULL;
extern void *ptr_CertFreeCRLContext;
void *ptr_CertFreeCRLContext = NULL;
extern void *ptr_CertFreeCTLContext;
void *ptr_CertFreeCTLContext = NULL;
extern void *ptr_CertFreeCertificateChain;
void *ptr_CertFreeCertificateChain = NULL;
extern void *ptr_CertFreeCertificateChainEngine;
void *ptr_CertFreeCertificateChainEngine = NULL;
extern void *ptr_CertFreeCertificateChainList;
void *ptr_CertFreeCertificateChainList = NULL;
extern void *ptr_CertFreeCertificateContext;
void *ptr_CertFreeCertificateContext = NULL;
extern void *ptr_CertFreeServerOcspResponseContext;
void *ptr_CertFreeServerOcspResponseContext = NULL;
extern void *ptr_CertGetCRLContextProperty;
void *ptr_CertGetCRLContextProperty = NULL;
extern void *ptr_CertGetCRLFromStore;
void *ptr_CertGetCRLFromStore = NULL;
extern void *ptr_CertGetCTLContextProperty;
void *ptr_CertGetCTLContextProperty = NULL;
extern void *ptr_CertGetCertificateChain;
void *ptr_CertGetCertificateChain = NULL;
extern void *ptr_CertGetCertificateContextProperty;
void *ptr_CertGetCertificateContextProperty = NULL;
extern void *ptr_CertGetEnhancedKeyUsage;
void *ptr_CertGetEnhancedKeyUsage = NULL;
extern void *ptr_CertGetIntendedKeyUsage;
void *ptr_CertGetIntendedKeyUsage = NULL;
extern void *ptr_CertGetIssuerCertificateFromStore;
void *ptr_CertGetIssuerCertificateFromStore = NULL;
extern void *ptr_CertGetNameStringA;
void *ptr_CertGetNameStringA = NULL;
extern void *ptr_CertGetNameStringW;
void *ptr_CertGetNameStringW = NULL;
extern void *ptr_CertGetPublicKeyLength;
void *ptr_CertGetPublicKeyLength = NULL;
extern void *ptr_CertGetServerOcspResponseContext;
void *ptr_CertGetServerOcspResponseContext = NULL;
extern void *ptr_CertGetStoreProperty;
void *ptr_CertGetStoreProperty = NULL;
extern void *ptr_CertGetSubjectCertificateFromStore;
void *ptr_CertGetSubjectCertificateFromStore = NULL;
extern void *ptr_CertGetValidUsages;
void *ptr_CertGetValidUsages = NULL;
extern void *ptr_CertIsRDNAttrsInCertificateName;
void *ptr_CertIsRDNAttrsInCertificateName = NULL;
extern void *ptr_CertIsStrongHashToSign;
void *ptr_CertIsStrongHashToSign = NULL;
extern void *ptr_CertIsValidCRLForCertificate;
void *ptr_CertIsValidCRLForCertificate = NULL;
extern void *ptr_CertNameToStrA;
void *ptr_CertNameToStrA = NULL;
extern void *ptr_CertNameToStrW;
void *ptr_CertNameToStrW = NULL;
extern void *ptr_CertOIDToAlgId;
void *ptr_CertOIDToAlgId = NULL;
extern void *ptr_CertOpenServerOcspResponse;
void *ptr_CertOpenServerOcspResponse = NULL;
extern void *ptr_CertOpenStore;
void *ptr_CertOpenStore = NULL;
extern void *ptr_CertOpenSystemStoreA;
void *ptr_CertOpenSystemStoreA = NULL;
extern void *ptr_CertOpenSystemStoreW;
void *ptr_CertOpenSystemStoreW = NULL;
extern void *ptr_CertRDNValueToStrA;
void *ptr_CertRDNValueToStrA = NULL;
extern void *ptr_CertRDNValueToStrW;
void *ptr_CertRDNValueToStrW = NULL;
extern void *ptr_CertRegisterPhysicalStore;
void *ptr_CertRegisterPhysicalStore = NULL;
extern void *ptr_CertRegisterSystemStore;
void *ptr_CertRegisterSystemStore = NULL;
extern void *ptr_CertRemoveEnhancedKeyUsageIdentifier;
void *ptr_CertRemoveEnhancedKeyUsageIdentifier = NULL;
extern void *ptr_CertRemoveStoreFromCollection;
void *ptr_CertRemoveStoreFromCollection = NULL;
extern void *ptr_CertResyncCertificateChainEngine;
void *ptr_CertResyncCertificateChainEngine = NULL;
extern void *ptr_CertRetrieveLogoOrBiometricInfo;
void *ptr_CertRetrieveLogoOrBiometricInfo = NULL;
extern void *ptr_CertSaveStore;
void *ptr_CertSaveStore = NULL;
extern void *ptr_CertSelectCertificateChains;
void *ptr_CertSelectCertificateChains = NULL;
extern void *ptr_CertSerializeCRLStoreElement;
void *ptr_CertSerializeCRLStoreElement = NULL;
extern void *ptr_CertSerializeCTLStoreElement;
void *ptr_CertSerializeCTLStoreElement = NULL;
extern void *ptr_CertSerializeCertificateStoreElement;
void *ptr_CertSerializeCertificateStoreElement = NULL;
extern void *ptr_CertSetCRLContextProperty;
void *ptr_CertSetCRLContextProperty = NULL;
extern void *ptr_CertSetCTLContextProperty;
void *ptr_CertSetCTLContextProperty = NULL;
extern void *ptr_CertSetCertificateContextPropertiesFromCTLEntry;
void *ptr_CertSetCertificateContextPropertiesFromCTLEntry = NULL;
extern void *ptr_CertSetCertificateContextProperty;
void *ptr_CertSetCertificateContextProperty = NULL;
extern void *ptr_CertSetEnhancedKeyUsage;
void *ptr_CertSetEnhancedKeyUsage = NULL;
extern void *ptr_CertSetStoreProperty;
void *ptr_CertSetStoreProperty = NULL;
extern void *ptr_CertStrToNameA;
void *ptr_CertStrToNameA = NULL;
extern void *ptr_CertStrToNameW;
void *ptr_CertStrToNameW = NULL;
extern void *ptr_CertUnregisterPhysicalStore;
void *ptr_CertUnregisterPhysicalStore = NULL;
extern void *ptr_CertUnregisterSystemStore;
void *ptr_CertUnregisterSystemStore = NULL;
extern void *ptr_CertVerifyCRLRevocation;
void *ptr_CertVerifyCRLRevocation = NULL;
extern void *ptr_CertVerifyCRLTimeValidity;
void *ptr_CertVerifyCRLTimeValidity = NULL;
extern void *ptr_CertVerifyCTLUsage;
void *ptr_CertVerifyCTLUsage = NULL;
extern void *ptr_CertVerifyCertificateChainPolicy;
void *ptr_CertVerifyCertificateChainPolicy = NULL;
extern void *ptr_CertVerifyRevocation;
void *ptr_CertVerifyRevocation = NULL;
extern void *ptr_CertVerifySubjectCertificateContext;
void *ptr_CertVerifySubjectCertificateContext = NULL;
extern void *ptr_CertVerifyTimeValidity;
void *ptr_CertVerifyTimeValidity = NULL;
extern void *ptr_CertVerifyValidityNesting;
void *ptr_CertVerifyValidityNesting = NULL;
extern void *ptr_CryptAcquireCertificatePrivateKey;
void *ptr_CryptAcquireCertificatePrivateKey = NULL;
extern void *ptr_CryptBinaryToStringA;
void *ptr_CryptBinaryToStringA = NULL;
extern void *ptr_CryptBinaryToStringW;
void *ptr_CryptBinaryToStringW = NULL;
extern void *ptr_CryptCloseAsyncHandle;
void *ptr_CryptCloseAsyncHandle = NULL;
extern void *ptr_CryptCreateAsyncHandle;
void *ptr_CryptCreateAsyncHandle = NULL;
extern void *ptr_CryptCreateKeyIdentifierFromCSP;
void *ptr_CryptCreateKeyIdentifierFromCSP = NULL;
extern void *ptr_CryptDecodeMessage;
void *ptr_CryptDecodeMessage = NULL;
extern void *ptr_CryptDecodeObject;
void *ptr_CryptDecodeObject = NULL;
extern void *ptr_CryptDecodeObjectEx;
void *ptr_CryptDecodeObjectEx = NULL;
extern void *ptr_CryptDecryptAndVerifyMessageSignature;
void *ptr_CryptDecryptAndVerifyMessageSignature = NULL;
extern void *ptr_CryptDecryptMessage;
void *ptr_CryptDecryptMessage = NULL;
extern void *ptr_CryptEncodeObject;
void *ptr_CryptEncodeObject = NULL;
extern void *ptr_CryptEncodeObjectEx;
void *ptr_CryptEncodeObjectEx = NULL;
extern void *ptr_CryptEncryptMessage;
void *ptr_CryptEncryptMessage = NULL;
extern void *ptr_CryptEnumKeyIdentifierProperties;
void *ptr_CryptEnumKeyIdentifierProperties = NULL;
extern void *ptr_CryptEnumOIDFunction;
void *ptr_CryptEnumOIDFunction = NULL;
extern void *ptr_CryptEnumOIDInfo;
void *ptr_CryptEnumOIDInfo = NULL;
extern void *ptr_CryptExportPKCS8;
void *ptr_CryptExportPKCS8 = NULL;
extern void *ptr_CryptExportPublicKeyInfo;
void *ptr_CryptExportPublicKeyInfo = NULL;
extern void *ptr_CryptExportPublicKeyInfoEx;
void *ptr_CryptExportPublicKeyInfoEx = NULL;
extern void *ptr_CryptExportPublicKeyInfoFromBCryptKeyHandle;
void *ptr_CryptExportPublicKeyInfoFromBCryptKeyHandle = NULL;
extern void *ptr_CryptFindCertificateKeyProvInfo;
void *ptr_CryptFindCertificateKeyProvInfo = NULL;
extern void *ptr_CryptFindLocalizedName;
void *ptr_CryptFindLocalizedName = NULL;
extern void *ptr_CryptFindOIDInfo;
void *ptr_CryptFindOIDInfo = NULL;
extern void *ptr_CryptFormatObject;
void *ptr_CryptFormatObject = NULL;
extern void *ptr_CryptFreeOIDFunctionAddress;
void *ptr_CryptFreeOIDFunctionAddress = NULL;
extern void *ptr_CryptGetAsyncParam;
void *ptr_CryptGetAsyncParam = NULL;
extern void *ptr_CryptGetDefaultOIDDllList;
void *ptr_CryptGetDefaultOIDDllList = NULL;
extern void *ptr_CryptGetDefaultOIDFunctionAddress;
void *ptr_CryptGetDefaultOIDFunctionAddress = NULL;
extern void *ptr_CryptGetKeyIdentifierProperty;
void *ptr_CryptGetKeyIdentifierProperty = NULL;
extern void *ptr_CryptGetMessageCertificates;
void *ptr_CryptGetMessageCertificates = NULL;
extern void *ptr_CryptGetMessageSignerCount;
void *ptr_CryptGetMessageSignerCount = NULL;
extern void *ptr_CryptGetOIDFunctionAddress;
void *ptr_CryptGetOIDFunctionAddress = NULL;
extern void *ptr_CryptGetOIDFunctionValue;
void *ptr_CryptGetOIDFunctionValue = NULL;
extern void *ptr_CryptHashCertificate;
void *ptr_CryptHashCertificate = NULL;
extern void *ptr_CryptHashCertificate2;
void *ptr_CryptHashCertificate2 = NULL;
extern void *ptr_CryptHashMessage;
void *ptr_CryptHashMessage = NULL;
extern void *ptr_CryptHashPublicKeyInfo;
void *ptr_CryptHashPublicKeyInfo = NULL;
extern void *ptr_CryptHashToBeSigned;
void *ptr_CryptHashToBeSigned = NULL;
extern void *ptr_CryptImportPKCS8;
void *ptr_CryptImportPKCS8 = NULL;
extern void *ptr_CryptImportPublicKeyInfo;
void *ptr_CryptImportPublicKeyInfo = NULL;
extern void *ptr_CryptImportPublicKeyInfoEx;
void *ptr_CryptImportPublicKeyInfoEx = NULL;
extern void *ptr_CryptImportPublicKeyInfoEx2;
void *ptr_CryptImportPublicKeyInfoEx2 = NULL;
extern void *ptr_CryptInitOIDFunctionSet;
void *ptr_CryptInitOIDFunctionSet = NULL;
extern void *ptr_CryptInstallDefaultContext;
void *ptr_CryptInstallDefaultContext = NULL;
extern void *ptr_CryptInstallOIDFunctionAddress;
void *ptr_CryptInstallOIDFunctionAddress = NULL;
extern void *ptr_CryptLoadSip;
void *ptr_CryptLoadSip = NULL;
extern void *ptr_CryptMemAlloc;
void *ptr_CryptMemAlloc = NULL;
extern void *ptr_CryptMemFree;
void *ptr_CryptMemFree = NULL;
extern void *ptr_CryptMemRealloc;
void *ptr_CryptMemRealloc = NULL;
extern void *ptr_CryptMsgCalculateEncodedLength;
void *ptr_CryptMsgCalculateEncodedLength = NULL;
extern void *ptr_CryptMsgClose;
void *ptr_CryptMsgClose = NULL;
extern void *ptr_CryptMsgControl;
void *ptr_CryptMsgControl = NULL;
extern void *ptr_CryptMsgCountersign;
void *ptr_CryptMsgCountersign = NULL;
extern void *ptr_CryptMsgCountersignEncoded;
void *ptr_CryptMsgCountersignEncoded = NULL;
extern void *ptr_CryptMsgDuplicate;
void *ptr_CryptMsgDuplicate = NULL;
extern void *ptr_CryptMsgEncodeAndSignCTL;
void *ptr_CryptMsgEncodeAndSignCTL = NULL;
extern void *ptr_CryptMsgGetAndVerifySigner;
void *ptr_CryptMsgGetAndVerifySigner = NULL;
extern void *ptr_CryptMsgGetParam;
void *ptr_CryptMsgGetParam = NULL;
extern void *ptr_CryptMsgOpenToDecode;
void *ptr_CryptMsgOpenToDecode = NULL;
extern void *ptr_CryptMsgOpenToEncode;
void *ptr_CryptMsgOpenToEncode = NULL;
extern void *ptr_CryptMsgSignCTL;
void *ptr_CryptMsgSignCTL = NULL;
extern void *ptr_CryptMsgUpdate;
void *ptr_CryptMsgUpdate = NULL;
extern void *ptr_CryptMsgVerifyCountersignatureEncoded;
void *ptr_CryptMsgVerifyCountersignatureEncoded = NULL;
extern void *ptr_CryptMsgVerifyCountersignatureEncodedEx;
void *ptr_CryptMsgVerifyCountersignatureEncodedEx = NULL;
extern void *ptr_CryptProtectData;
void *ptr_CryptProtectData = NULL;
extern void *ptr_CryptProtectMemory;
void *ptr_CryptProtectMemory = NULL;
extern void *ptr_CryptQueryObject;
void *ptr_CryptQueryObject = NULL;
extern void *ptr_CryptRegisterDefaultOIDFunction;
void *ptr_CryptRegisterDefaultOIDFunction = NULL;
extern void *ptr_CryptRegisterOIDFunction;
void *ptr_CryptRegisterOIDFunction = NULL;
extern void *ptr_CryptRegisterOIDInfo;
void *ptr_CryptRegisterOIDInfo = NULL;
extern void *ptr_CryptRetrieveTimeStamp;
void *ptr_CryptRetrieveTimeStamp = NULL;
extern void *ptr_CryptSIPAddProvider;
void *ptr_CryptSIPAddProvider = NULL;
extern void *ptr_CryptSIPCreateIndirectData;
void *ptr_CryptSIPCreateIndirectData = NULL;
extern void *ptr_CryptSIPGetSignedDataMsg;
void *ptr_CryptSIPGetSignedDataMsg = NULL;
extern void *ptr_CryptSIPLoad;
void *ptr_CryptSIPLoad = NULL;
extern void *ptr_CryptSIPPutSignedDataMsg;
void *ptr_CryptSIPPutSignedDataMsg = NULL;
extern void *ptr_CryptSIPRemoveProvider;
void *ptr_CryptSIPRemoveProvider = NULL;
extern void *ptr_CryptSIPRemoveSignedDataMsg;
void *ptr_CryptSIPRemoveSignedDataMsg = NULL;
extern void *ptr_CryptSIPRetrieveSubjectGuid;
void *ptr_CryptSIPRetrieveSubjectGuid = NULL;
extern void *ptr_CryptSIPRetrieveSubjectGuidForCatalogFile;
void *ptr_CryptSIPRetrieveSubjectGuidForCatalogFile = NULL;
extern void *ptr_CryptSIPVerifyIndirectData;
void *ptr_CryptSIPVerifyIndirectData = NULL;
extern void *ptr_CryptSetAsyncParam;
void *ptr_CryptSetAsyncParam = NULL;
extern void *ptr_CryptSetKeyIdentifierProperty;
void *ptr_CryptSetKeyIdentifierProperty = NULL;
extern void *ptr_CryptSetOIDFunctionValue;
void *ptr_CryptSetOIDFunctionValue = NULL;
extern void *ptr_CryptSignAndEncodeCertificate;
void *ptr_CryptSignAndEncodeCertificate = NULL;
extern void *ptr_CryptSignAndEncryptMessage;
void *ptr_CryptSignAndEncryptMessage = NULL;
extern void *ptr_CryptSignCertificate;
void *ptr_CryptSignCertificate = NULL;
extern void *ptr_CryptSignMessage;
void *ptr_CryptSignMessage = NULL;
extern void *ptr_CryptSignMessageWithKey;
void *ptr_CryptSignMessageWithKey = NULL;
extern void *ptr_CryptStringToBinaryA;
void *ptr_CryptStringToBinaryA = NULL;
extern void *ptr_CryptStringToBinaryW;
void *ptr_CryptStringToBinaryW = NULL;
extern void *ptr_CryptUninstallDefaultContext;
void *ptr_CryptUninstallDefaultContext = NULL;
extern void *ptr_CryptUnprotectData;
void *ptr_CryptUnprotectData = NULL;
extern void *ptr_CryptUnprotectMemory;
void *ptr_CryptUnprotectMemory = NULL;
extern void *ptr_CryptUnregisterDefaultOIDFunction;
void *ptr_CryptUnregisterDefaultOIDFunction = NULL;
extern void *ptr_CryptUnregisterOIDFunction;
void *ptr_CryptUnregisterOIDFunction = NULL;
extern void *ptr_CryptUnregisterOIDInfo;
void *ptr_CryptUnregisterOIDInfo = NULL;
extern void *ptr_CryptUpdateProtectedState;
void *ptr_CryptUpdateProtectedState = NULL;
extern void *ptr_CryptVerifyCertificateSignature;
void *ptr_CryptVerifyCertificateSignature = NULL;
extern void *ptr_CryptVerifyCertificateSignatureEx;
void *ptr_CryptVerifyCertificateSignatureEx = NULL;
extern void *ptr_CryptVerifyDetachedMessageHash;
void *ptr_CryptVerifyDetachedMessageHash = NULL;
extern void *ptr_CryptVerifyDetachedMessageSignature;
void *ptr_CryptVerifyDetachedMessageSignature = NULL;
extern void *ptr_CryptVerifyMessageHash;
void *ptr_CryptVerifyMessageHash = NULL;
extern void *ptr_CryptVerifyMessageSignature;
void *ptr_CryptVerifyMessageSignature = NULL;
extern void *ptr_CryptVerifyMessageSignatureWithKey;
void *ptr_CryptVerifyMessageSignatureWithKey = NULL;
extern void *ptr_CryptVerifyTimeStampSignature;
void *ptr_CryptVerifyTimeStampSignature = NULL;
extern void *ptr_I_CertDiagControl;
void *ptr_I_CertDiagControl = NULL;
extern void *ptr_I_CertProtectFunction;
void *ptr_I_CertProtectFunction = NULL;
extern void *ptr_I_CertSrvProtectFunction;
void *ptr_I_CertSrvProtectFunction = NULL;
extern void *ptr_I_CertSyncStore;
void *ptr_I_CertSyncStore = NULL;
extern void *ptr_I_CertUpdateStore;
void *ptr_I_CertUpdateStore = NULL;
extern void *ptr_I_CryptAddRefLruEntry;
void *ptr_I_CryptAddRefLruEntry = NULL;
extern void *ptr_I_CryptAddSmartCardCertToStore;
void *ptr_I_CryptAddSmartCardCertToStore = NULL;
extern void *ptr_I_CryptAllocTls;
void *ptr_I_CryptAllocTls = NULL;
extern void *ptr_I_CryptCreateLruCache;
void *ptr_I_CryptCreateLruCache = NULL;
extern void *ptr_I_CryptCreateLruEntry;
void *ptr_I_CryptCreateLruEntry = NULL;
extern void *ptr_I_CryptDetachTls;
void *ptr_I_CryptDetachTls = NULL;
extern void *ptr_I_CryptDisableLruOfEntries;
void *ptr_I_CryptDisableLruOfEntries = NULL;
extern void *ptr_I_CryptEnableLruOfEntries;
void *ptr_I_CryptEnableLruOfEntries = NULL;
extern void *ptr_I_CryptEnumMatchingLruEntries;
void *ptr_I_CryptEnumMatchingLruEntries = NULL;
extern void *ptr_I_CryptFindLruEntry;
void *ptr_I_CryptFindLruEntry = NULL;
extern void *ptr_I_CryptFindLruEntryData;
void *ptr_I_CryptFindLruEntryData = NULL;
extern void *ptr_I_CryptFindSmartCardCertInStore;
void *ptr_I_CryptFindSmartCardCertInStore = NULL;
extern void *ptr_I_CryptFlushLruCache;
void *ptr_I_CryptFlushLruCache = NULL;
extern void *ptr_I_CryptFreeLruCache;
void *ptr_I_CryptFreeLruCache = NULL;
extern void *ptr_I_CryptFreeTls;
void *ptr_I_CryptFreeTls = NULL;
extern void *ptr_I_CryptGetAsn1Decoder;
void *ptr_I_CryptGetAsn1Decoder = NULL;
extern void *ptr_I_CryptGetAsn1Encoder;
void *ptr_I_CryptGetAsn1Encoder = NULL;
extern void *ptr_I_CryptGetDefaultCryptProv;
void *ptr_I_CryptGetDefaultCryptProv = NULL;
extern void *ptr_I_CryptGetDefaultCryptProvForEncrypt;
void *ptr_I_CryptGetDefaultCryptProvForEncrypt = NULL;
extern void *ptr_I_CryptGetFileVersion;
void *ptr_I_CryptGetFileVersion = NULL;
extern void *ptr_I_CryptGetLruEntryData;
void *ptr_I_CryptGetLruEntryData = NULL;
extern void *ptr_I_CryptGetLruEntryIdentifier;
void *ptr_I_CryptGetLruEntryIdentifier = NULL;
extern void *ptr_I_CryptGetOssGlobal;
void *ptr_I_CryptGetOssGlobal = NULL;
extern void *ptr_I_CryptGetTls;
void *ptr_I_CryptGetTls = NULL;
extern void *ptr_I_CryptInsertLruEntry;
void *ptr_I_CryptInsertLruEntry = NULL;
extern void *ptr_I_CryptInstallAsn1Module;
void *ptr_I_CryptInstallAsn1Module = NULL;
extern void *ptr_I_CryptInstallOssGlobal;
void *ptr_I_CryptInstallOssGlobal = NULL;
extern void *ptr_I_CryptReadTrustedPublisherDWORDValueFromRegistry;
void *ptr_I_CryptReadTrustedPublisherDWORDValueFromRegistry = NULL;
extern void *ptr_I_CryptRegisterSmartCardStore;
void *ptr_I_CryptRegisterSmartCardStore = NULL;
extern void *ptr_I_CryptReleaseLruEntry;
void *ptr_I_CryptReleaseLruEntry = NULL;
extern void *ptr_I_CryptRemoveLruEntry;
void *ptr_I_CryptRemoveLruEntry = NULL;
extern void *ptr_I_CryptSetTls;
void *ptr_I_CryptSetTls = NULL;
extern void *ptr_I_CryptTouchLruEntry;
void *ptr_I_CryptTouchLruEntry = NULL;
extern void *ptr_I_CryptUninstallAsn1Module;
void *ptr_I_CryptUninstallAsn1Module = NULL;
extern void *ptr_I_CryptUninstallOssGlobal;
void *ptr_I_CryptUninstallOssGlobal = NULL;
extern void *ptr_I_CryptUnregisterSmartCardStore;
void *ptr_I_CryptUnregisterSmartCardStore = NULL;
extern void *ptr_I_CryptWalkAllLruCacheEntries;
void *ptr_I_CryptWalkAllLruCacheEntries = NULL;
extern void *ptr_PFXExportCertStore;
void *ptr_PFXExportCertStore = NULL;
extern void *ptr_PFXExportCertStore2;
void *ptr_PFXExportCertStore2 = NULL;
extern void *ptr_PFXExportCertStoreEx;
void *ptr_PFXExportCertStoreEx = NULL;
extern void *ptr_PFXImportCertStore;
void *ptr_PFXImportCertStore = NULL;
extern void *ptr_PFXIsPFXBlob;
void *ptr_PFXIsPFXBlob = NULL;
extern void *ptr_PFXVerifyPassword;
void *ptr_PFXVerifyPassword = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\crypt32.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_CertAddCRLContextToStore = (__vartype(ptr_CertAddCRLContextToStore))GetProcAddress(hModule, "CertAddCRLContextToStore");
   ptr_CertAddCRLLinkToStore = (__vartype(ptr_CertAddCRLLinkToStore))GetProcAddress(hModule, "CertAddCRLLinkToStore");
   ptr_CertAddCTLContextToStore = (__vartype(ptr_CertAddCTLContextToStore))GetProcAddress(hModule, "CertAddCTLContextToStore");
   ptr_CertAddCTLLinkToStore = (__vartype(ptr_CertAddCTLLinkToStore))GetProcAddress(hModule, "CertAddCTLLinkToStore");
   ptr_CertAddCertificateContextToStore = (__vartype(ptr_CertAddCertificateContextToStore))GetProcAddress(hModule, "CertAddCertificateContextToStore");
   ptr_CertAddCertificateLinkToStore = (__vartype(ptr_CertAddCertificateLinkToStore))GetProcAddress(hModule, "CertAddCertificateLinkToStore");
   ptr_CertAddEncodedCRLToStore = (__vartype(ptr_CertAddEncodedCRLToStore))GetProcAddress(hModule, "CertAddEncodedCRLToStore");
   ptr_CertAddEncodedCTLToStore = (__vartype(ptr_CertAddEncodedCTLToStore))GetProcAddress(hModule, "CertAddEncodedCTLToStore");
   ptr_CertAddEncodedCertificateToStore = (__vartype(ptr_CertAddEncodedCertificateToStore))GetProcAddress(hModule, "CertAddEncodedCertificateToStore");
   ptr_CertAddEncodedCertificateToSystemStoreA = (__vartype(ptr_CertAddEncodedCertificateToSystemStoreA))GetProcAddress(hModule, "CertAddEncodedCertificateToSystemStoreA");
   ptr_CertAddEncodedCertificateToSystemStoreW = (__vartype(ptr_CertAddEncodedCertificateToSystemStoreW))GetProcAddress(hModule, "CertAddEncodedCertificateToSystemStoreW");
   ptr_CertAddEnhancedKeyUsageIdentifier = (__vartype(ptr_CertAddEnhancedKeyUsageIdentifier))GetProcAddress(hModule, "CertAddEnhancedKeyUsageIdentifier");
   ptr_CertAddRefServerOcspResponse = (__vartype(ptr_CertAddRefServerOcspResponse))GetProcAddress(hModule, "CertAddRefServerOcspResponse");
   ptr_CertAddRefServerOcspResponseContext = (__vartype(ptr_CertAddRefServerOcspResponseContext))GetProcAddress(hModule, "CertAddRefServerOcspResponseContext");
   ptr_CertAddSerializedElementToStore = (__vartype(ptr_CertAddSerializedElementToStore))GetProcAddress(hModule, "CertAddSerializedElementToStore");
   ptr_CertAddStoreToCollection = (__vartype(ptr_CertAddStoreToCollection))GetProcAddress(hModule, "CertAddStoreToCollection");
   ptr_CertAlgIdToOID = (__vartype(ptr_CertAlgIdToOID))GetProcAddress(hModule, "CertAlgIdToOID");
   ptr_CertCloseServerOcspResponse = (__vartype(ptr_CertCloseServerOcspResponse))GetProcAddress(hModule, "CertCloseServerOcspResponse");
   ptr_CertCloseStore = (__vartype(ptr_CertCloseStore))GetProcAddress(hModule, "CertCloseStore");
   ptr_CertCompareCertificate = (__vartype(ptr_CertCompareCertificate))GetProcAddress(hModule, "CertCompareCertificate");
   ptr_CertCompareCertificateName = (__vartype(ptr_CertCompareCertificateName))GetProcAddress(hModule, "CertCompareCertificateName");
   ptr_CertCompareIntegerBlob = (__vartype(ptr_CertCompareIntegerBlob))GetProcAddress(hModule, "CertCompareIntegerBlob");
   ptr_CertComparePublicKeyInfo = (__vartype(ptr_CertComparePublicKeyInfo))GetProcAddress(hModule, "CertComparePublicKeyInfo");
   ptr_CertControlStore = (__vartype(ptr_CertControlStore))GetProcAddress(hModule, "CertControlStore");
   ptr_CertCreateCRLContext = (__vartype(ptr_CertCreateCRLContext))GetProcAddress(hModule, "CertCreateCRLContext");
   ptr_CertCreateCTLContext = (__vartype(ptr_CertCreateCTLContext))GetProcAddress(hModule, "CertCreateCTLContext");
   ptr_CertCreateCTLEntryFromCertificateContextProperties = (__vartype(ptr_CertCreateCTLEntryFromCertificateContextProperties))GetProcAddress(hModule, "CertCreateCTLEntryFromCertificateContextProperties");
   ptr_CertCreateCertificateChainEngine = (__vartype(ptr_CertCreateCertificateChainEngine))GetProcAddress(hModule, "CertCreateCertificateChainEngine");
   ptr_CertCreateCertificateContext = (__vartype(ptr_CertCreateCertificateContext))GetProcAddress(hModule, "CertCreateCertificateContext");
   ptr_CertCreateContext = (__vartype(ptr_CertCreateContext))GetProcAddress(hModule, "CertCreateContext");
   ptr_CertCreateSelfSignCertificate = (__vartype(ptr_CertCreateSelfSignCertificate))GetProcAddress(hModule, "CertCreateSelfSignCertificate");
   ptr_CertDeleteCRLFromStore = (__vartype(ptr_CertDeleteCRLFromStore))GetProcAddress(hModule, "CertDeleteCRLFromStore");
   ptr_CertDeleteCTLFromStore = (__vartype(ptr_CertDeleteCTLFromStore))GetProcAddress(hModule, "CertDeleteCTLFromStore");
   ptr_CertDeleteCertificateFromStore = (__vartype(ptr_CertDeleteCertificateFromStore))GetProcAddress(hModule, "CertDeleteCertificateFromStore");
   ptr_CertDuplicateCRLContext = (__vartype(ptr_CertDuplicateCRLContext))GetProcAddress(hModule, "CertDuplicateCRLContext");
   ptr_CertDuplicateCTLContext = (__vartype(ptr_CertDuplicateCTLContext))GetProcAddress(hModule, "CertDuplicateCTLContext");
   ptr_CertDuplicateCertificateChain = (__vartype(ptr_CertDuplicateCertificateChain))GetProcAddress(hModule, "CertDuplicateCertificateChain");
   ptr_CertDuplicateCertificateContext = (__vartype(ptr_CertDuplicateCertificateContext))GetProcAddress(hModule, "CertDuplicateCertificateContext");
   ptr_CertDuplicateStore = (__vartype(ptr_CertDuplicateStore))GetProcAddress(hModule, "CertDuplicateStore");
   ptr_CertEnumCRLContextProperties = (__vartype(ptr_CertEnumCRLContextProperties))GetProcAddress(hModule, "CertEnumCRLContextProperties");
   ptr_CertEnumCRLsInStore = (__vartype(ptr_CertEnumCRLsInStore))GetProcAddress(hModule, "CertEnumCRLsInStore");
   ptr_CertEnumCTLContextProperties = (__vartype(ptr_CertEnumCTLContextProperties))GetProcAddress(hModule, "CertEnumCTLContextProperties");
   ptr_CertEnumCTLsInStore = (__vartype(ptr_CertEnumCTLsInStore))GetProcAddress(hModule, "CertEnumCTLsInStore");
   ptr_CertEnumCertificateContextProperties = (__vartype(ptr_CertEnumCertificateContextProperties))GetProcAddress(hModule, "CertEnumCertificateContextProperties");
   ptr_CertEnumCertificatesInStore = (__vartype(ptr_CertEnumCertificatesInStore))GetProcAddress(hModule, "CertEnumCertificatesInStore");
   ptr_CertEnumPhysicalStore = (__vartype(ptr_CertEnumPhysicalStore))GetProcAddress(hModule, "CertEnumPhysicalStore");
   ptr_CertEnumSubjectInSortedCTL = (__vartype(ptr_CertEnumSubjectInSortedCTL))GetProcAddress(hModule, "CertEnumSubjectInSortedCTL");
   ptr_CertEnumSystemStore = (__vartype(ptr_CertEnumSystemStore))GetProcAddress(hModule, "CertEnumSystemStore");
   ptr_CertEnumSystemStoreLocation = (__vartype(ptr_CertEnumSystemStoreLocation))GetProcAddress(hModule, "CertEnumSystemStoreLocation");
   ptr_CertFindAttribute = (__vartype(ptr_CertFindAttribute))GetProcAddress(hModule, "CertFindAttribute");
   ptr_CertFindCRLInStore = (__vartype(ptr_CertFindCRLInStore))GetProcAddress(hModule, "CertFindCRLInStore");
   ptr_CertFindCTLInStore = (__vartype(ptr_CertFindCTLInStore))GetProcAddress(hModule, "CertFindCTLInStore");
   ptr_CertFindCertificateInCRL = (__vartype(ptr_CertFindCertificateInCRL))GetProcAddress(hModule, "CertFindCertificateInCRL");
   ptr_CertFindCertificateInStore = (__vartype(ptr_CertFindCertificateInStore))GetProcAddress(hModule, "CertFindCertificateInStore");
   ptr_CertFindChainInStore = (__vartype(ptr_CertFindChainInStore))GetProcAddress(hModule, "CertFindChainInStore");
   ptr_CertFindExtension = (__vartype(ptr_CertFindExtension))GetProcAddress(hModule, "CertFindExtension");
   ptr_CertFindRDNAttr = (__vartype(ptr_CertFindRDNAttr))GetProcAddress(hModule, "CertFindRDNAttr");
   ptr_CertFindSubjectInCTL = (__vartype(ptr_CertFindSubjectInCTL))GetProcAddress(hModule, "CertFindSubjectInCTL");
   ptr_CertFindSubjectInSortedCTL = (__vartype(ptr_CertFindSubjectInSortedCTL))GetProcAddress(hModule, "CertFindSubjectInSortedCTL");
   ptr_CertFreeCRLContext = (__vartype(ptr_CertFreeCRLContext))GetProcAddress(hModule, "CertFreeCRLContext");
   ptr_CertFreeCTLContext = (__vartype(ptr_CertFreeCTLContext))GetProcAddress(hModule, "CertFreeCTLContext");
   ptr_CertFreeCertificateChain = (__vartype(ptr_CertFreeCertificateChain))GetProcAddress(hModule, "CertFreeCertificateChain");
   ptr_CertFreeCertificateChainEngine = (__vartype(ptr_CertFreeCertificateChainEngine))GetProcAddress(hModule, "CertFreeCertificateChainEngine");
   ptr_CertFreeCertificateChainList = (__vartype(ptr_CertFreeCertificateChainList))GetProcAddress(hModule, "CertFreeCertificateChainList");
   ptr_CertFreeCertificateContext = (__vartype(ptr_CertFreeCertificateContext))GetProcAddress(hModule, "CertFreeCertificateContext");
   ptr_CertFreeServerOcspResponseContext = (__vartype(ptr_CertFreeServerOcspResponseContext))GetProcAddress(hModule, "CertFreeServerOcspResponseContext");
   ptr_CertGetCRLContextProperty = (__vartype(ptr_CertGetCRLContextProperty))GetProcAddress(hModule, "CertGetCRLContextProperty");
   ptr_CertGetCRLFromStore = (__vartype(ptr_CertGetCRLFromStore))GetProcAddress(hModule, "CertGetCRLFromStore");
   ptr_CertGetCTLContextProperty = (__vartype(ptr_CertGetCTLContextProperty))GetProcAddress(hModule, "CertGetCTLContextProperty");
   ptr_CertGetCertificateChain = (__vartype(ptr_CertGetCertificateChain))GetProcAddress(hModule, "CertGetCertificateChain");
   ptr_CertGetCertificateContextProperty = (__vartype(ptr_CertGetCertificateContextProperty))GetProcAddress(hModule, "CertGetCertificateContextProperty");
   ptr_CertGetEnhancedKeyUsage = (__vartype(ptr_CertGetEnhancedKeyUsage))GetProcAddress(hModule, "CertGetEnhancedKeyUsage");
   ptr_CertGetIntendedKeyUsage = (__vartype(ptr_CertGetIntendedKeyUsage))GetProcAddress(hModule, "CertGetIntendedKeyUsage");
   ptr_CertGetIssuerCertificateFromStore = (__vartype(ptr_CertGetIssuerCertificateFromStore))GetProcAddress(hModule, "CertGetIssuerCertificateFromStore");
   ptr_CertGetNameStringA = (__vartype(ptr_CertGetNameStringA))GetProcAddress(hModule, "CertGetNameStringA");
   ptr_CertGetNameStringW = (__vartype(ptr_CertGetNameStringW))GetProcAddress(hModule, "CertGetNameStringW");
   ptr_CertGetPublicKeyLength = (__vartype(ptr_CertGetPublicKeyLength))GetProcAddress(hModule, "CertGetPublicKeyLength");
   ptr_CertGetServerOcspResponseContext = (__vartype(ptr_CertGetServerOcspResponseContext))GetProcAddress(hModule, "CertGetServerOcspResponseContext");
   ptr_CertGetStoreProperty = (__vartype(ptr_CertGetStoreProperty))GetProcAddress(hModule, "CertGetStoreProperty");
   ptr_CertGetSubjectCertificateFromStore = (__vartype(ptr_CertGetSubjectCertificateFromStore))GetProcAddress(hModule, "CertGetSubjectCertificateFromStore");
   ptr_CertGetValidUsages = (__vartype(ptr_CertGetValidUsages))GetProcAddress(hModule, "CertGetValidUsages");
   ptr_CertIsRDNAttrsInCertificateName = (__vartype(ptr_CertIsRDNAttrsInCertificateName))GetProcAddress(hModule, "CertIsRDNAttrsInCertificateName");
   ptr_CertIsStrongHashToSign = (__vartype(ptr_CertIsStrongHashToSign))GetProcAddress(hModule, "CertIsStrongHashToSign");
   ptr_CertIsValidCRLForCertificate = (__vartype(ptr_CertIsValidCRLForCertificate))GetProcAddress(hModule, "CertIsValidCRLForCertificate");
   ptr_CertNameToStrA = (__vartype(ptr_CertNameToStrA))GetProcAddress(hModule, "CertNameToStrA");
   ptr_CertNameToStrW = (__vartype(ptr_CertNameToStrW))GetProcAddress(hModule, "CertNameToStrW");
   ptr_CertOIDToAlgId = (__vartype(ptr_CertOIDToAlgId))GetProcAddress(hModule, "CertOIDToAlgId");
   ptr_CertOpenServerOcspResponse = (__vartype(ptr_CertOpenServerOcspResponse))GetProcAddress(hModule, "CertOpenServerOcspResponse");
   ptr_CertOpenStore = (__vartype(ptr_CertOpenStore))GetProcAddress(hModule, "CertOpenStore");
   ptr_CertOpenSystemStoreA = (__vartype(ptr_CertOpenSystemStoreA))GetProcAddress(hModule, "CertOpenSystemStoreA");
   ptr_CertOpenSystemStoreW = (__vartype(ptr_CertOpenSystemStoreW))GetProcAddress(hModule, "CertOpenSystemStoreW");
   ptr_CertRDNValueToStrA = (__vartype(ptr_CertRDNValueToStrA))GetProcAddress(hModule, "CertRDNValueToStrA");
   ptr_CertRDNValueToStrW = (__vartype(ptr_CertRDNValueToStrW))GetProcAddress(hModule, "CertRDNValueToStrW");
   ptr_CertRegisterPhysicalStore = (__vartype(ptr_CertRegisterPhysicalStore))GetProcAddress(hModule, "CertRegisterPhysicalStore");
   ptr_CertRegisterSystemStore = (__vartype(ptr_CertRegisterSystemStore))GetProcAddress(hModule, "CertRegisterSystemStore");
   ptr_CertRemoveEnhancedKeyUsageIdentifier = (__vartype(ptr_CertRemoveEnhancedKeyUsageIdentifier))GetProcAddress(hModule, "CertRemoveEnhancedKeyUsageIdentifier");
   ptr_CertRemoveStoreFromCollection = (__vartype(ptr_CertRemoveStoreFromCollection))GetProcAddress(hModule, "CertRemoveStoreFromCollection");
   ptr_CertResyncCertificateChainEngine = (__vartype(ptr_CertResyncCertificateChainEngine))GetProcAddress(hModule, "CertResyncCertificateChainEngine");
   ptr_CertRetrieveLogoOrBiometricInfo = (__vartype(ptr_CertRetrieveLogoOrBiometricInfo))GetProcAddress(hModule, "CertRetrieveLogoOrBiometricInfo");
   ptr_CertSaveStore = (__vartype(ptr_CertSaveStore))GetProcAddress(hModule, "CertSaveStore");
   ptr_CertSelectCertificateChains = (__vartype(ptr_CertSelectCertificateChains))GetProcAddress(hModule, "CertSelectCertificateChains");
   ptr_CertSerializeCRLStoreElement = (__vartype(ptr_CertSerializeCRLStoreElement))GetProcAddress(hModule, "CertSerializeCRLStoreElement");
   ptr_CertSerializeCTLStoreElement = (__vartype(ptr_CertSerializeCTLStoreElement))GetProcAddress(hModule, "CertSerializeCTLStoreElement");
   ptr_CertSerializeCertificateStoreElement = (__vartype(ptr_CertSerializeCertificateStoreElement))GetProcAddress(hModule, "CertSerializeCertificateStoreElement");
   ptr_CertSetCRLContextProperty = (__vartype(ptr_CertSetCRLContextProperty))GetProcAddress(hModule, "CertSetCRLContextProperty");
   ptr_CertSetCTLContextProperty = (__vartype(ptr_CertSetCTLContextProperty))GetProcAddress(hModule, "CertSetCTLContextProperty");
   ptr_CertSetCertificateContextPropertiesFromCTLEntry = (__vartype(ptr_CertSetCertificateContextPropertiesFromCTLEntry))GetProcAddress(hModule, "CertSetCertificateContextPropertiesFromCTLEntry");
   ptr_CertSetCertificateContextProperty = (__vartype(ptr_CertSetCertificateContextProperty))GetProcAddress(hModule, "CertSetCertificateContextProperty");
   ptr_CertSetEnhancedKeyUsage = (__vartype(ptr_CertSetEnhancedKeyUsage))GetProcAddress(hModule, "CertSetEnhancedKeyUsage");
   ptr_CertSetStoreProperty = (__vartype(ptr_CertSetStoreProperty))GetProcAddress(hModule, "CertSetStoreProperty");
   ptr_CertStrToNameA = (__vartype(ptr_CertStrToNameA))GetProcAddress(hModule, "CertStrToNameA");
   ptr_CertStrToNameW = (__vartype(ptr_CertStrToNameW))GetProcAddress(hModule, "CertStrToNameW");
   ptr_CertUnregisterPhysicalStore = (__vartype(ptr_CertUnregisterPhysicalStore))GetProcAddress(hModule, "CertUnregisterPhysicalStore");
   ptr_CertUnregisterSystemStore = (__vartype(ptr_CertUnregisterSystemStore))GetProcAddress(hModule, "CertUnregisterSystemStore");
   ptr_CertVerifyCRLRevocation = (__vartype(ptr_CertVerifyCRLRevocation))GetProcAddress(hModule, "CertVerifyCRLRevocation");
   ptr_CertVerifyCRLTimeValidity = (__vartype(ptr_CertVerifyCRLTimeValidity))GetProcAddress(hModule, "CertVerifyCRLTimeValidity");
   ptr_CertVerifyCTLUsage = (__vartype(ptr_CertVerifyCTLUsage))GetProcAddress(hModule, "CertVerifyCTLUsage");
   ptr_CertVerifyCertificateChainPolicy = (__vartype(ptr_CertVerifyCertificateChainPolicy))GetProcAddress(hModule, "CertVerifyCertificateChainPolicy");
   ptr_CertVerifyRevocation = (__vartype(ptr_CertVerifyRevocation))GetProcAddress(hModule, "CertVerifyRevocation");
   ptr_CertVerifySubjectCertificateContext = (__vartype(ptr_CertVerifySubjectCertificateContext))GetProcAddress(hModule, "CertVerifySubjectCertificateContext");
   ptr_CertVerifyTimeValidity = (__vartype(ptr_CertVerifyTimeValidity))GetProcAddress(hModule, "CertVerifyTimeValidity");
   ptr_CertVerifyValidityNesting = (__vartype(ptr_CertVerifyValidityNesting))GetProcAddress(hModule, "CertVerifyValidityNesting");
   ptr_CryptAcquireCertificatePrivateKey = (__vartype(ptr_CryptAcquireCertificatePrivateKey))GetProcAddress(hModule, "CryptAcquireCertificatePrivateKey");
   ptr_CryptBinaryToStringA = (__vartype(ptr_CryptBinaryToStringA))GetProcAddress(hModule, "CryptBinaryToStringA");
   ptr_CryptBinaryToStringW = (__vartype(ptr_CryptBinaryToStringW))GetProcAddress(hModule, "CryptBinaryToStringW");
   ptr_CryptCloseAsyncHandle = (__vartype(ptr_CryptCloseAsyncHandle))GetProcAddress(hModule, "CryptCloseAsyncHandle");
   ptr_CryptCreateAsyncHandle = (__vartype(ptr_CryptCreateAsyncHandle))GetProcAddress(hModule, "CryptCreateAsyncHandle");
   ptr_CryptCreateKeyIdentifierFromCSP = (__vartype(ptr_CryptCreateKeyIdentifierFromCSP))GetProcAddress(hModule, "CryptCreateKeyIdentifierFromCSP");
   ptr_CryptDecodeMessage = (__vartype(ptr_CryptDecodeMessage))GetProcAddress(hModule, "CryptDecodeMessage");
   ptr_CryptDecodeObject = (__vartype(ptr_CryptDecodeObject))GetProcAddress(hModule, "CryptDecodeObject");
   ptr_CryptDecodeObjectEx = (__vartype(ptr_CryptDecodeObjectEx))GetProcAddress(hModule, "CryptDecodeObjectEx");
   ptr_CryptDecryptAndVerifyMessageSignature = (__vartype(ptr_CryptDecryptAndVerifyMessageSignature))GetProcAddress(hModule, "CryptDecryptAndVerifyMessageSignature");
   ptr_CryptDecryptMessage = (__vartype(ptr_CryptDecryptMessage))GetProcAddress(hModule, "CryptDecryptMessage");
   ptr_CryptEncodeObject = (__vartype(ptr_CryptEncodeObject))GetProcAddress(hModule, "CryptEncodeObject");
   ptr_CryptEncodeObjectEx = (__vartype(ptr_CryptEncodeObjectEx))GetProcAddress(hModule, "CryptEncodeObjectEx");
   ptr_CryptEncryptMessage = (__vartype(ptr_CryptEncryptMessage))GetProcAddress(hModule, "CryptEncryptMessage");
   ptr_CryptEnumKeyIdentifierProperties = (__vartype(ptr_CryptEnumKeyIdentifierProperties))GetProcAddress(hModule, "CryptEnumKeyIdentifierProperties");
   ptr_CryptEnumOIDFunction = (__vartype(ptr_CryptEnumOIDFunction))GetProcAddress(hModule, "CryptEnumOIDFunction");
   ptr_CryptEnumOIDInfo = (__vartype(ptr_CryptEnumOIDInfo))GetProcAddress(hModule, "CryptEnumOIDInfo");
   ptr_CryptExportPKCS8 = (__vartype(ptr_CryptExportPKCS8))GetProcAddress(hModule, "CryptExportPKCS8");
   ptr_CryptExportPublicKeyInfo = (__vartype(ptr_CryptExportPublicKeyInfo))GetProcAddress(hModule, "CryptExportPublicKeyInfo");
   ptr_CryptExportPublicKeyInfoEx = (__vartype(ptr_CryptExportPublicKeyInfoEx))GetProcAddress(hModule, "CryptExportPublicKeyInfoEx");
   ptr_CryptExportPublicKeyInfoFromBCryptKeyHandle = (__vartype(ptr_CryptExportPublicKeyInfoFromBCryptKeyHandle))GetProcAddress(hModule, "CryptExportPublicKeyInfoFromBCryptKeyHandle");
   ptr_CryptFindCertificateKeyProvInfo = (__vartype(ptr_CryptFindCertificateKeyProvInfo))GetProcAddress(hModule, "CryptFindCertificateKeyProvInfo");
   ptr_CryptFindLocalizedName = (__vartype(ptr_CryptFindLocalizedName))GetProcAddress(hModule, "CryptFindLocalizedName");
   ptr_CryptFindOIDInfo = (__vartype(ptr_CryptFindOIDInfo))GetProcAddress(hModule, "CryptFindOIDInfo");
   ptr_CryptFormatObject = (__vartype(ptr_CryptFormatObject))GetProcAddress(hModule, "CryptFormatObject");
   ptr_CryptFreeOIDFunctionAddress = (__vartype(ptr_CryptFreeOIDFunctionAddress))GetProcAddress(hModule, "CryptFreeOIDFunctionAddress");
   ptr_CryptGetAsyncParam = (__vartype(ptr_CryptGetAsyncParam))GetProcAddress(hModule, "CryptGetAsyncParam");
   ptr_CryptGetDefaultOIDDllList = (__vartype(ptr_CryptGetDefaultOIDDllList))GetProcAddress(hModule, "CryptGetDefaultOIDDllList");
   ptr_CryptGetDefaultOIDFunctionAddress = (__vartype(ptr_CryptGetDefaultOIDFunctionAddress))GetProcAddress(hModule, "CryptGetDefaultOIDFunctionAddress");
   ptr_CryptGetKeyIdentifierProperty = (__vartype(ptr_CryptGetKeyIdentifierProperty))GetProcAddress(hModule, "CryptGetKeyIdentifierProperty");
   ptr_CryptGetMessageCertificates = (__vartype(ptr_CryptGetMessageCertificates))GetProcAddress(hModule, "CryptGetMessageCertificates");
   ptr_CryptGetMessageSignerCount = (__vartype(ptr_CryptGetMessageSignerCount))GetProcAddress(hModule, "CryptGetMessageSignerCount");
   ptr_CryptGetOIDFunctionAddress = (__vartype(ptr_CryptGetOIDFunctionAddress))GetProcAddress(hModule, "CryptGetOIDFunctionAddress");
   ptr_CryptGetOIDFunctionValue = (__vartype(ptr_CryptGetOIDFunctionValue))GetProcAddress(hModule, "CryptGetOIDFunctionValue");
   ptr_CryptHashCertificate = (__vartype(ptr_CryptHashCertificate))GetProcAddress(hModule, "CryptHashCertificate");
   ptr_CryptHashCertificate2 = (__vartype(ptr_CryptHashCertificate2))GetProcAddress(hModule, "CryptHashCertificate2");
   ptr_CryptHashMessage = (__vartype(ptr_CryptHashMessage))GetProcAddress(hModule, "CryptHashMessage");
   ptr_CryptHashPublicKeyInfo = (__vartype(ptr_CryptHashPublicKeyInfo))GetProcAddress(hModule, "CryptHashPublicKeyInfo");
   ptr_CryptHashToBeSigned = (__vartype(ptr_CryptHashToBeSigned))GetProcAddress(hModule, "CryptHashToBeSigned");
   ptr_CryptImportPKCS8 = (__vartype(ptr_CryptImportPKCS8))GetProcAddress(hModule, "CryptImportPKCS8");
   ptr_CryptImportPublicKeyInfo = (__vartype(ptr_CryptImportPublicKeyInfo))GetProcAddress(hModule, "CryptImportPublicKeyInfo");
   ptr_CryptImportPublicKeyInfoEx = (__vartype(ptr_CryptImportPublicKeyInfoEx))GetProcAddress(hModule, "CryptImportPublicKeyInfoEx");
   ptr_CryptImportPublicKeyInfoEx2 = (__vartype(ptr_CryptImportPublicKeyInfoEx2))GetProcAddress(hModule, "CryptImportPublicKeyInfoEx2");
   ptr_CryptInitOIDFunctionSet = (__vartype(ptr_CryptInitOIDFunctionSet))GetProcAddress(hModule, "CryptInitOIDFunctionSet");
   ptr_CryptInstallDefaultContext = (__vartype(ptr_CryptInstallDefaultContext))GetProcAddress(hModule, "CryptInstallDefaultContext");
   ptr_CryptInstallOIDFunctionAddress = (__vartype(ptr_CryptInstallOIDFunctionAddress))GetProcAddress(hModule, "CryptInstallOIDFunctionAddress");
   ptr_CryptLoadSip = (__vartype(ptr_CryptLoadSip))GetProcAddress(hModule, "CryptLoadSip");
   ptr_CryptMemAlloc = (__vartype(ptr_CryptMemAlloc))GetProcAddress(hModule, "CryptMemAlloc");
   ptr_CryptMemFree = (__vartype(ptr_CryptMemFree))GetProcAddress(hModule, "CryptMemFree");
   ptr_CryptMemRealloc = (__vartype(ptr_CryptMemRealloc))GetProcAddress(hModule, "CryptMemRealloc");
   ptr_CryptMsgCalculateEncodedLength = (__vartype(ptr_CryptMsgCalculateEncodedLength))GetProcAddress(hModule, "CryptMsgCalculateEncodedLength");
   ptr_CryptMsgClose = (__vartype(ptr_CryptMsgClose))GetProcAddress(hModule, "CryptMsgClose");
   ptr_CryptMsgControl = (__vartype(ptr_CryptMsgControl))GetProcAddress(hModule, "CryptMsgControl");
   ptr_CryptMsgCountersign = (__vartype(ptr_CryptMsgCountersign))GetProcAddress(hModule, "CryptMsgCountersign");
   ptr_CryptMsgCountersignEncoded = (__vartype(ptr_CryptMsgCountersignEncoded))GetProcAddress(hModule, "CryptMsgCountersignEncoded");
   ptr_CryptMsgDuplicate = (__vartype(ptr_CryptMsgDuplicate))GetProcAddress(hModule, "CryptMsgDuplicate");
   ptr_CryptMsgEncodeAndSignCTL = (__vartype(ptr_CryptMsgEncodeAndSignCTL))GetProcAddress(hModule, "CryptMsgEncodeAndSignCTL");
   ptr_CryptMsgGetAndVerifySigner = (__vartype(ptr_CryptMsgGetAndVerifySigner))GetProcAddress(hModule, "CryptMsgGetAndVerifySigner");
   ptr_CryptMsgGetParam = (__vartype(ptr_CryptMsgGetParam))GetProcAddress(hModule, "CryptMsgGetParam");
   ptr_CryptMsgOpenToDecode = (__vartype(ptr_CryptMsgOpenToDecode))GetProcAddress(hModule, "CryptMsgOpenToDecode");
   ptr_CryptMsgOpenToEncode = (__vartype(ptr_CryptMsgOpenToEncode))GetProcAddress(hModule, "CryptMsgOpenToEncode");
   ptr_CryptMsgSignCTL = (__vartype(ptr_CryptMsgSignCTL))GetProcAddress(hModule, "CryptMsgSignCTL");
   ptr_CryptMsgUpdate = (__vartype(ptr_CryptMsgUpdate))GetProcAddress(hModule, "CryptMsgUpdate");
   ptr_CryptMsgVerifyCountersignatureEncoded = (__vartype(ptr_CryptMsgVerifyCountersignatureEncoded))GetProcAddress(hModule, "CryptMsgVerifyCountersignatureEncoded");
   ptr_CryptMsgVerifyCountersignatureEncodedEx = (__vartype(ptr_CryptMsgVerifyCountersignatureEncodedEx))GetProcAddress(hModule, "CryptMsgVerifyCountersignatureEncodedEx");
   ptr_CryptProtectData = (__vartype(ptr_CryptProtectData))GetProcAddress(hModule, "CryptProtectData");
   ptr_CryptProtectMemory = (__vartype(ptr_CryptProtectMemory))GetProcAddress(hModule, "CryptProtectMemory");
   ptr_CryptQueryObject = (__vartype(ptr_CryptQueryObject))GetProcAddress(hModule, "CryptQueryObject");
   ptr_CryptRegisterDefaultOIDFunction = (__vartype(ptr_CryptRegisterDefaultOIDFunction))GetProcAddress(hModule, "CryptRegisterDefaultOIDFunction");
   ptr_CryptRegisterOIDFunction = (__vartype(ptr_CryptRegisterOIDFunction))GetProcAddress(hModule, "CryptRegisterOIDFunction");
   ptr_CryptRegisterOIDInfo = (__vartype(ptr_CryptRegisterOIDInfo))GetProcAddress(hModule, "CryptRegisterOIDInfo");
   ptr_CryptRetrieveTimeStamp = (__vartype(ptr_CryptRetrieveTimeStamp))GetProcAddress(hModule, "CryptRetrieveTimeStamp");
   ptr_CryptSIPAddProvider = (__vartype(ptr_CryptSIPAddProvider))GetProcAddress(hModule, "CryptSIPAddProvider");
   ptr_CryptSIPCreateIndirectData = (__vartype(ptr_CryptSIPCreateIndirectData))GetProcAddress(hModule, "CryptSIPCreateIndirectData");
   ptr_CryptSIPGetSignedDataMsg = (__vartype(ptr_CryptSIPGetSignedDataMsg))GetProcAddress(hModule, "CryptSIPGetSignedDataMsg");
   ptr_CryptSIPLoad = (__vartype(ptr_CryptSIPLoad))GetProcAddress(hModule, "CryptSIPLoad");
   ptr_CryptSIPPutSignedDataMsg = (__vartype(ptr_CryptSIPPutSignedDataMsg))GetProcAddress(hModule, "CryptSIPPutSignedDataMsg");
   ptr_CryptSIPRemoveProvider = (__vartype(ptr_CryptSIPRemoveProvider))GetProcAddress(hModule, "CryptSIPRemoveProvider");
   ptr_CryptSIPRemoveSignedDataMsg = (__vartype(ptr_CryptSIPRemoveSignedDataMsg))GetProcAddress(hModule, "CryptSIPRemoveSignedDataMsg");
   ptr_CryptSIPRetrieveSubjectGuid = (__vartype(ptr_CryptSIPRetrieveSubjectGuid))GetProcAddress(hModule, "CryptSIPRetrieveSubjectGuid");
   ptr_CryptSIPRetrieveSubjectGuidForCatalogFile = (__vartype(ptr_CryptSIPRetrieveSubjectGuidForCatalogFile))GetProcAddress(hModule, "CryptSIPRetrieveSubjectGuidForCatalogFile");
   ptr_CryptSIPVerifyIndirectData = (__vartype(ptr_CryptSIPVerifyIndirectData))GetProcAddress(hModule, "CryptSIPVerifyIndirectData");
   ptr_CryptSetAsyncParam = (__vartype(ptr_CryptSetAsyncParam))GetProcAddress(hModule, "CryptSetAsyncParam");
   ptr_CryptSetKeyIdentifierProperty = (__vartype(ptr_CryptSetKeyIdentifierProperty))GetProcAddress(hModule, "CryptSetKeyIdentifierProperty");
   ptr_CryptSetOIDFunctionValue = (__vartype(ptr_CryptSetOIDFunctionValue))GetProcAddress(hModule, "CryptSetOIDFunctionValue");
   ptr_CryptSignAndEncodeCertificate = (__vartype(ptr_CryptSignAndEncodeCertificate))GetProcAddress(hModule, "CryptSignAndEncodeCertificate");
   ptr_CryptSignAndEncryptMessage = (__vartype(ptr_CryptSignAndEncryptMessage))GetProcAddress(hModule, "CryptSignAndEncryptMessage");
   ptr_CryptSignCertificate = (__vartype(ptr_CryptSignCertificate))GetProcAddress(hModule, "CryptSignCertificate");
   ptr_CryptSignMessage = (__vartype(ptr_CryptSignMessage))GetProcAddress(hModule, "CryptSignMessage");
   ptr_CryptSignMessageWithKey = (__vartype(ptr_CryptSignMessageWithKey))GetProcAddress(hModule, "CryptSignMessageWithKey");
   ptr_CryptStringToBinaryA = (__vartype(ptr_CryptStringToBinaryA))GetProcAddress(hModule, "CryptStringToBinaryA");
   ptr_CryptStringToBinaryW = (__vartype(ptr_CryptStringToBinaryW))GetProcAddress(hModule, "CryptStringToBinaryW");
   ptr_CryptUninstallDefaultContext = (__vartype(ptr_CryptUninstallDefaultContext))GetProcAddress(hModule, "CryptUninstallDefaultContext");
   ptr_CryptUnprotectData = (__vartype(ptr_CryptUnprotectData))GetProcAddress(hModule, "CryptUnprotectData");
   ptr_CryptUnprotectMemory = (__vartype(ptr_CryptUnprotectMemory))GetProcAddress(hModule, "CryptUnprotectMemory");
   ptr_CryptUnregisterDefaultOIDFunction = (__vartype(ptr_CryptUnregisterDefaultOIDFunction))GetProcAddress(hModule, "CryptUnregisterDefaultOIDFunction");
   ptr_CryptUnregisterOIDFunction = (__vartype(ptr_CryptUnregisterOIDFunction))GetProcAddress(hModule, "CryptUnregisterOIDFunction");
   ptr_CryptUnregisterOIDInfo = (__vartype(ptr_CryptUnregisterOIDInfo))GetProcAddress(hModule, "CryptUnregisterOIDInfo");
   ptr_CryptUpdateProtectedState = (__vartype(ptr_CryptUpdateProtectedState))GetProcAddress(hModule, "CryptUpdateProtectedState");
   ptr_CryptVerifyCertificateSignature = (__vartype(ptr_CryptVerifyCertificateSignature))GetProcAddress(hModule, "CryptVerifyCertificateSignature");
   ptr_CryptVerifyCertificateSignatureEx = (__vartype(ptr_CryptVerifyCertificateSignatureEx))GetProcAddress(hModule, "CryptVerifyCertificateSignatureEx");
   ptr_CryptVerifyDetachedMessageHash = (__vartype(ptr_CryptVerifyDetachedMessageHash))GetProcAddress(hModule, "CryptVerifyDetachedMessageHash");
   ptr_CryptVerifyDetachedMessageSignature = (__vartype(ptr_CryptVerifyDetachedMessageSignature))GetProcAddress(hModule, "CryptVerifyDetachedMessageSignature");
   ptr_CryptVerifyMessageHash = (__vartype(ptr_CryptVerifyMessageHash))GetProcAddress(hModule, "CryptVerifyMessageHash");
   ptr_CryptVerifyMessageSignature = (__vartype(ptr_CryptVerifyMessageSignature))GetProcAddress(hModule, "CryptVerifyMessageSignature");
   ptr_CryptVerifyMessageSignatureWithKey = (__vartype(ptr_CryptVerifyMessageSignatureWithKey))GetProcAddress(hModule, "CryptVerifyMessageSignatureWithKey");
   ptr_CryptVerifyTimeStampSignature = (__vartype(ptr_CryptVerifyTimeStampSignature))GetProcAddress(hModule, "CryptVerifyTimeStampSignature");
   ptr_I_CertDiagControl = (__vartype(ptr_I_CertDiagControl))GetProcAddress(hModule, "I_CertDiagControl");
   ptr_I_CertProtectFunction = (__vartype(ptr_I_CertProtectFunction))GetProcAddress(hModule, "I_CertProtectFunction");
   ptr_I_CertSrvProtectFunction = (__vartype(ptr_I_CertSrvProtectFunction))GetProcAddress(hModule, "I_CertSrvProtectFunction");
   ptr_I_CertSyncStore = (__vartype(ptr_I_CertSyncStore))GetProcAddress(hModule, "I_CertSyncStore");
   ptr_I_CertUpdateStore = (__vartype(ptr_I_CertUpdateStore))GetProcAddress(hModule, "I_CertUpdateStore");
   ptr_I_CryptAddRefLruEntry = (__vartype(ptr_I_CryptAddRefLruEntry))GetProcAddress(hModule, "I_CryptAddRefLruEntry");
   ptr_I_CryptAddSmartCardCertToStore = (__vartype(ptr_I_CryptAddSmartCardCertToStore))GetProcAddress(hModule, "I_CryptAddSmartCardCertToStore");
   ptr_I_CryptAllocTls = (__vartype(ptr_I_CryptAllocTls))GetProcAddress(hModule, "I_CryptAllocTls");
   ptr_I_CryptCreateLruCache = (__vartype(ptr_I_CryptCreateLruCache))GetProcAddress(hModule, "I_CryptCreateLruCache");
   ptr_I_CryptCreateLruEntry = (__vartype(ptr_I_CryptCreateLruEntry))GetProcAddress(hModule, "I_CryptCreateLruEntry");
   ptr_I_CryptDetachTls = (__vartype(ptr_I_CryptDetachTls))GetProcAddress(hModule, "I_CryptDetachTls");
   ptr_I_CryptDisableLruOfEntries = (__vartype(ptr_I_CryptDisableLruOfEntries))GetProcAddress(hModule, "I_CryptDisableLruOfEntries");
   ptr_I_CryptEnableLruOfEntries = (__vartype(ptr_I_CryptEnableLruOfEntries))GetProcAddress(hModule, "I_CryptEnableLruOfEntries");
   ptr_I_CryptEnumMatchingLruEntries = (__vartype(ptr_I_CryptEnumMatchingLruEntries))GetProcAddress(hModule, "I_CryptEnumMatchingLruEntries");
   ptr_I_CryptFindLruEntry = (__vartype(ptr_I_CryptFindLruEntry))GetProcAddress(hModule, "I_CryptFindLruEntry");
   ptr_I_CryptFindLruEntryData = (__vartype(ptr_I_CryptFindLruEntryData))GetProcAddress(hModule, "I_CryptFindLruEntryData");
   ptr_I_CryptFindSmartCardCertInStore = (__vartype(ptr_I_CryptFindSmartCardCertInStore))GetProcAddress(hModule, "I_CryptFindSmartCardCertInStore");
   ptr_I_CryptFlushLruCache = (__vartype(ptr_I_CryptFlushLruCache))GetProcAddress(hModule, "I_CryptFlushLruCache");
   ptr_I_CryptFreeLruCache = (__vartype(ptr_I_CryptFreeLruCache))GetProcAddress(hModule, "I_CryptFreeLruCache");
   ptr_I_CryptFreeTls = (__vartype(ptr_I_CryptFreeTls))GetProcAddress(hModule, "I_CryptFreeTls");
   ptr_I_CryptGetAsn1Decoder = (__vartype(ptr_I_CryptGetAsn1Decoder))GetProcAddress(hModule, "I_CryptGetAsn1Decoder");
   ptr_I_CryptGetAsn1Encoder = (__vartype(ptr_I_CryptGetAsn1Encoder))GetProcAddress(hModule, "I_CryptGetAsn1Encoder");
   ptr_I_CryptGetDefaultCryptProv = (__vartype(ptr_I_CryptGetDefaultCryptProv))GetProcAddress(hModule, "I_CryptGetDefaultCryptProv");
   ptr_I_CryptGetDefaultCryptProvForEncrypt = (__vartype(ptr_I_CryptGetDefaultCryptProvForEncrypt))GetProcAddress(hModule, "I_CryptGetDefaultCryptProvForEncrypt");
   ptr_I_CryptGetFileVersion = (__vartype(ptr_I_CryptGetFileVersion))GetProcAddress(hModule, "I_CryptGetFileVersion");
   ptr_I_CryptGetLruEntryData = (__vartype(ptr_I_CryptGetLruEntryData))GetProcAddress(hModule, "I_CryptGetLruEntryData");
   ptr_I_CryptGetLruEntryIdentifier = (__vartype(ptr_I_CryptGetLruEntryIdentifier))GetProcAddress(hModule, "I_CryptGetLruEntryIdentifier");
   ptr_I_CryptGetOssGlobal = (__vartype(ptr_I_CryptGetOssGlobal))GetProcAddress(hModule, "I_CryptGetOssGlobal");
   ptr_I_CryptGetTls = (__vartype(ptr_I_CryptGetTls))GetProcAddress(hModule, "I_CryptGetTls");
   ptr_I_CryptInsertLruEntry = (__vartype(ptr_I_CryptInsertLruEntry))GetProcAddress(hModule, "I_CryptInsertLruEntry");
   ptr_I_CryptInstallAsn1Module = (__vartype(ptr_I_CryptInstallAsn1Module))GetProcAddress(hModule, "I_CryptInstallAsn1Module");
   ptr_I_CryptInstallOssGlobal = (__vartype(ptr_I_CryptInstallOssGlobal))GetProcAddress(hModule, "I_CryptInstallOssGlobal");
   ptr_I_CryptReadTrustedPublisherDWORDValueFromRegistry = (__vartype(ptr_I_CryptReadTrustedPublisherDWORDValueFromRegistry))GetProcAddress(hModule, "I_CryptReadTrustedPublisherDWORDValueFromRegistry");
   ptr_I_CryptRegisterSmartCardStore = (__vartype(ptr_I_CryptRegisterSmartCardStore))GetProcAddress(hModule, "I_CryptRegisterSmartCardStore");
   ptr_I_CryptReleaseLruEntry = (__vartype(ptr_I_CryptReleaseLruEntry))GetProcAddress(hModule, "I_CryptReleaseLruEntry");
   ptr_I_CryptRemoveLruEntry = (__vartype(ptr_I_CryptRemoveLruEntry))GetProcAddress(hModule, "I_CryptRemoveLruEntry");
   ptr_I_CryptSetTls = (__vartype(ptr_I_CryptSetTls))GetProcAddress(hModule, "I_CryptSetTls");
   ptr_I_CryptTouchLruEntry = (__vartype(ptr_I_CryptTouchLruEntry))GetProcAddress(hModule, "I_CryptTouchLruEntry");
   ptr_I_CryptUninstallAsn1Module = (__vartype(ptr_I_CryptUninstallAsn1Module))GetProcAddress(hModule, "I_CryptUninstallAsn1Module");
   ptr_I_CryptUninstallOssGlobal = (__vartype(ptr_I_CryptUninstallOssGlobal))GetProcAddress(hModule, "I_CryptUninstallOssGlobal");
   ptr_I_CryptUnregisterSmartCardStore = (__vartype(ptr_I_CryptUnregisterSmartCardStore))GetProcAddress(hModule, "I_CryptUnregisterSmartCardStore");
   ptr_I_CryptWalkAllLruCacheEntries = (__vartype(ptr_I_CryptWalkAllLruCacheEntries))GetProcAddress(hModule, "I_CryptWalkAllLruCacheEntries");
   ptr_PFXExportCertStore = (__vartype(ptr_PFXExportCertStore))GetProcAddress(hModule, "PFXExportCertStore");
   ptr_PFXExportCertStore2 = (__vartype(ptr_PFXExportCertStore2))GetProcAddress(hModule, "PFXExportCertStore2");
   ptr_PFXExportCertStoreEx = (__vartype(ptr_PFXExportCertStoreEx))GetProcAddress(hModule, "PFXExportCertStoreEx");
   ptr_PFXImportCertStore = (__vartype(ptr_PFXImportCertStore))GetProcAddress(hModule, "PFXImportCertStore");
   ptr_PFXIsPFXBlob = (__vartype(ptr_PFXIsPFXBlob))GetProcAddress(hModule, "PFXIsPFXBlob");
   ptr_PFXVerifyPassword = (__vartype(ptr_PFXVerifyPassword))GetProcAddress(hModule, "PFXVerifyPassword");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

