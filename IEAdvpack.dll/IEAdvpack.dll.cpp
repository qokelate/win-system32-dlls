#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr_AddDelBackupEntry;
void *ptr_AddDelBackupEntry = NULL;
extern void *ptr_AddDelBackupEntryA;
void *ptr_AddDelBackupEntryA = NULL;
extern void *ptr_AddDelBackupEntryW;
void *ptr_AddDelBackupEntryW = NULL;
extern void *ptr_AdvInstallFile;
void *ptr_AdvInstallFile = NULL;
extern void *ptr_AdvInstallFileA;
void *ptr_AdvInstallFileA = NULL;
extern void *ptr_AdvInstallFileW;
void *ptr_AdvInstallFileW = NULL;
extern void *ptr_CloseINFEngine;
void *ptr_CloseINFEngine = NULL;
extern void *ptr_DelNode;
void *ptr_DelNode = NULL;
extern void *ptr_DelNodeA;
void *ptr_DelNodeA = NULL;
extern void *ptr_DelNodeRunDLL32;
void *ptr_DelNodeRunDLL32 = NULL;
extern void *ptr_DelNodeRunDLL32A;
void *ptr_DelNodeRunDLL32A = NULL;
extern void *ptr_DelNodeRunDLL32W;
void *ptr_DelNodeRunDLL32W = NULL;
extern void *ptr_DelNodeW;
void *ptr_DelNodeW = NULL;
extern void *ptr_DoInfInstall;
void *ptr_DoInfInstall = NULL;
extern void *ptr_DoInfInstallA;
void *ptr_DoInfInstallA = NULL;
extern void *ptr_DoInfInstallW;
void *ptr_DoInfInstallW = NULL;
extern void *ptr_ExecuteCab;
void *ptr_ExecuteCab = NULL;
extern void *ptr_ExecuteCabA;
void *ptr_ExecuteCabA = NULL;
extern void *ptr_ExecuteCabW;
void *ptr_ExecuteCabW = NULL;
extern void *ptr_ExtractFiles;
void *ptr_ExtractFiles = NULL;
extern void *ptr_ExtractFilesA;
void *ptr_ExtractFilesA = NULL;
extern void *ptr_ExtractFilesW;
void *ptr_ExtractFilesW = NULL;
extern void *ptr_FileSaveMarkNotExist;
void *ptr_FileSaveMarkNotExist = NULL;
extern void *ptr_FileSaveMarkNotExistA;
void *ptr_FileSaveMarkNotExistA = NULL;
extern void *ptr_FileSaveMarkNotExistW;
void *ptr_FileSaveMarkNotExistW = NULL;
extern void *ptr_FileSaveRestore;
void *ptr_FileSaveRestore = NULL;
extern void *ptr_FileSaveRestoreA;
void *ptr_FileSaveRestoreA = NULL;
extern void *ptr_FileSaveRestoreOnINF;
void *ptr_FileSaveRestoreOnINF = NULL;
extern void *ptr_FileSaveRestoreOnINFA;
void *ptr_FileSaveRestoreOnINFA = NULL;
extern void *ptr_FileSaveRestoreOnINFW;
void *ptr_FileSaveRestoreOnINFW = NULL;
extern void *ptr_FileSaveRestoreW;
void *ptr_FileSaveRestoreW = NULL;
extern void *ptr_GetVersionFromFile;
void *ptr_GetVersionFromFile = NULL;
extern void *ptr_GetVersionFromFileA;
void *ptr_GetVersionFromFileA = NULL;
extern void *ptr_GetVersionFromFileEx;
void *ptr_GetVersionFromFileEx = NULL;
extern void *ptr_GetVersionFromFileExA;
void *ptr_GetVersionFromFileExA = NULL;
extern void *ptr_GetVersionFromFileExW;
void *ptr_GetVersionFromFileExW = NULL;
extern void *ptr_GetVersionFromFileW;
void *ptr_GetVersionFromFileW = NULL;
extern void *ptr_IsNTAdmin;
void *ptr_IsNTAdmin = NULL;
extern void *ptr_LaunchINFSection;
void *ptr_LaunchINFSection = NULL;
extern void *ptr_LaunchINFSectionA;
void *ptr_LaunchINFSectionA = NULL;
extern void *ptr_LaunchINFSectionEx;
void *ptr_LaunchINFSectionEx = NULL;
extern void *ptr_LaunchINFSectionExA;
void *ptr_LaunchINFSectionExA = NULL;
extern void *ptr_LaunchINFSectionExW;
void *ptr_LaunchINFSectionExW = NULL;
extern void *ptr_LaunchINFSectionW;
void *ptr_LaunchINFSectionW = NULL;
extern void *ptr_NeedReboot;
void *ptr_NeedReboot = NULL;
extern void *ptr_NeedRebootInit;
void *ptr_NeedRebootInit = NULL;
extern void *ptr_OpenINFEngine;
void *ptr_OpenINFEngine = NULL;
extern void *ptr_OpenINFEngineA;
void *ptr_OpenINFEngineA = NULL;
extern void *ptr_OpenINFEngineW;
void *ptr_OpenINFEngineW = NULL;
extern void *ptr_RebootCheckOnInstall;
void *ptr_RebootCheckOnInstall = NULL;
extern void *ptr_RebootCheckOnInstallA;
void *ptr_RebootCheckOnInstallA = NULL;
extern void *ptr_RebootCheckOnInstallW;
void *ptr_RebootCheckOnInstallW = NULL;
extern void *ptr_RegInstall;
void *ptr_RegInstall = NULL;
extern void *ptr_RegInstallA;
void *ptr_RegInstallA = NULL;
extern void *ptr_RegInstallW;
void *ptr_RegInstallW = NULL;
extern void *ptr_RegRestoreAll;
void *ptr_RegRestoreAll = NULL;
extern void *ptr_RegRestoreAllA;
void *ptr_RegRestoreAllA = NULL;
extern void *ptr_RegRestoreAllW;
void *ptr_RegRestoreAllW = NULL;
extern void *ptr_RegSaveRestore;
void *ptr_RegSaveRestore = NULL;
extern void *ptr_RegSaveRestoreA;
void *ptr_RegSaveRestoreA = NULL;
extern void *ptr_RegSaveRestoreOnINF;
void *ptr_RegSaveRestoreOnINF = NULL;
extern void *ptr_RegSaveRestoreOnINFA;
void *ptr_RegSaveRestoreOnINFA = NULL;
extern void *ptr_RegSaveRestoreOnINFW;
void *ptr_RegSaveRestoreOnINFW = NULL;
extern void *ptr_RegSaveRestoreW;
void *ptr_RegSaveRestoreW = NULL;
extern void *ptr_RegisterOCX;
void *ptr_RegisterOCX = NULL;
extern void *ptr_RegisterOCXW;
void *ptr_RegisterOCXW = NULL;
extern void *ptr_RunSetupCommand;
void *ptr_RunSetupCommand = NULL;
extern void *ptr_RunSetupCommandA;
void *ptr_RunSetupCommandA = NULL;
extern void *ptr_RunSetupCommandW;
void *ptr_RunSetupCommandW = NULL;
extern void *ptr_SetPerUserSecValues;
void *ptr_SetPerUserSecValues = NULL;
extern void *ptr_SetPerUserSecValuesA;
void *ptr_SetPerUserSecValuesA = NULL;
extern void *ptr_SetPerUserSecValuesW;
void *ptr_SetPerUserSecValuesW = NULL;
extern void *ptr_TranslateInfString;
void *ptr_TranslateInfString = NULL;
extern void *ptr_TranslateInfStringA;
void *ptr_TranslateInfStringA = NULL;
extern void *ptr_TranslateInfStringEx;
void *ptr_TranslateInfStringEx = NULL;
extern void *ptr_TranslateInfStringExA;
void *ptr_TranslateInfStringExA = NULL;
extern void *ptr_TranslateInfStringExW;
void *ptr_TranslateInfStringExW = NULL;
extern void *ptr_TranslateInfStringW;
void *ptr_TranslateInfStringW = NULL;
extern void *ptr_UserInstStubWrapper;
void *ptr_UserInstStubWrapper = NULL;
extern void *ptr_UserInstStubWrapperA;
void *ptr_UserInstStubWrapperA = NULL;
extern void *ptr_UserInstStubWrapperW;
void *ptr_UserInstStubWrapperW = NULL;
extern void *ptr_UserUnInstStubWrapper;
void *ptr_UserUnInstStubWrapper = NULL;
extern void *ptr_UserUnInstStubWrapperA;
void *ptr_UserUnInstStubWrapperA = NULL;
extern void *ptr_UserUnInstStubWrapperW;
void *ptr_UserUnInstStubWrapperW = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\IEAdvpack.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr_AddDelBackupEntry = (__vartype(ptr_AddDelBackupEntry))GetProcAddress(hModule, "AddDelBackupEntry");
   ptr_AddDelBackupEntryA = (__vartype(ptr_AddDelBackupEntryA))GetProcAddress(hModule, "AddDelBackupEntryA");
   ptr_AddDelBackupEntryW = (__vartype(ptr_AddDelBackupEntryW))GetProcAddress(hModule, "AddDelBackupEntryW");
   ptr_AdvInstallFile = (__vartype(ptr_AdvInstallFile))GetProcAddress(hModule, "AdvInstallFile");
   ptr_AdvInstallFileA = (__vartype(ptr_AdvInstallFileA))GetProcAddress(hModule, "AdvInstallFileA");
   ptr_AdvInstallFileW = (__vartype(ptr_AdvInstallFileW))GetProcAddress(hModule, "AdvInstallFileW");
   ptr_CloseINFEngine = (__vartype(ptr_CloseINFEngine))GetProcAddress(hModule, "CloseINFEngine");
   ptr_DelNode = (__vartype(ptr_DelNode))GetProcAddress(hModule, "DelNode");
   ptr_DelNodeA = (__vartype(ptr_DelNodeA))GetProcAddress(hModule, "DelNodeA");
   ptr_DelNodeRunDLL32 = (__vartype(ptr_DelNodeRunDLL32))GetProcAddress(hModule, "DelNodeRunDLL32");
   ptr_DelNodeRunDLL32A = (__vartype(ptr_DelNodeRunDLL32A))GetProcAddress(hModule, "DelNodeRunDLL32A");
   ptr_DelNodeRunDLL32W = (__vartype(ptr_DelNodeRunDLL32W))GetProcAddress(hModule, "DelNodeRunDLL32W");
   ptr_DelNodeW = (__vartype(ptr_DelNodeW))GetProcAddress(hModule, "DelNodeW");
   ptr_DoInfInstall = (__vartype(ptr_DoInfInstall))GetProcAddress(hModule, "DoInfInstall");
   ptr_DoInfInstallA = (__vartype(ptr_DoInfInstallA))GetProcAddress(hModule, "DoInfInstallA");
   ptr_DoInfInstallW = (__vartype(ptr_DoInfInstallW))GetProcAddress(hModule, "DoInfInstallW");
   ptr_ExecuteCab = (__vartype(ptr_ExecuteCab))GetProcAddress(hModule, "ExecuteCab");
   ptr_ExecuteCabA = (__vartype(ptr_ExecuteCabA))GetProcAddress(hModule, "ExecuteCabA");
   ptr_ExecuteCabW = (__vartype(ptr_ExecuteCabW))GetProcAddress(hModule, "ExecuteCabW");
   ptr_ExtractFiles = (__vartype(ptr_ExtractFiles))GetProcAddress(hModule, "ExtractFiles");
   ptr_ExtractFilesA = (__vartype(ptr_ExtractFilesA))GetProcAddress(hModule, "ExtractFilesA");
   ptr_ExtractFilesW = (__vartype(ptr_ExtractFilesW))GetProcAddress(hModule, "ExtractFilesW");
   ptr_FileSaveMarkNotExist = (__vartype(ptr_FileSaveMarkNotExist))GetProcAddress(hModule, "FileSaveMarkNotExist");
   ptr_FileSaveMarkNotExistA = (__vartype(ptr_FileSaveMarkNotExistA))GetProcAddress(hModule, "FileSaveMarkNotExistA");
   ptr_FileSaveMarkNotExistW = (__vartype(ptr_FileSaveMarkNotExistW))GetProcAddress(hModule, "FileSaveMarkNotExistW");
   ptr_FileSaveRestore = (__vartype(ptr_FileSaveRestore))GetProcAddress(hModule, "FileSaveRestore");
   ptr_FileSaveRestoreA = (__vartype(ptr_FileSaveRestoreA))GetProcAddress(hModule, "FileSaveRestoreA");
   ptr_FileSaveRestoreOnINF = (__vartype(ptr_FileSaveRestoreOnINF))GetProcAddress(hModule, "FileSaveRestoreOnINF");
   ptr_FileSaveRestoreOnINFA = (__vartype(ptr_FileSaveRestoreOnINFA))GetProcAddress(hModule, "FileSaveRestoreOnINFA");
   ptr_FileSaveRestoreOnINFW = (__vartype(ptr_FileSaveRestoreOnINFW))GetProcAddress(hModule, "FileSaveRestoreOnINFW");
   ptr_FileSaveRestoreW = (__vartype(ptr_FileSaveRestoreW))GetProcAddress(hModule, "FileSaveRestoreW");
   ptr_GetVersionFromFile = (__vartype(ptr_GetVersionFromFile))GetProcAddress(hModule, "GetVersionFromFile");
   ptr_GetVersionFromFileA = (__vartype(ptr_GetVersionFromFileA))GetProcAddress(hModule, "GetVersionFromFileA");
   ptr_GetVersionFromFileEx = (__vartype(ptr_GetVersionFromFileEx))GetProcAddress(hModule, "GetVersionFromFileEx");
   ptr_GetVersionFromFileExA = (__vartype(ptr_GetVersionFromFileExA))GetProcAddress(hModule, "GetVersionFromFileExA");
   ptr_GetVersionFromFileExW = (__vartype(ptr_GetVersionFromFileExW))GetProcAddress(hModule, "GetVersionFromFileExW");
   ptr_GetVersionFromFileW = (__vartype(ptr_GetVersionFromFileW))GetProcAddress(hModule, "GetVersionFromFileW");
   ptr_IsNTAdmin = (__vartype(ptr_IsNTAdmin))GetProcAddress(hModule, "IsNTAdmin");
   ptr_LaunchINFSection = (__vartype(ptr_LaunchINFSection))GetProcAddress(hModule, "LaunchINFSection");
   ptr_LaunchINFSectionA = (__vartype(ptr_LaunchINFSectionA))GetProcAddress(hModule, "LaunchINFSectionA");
   ptr_LaunchINFSectionEx = (__vartype(ptr_LaunchINFSectionEx))GetProcAddress(hModule, "LaunchINFSectionEx");
   ptr_LaunchINFSectionExA = (__vartype(ptr_LaunchINFSectionExA))GetProcAddress(hModule, "LaunchINFSectionExA");
   ptr_LaunchINFSectionExW = (__vartype(ptr_LaunchINFSectionExW))GetProcAddress(hModule, "LaunchINFSectionExW");
   ptr_LaunchINFSectionW = (__vartype(ptr_LaunchINFSectionW))GetProcAddress(hModule, "LaunchINFSectionW");
   ptr_NeedReboot = (__vartype(ptr_NeedReboot))GetProcAddress(hModule, "NeedReboot");
   ptr_NeedRebootInit = (__vartype(ptr_NeedRebootInit))GetProcAddress(hModule, "NeedRebootInit");
   ptr_OpenINFEngine = (__vartype(ptr_OpenINFEngine))GetProcAddress(hModule, "OpenINFEngine");
   ptr_OpenINFEngineA = (__vartype(ptr_OpenINFEngineA))GetProcAddress(hModule, "OpenINFEngineA");
   ptr_OpenINFEngineW = (__vartype(ptr_OpenINFEngineW))GetProcAddress(hModule, "OpenINFEngineW");
   ptr_RebootCheckOnInstall = (__vartype(ptr_RebootCheckOnInstall))GetProcAddress(hModule, "RebootCheckOnInstall");
   ptr_RebootCheckOnInstallA = (__vartype(ptr_RebootCheckOnInstallA))GetProcAddress(hModule, "RebootCheckOnInstallA");
   ptr_RebootCheckOnInstallW = (__vartype(ptr_RebootCheckOnInstallW))GetProcAddress(hModule, "RebootCheckOnInstallW");
   ptr_RegInstall = (__vartype(ptr_RegInstall))GetProcAddress(hModule, "RegInstall");
   ptr_RegInstallA = (__vartype(ptr_RegInstallA))GetProcAddress(hModule, "RegInstallA");
   ptr_RegInstallW = (__vartype(ptr_RegInstallW))GetProcAddress(hModule, "RegInstallW");
   ptr_RegRestoreAll = (__vartype(ptr_RegRestoreAll))GetProcAddress(hModule, "RegRestoreAll");
   ptr_RegRestoreAllA = (__vartype(ptr_RegRestoreAllA))GetProcAddress(hModule, "RegRestoreAllA");
   ptr_RegRestoreAllW = (__vartype(ptr_RegRestoreAllW))GetProcAddress(hModule, "RegRestoreAllW");
   ptr_RegSaveRestore = (__vartype(ptr_RegSaveRestore))GetProcAddress(hModule, "RegSaveRestore");
   ptr_RegSaveRestoreA = (__vartype(ptr_RegSaveRestoreA))GetProcAddress(hModule, "RegSaveRestoreA");
   ptr_RegSaveRestoreOnINF = (__vartype(ptr_RegSaveRestoreOnINF))GetProcAddress(hModule, "RegSaveRestoreOnINF");
   ptr_RegSaveRestoreOnINFA = (__vartype(ptr_RegSaveRestoreOnINFA))GetProcAddress(hModule, "RegSaveRestoreOnINFA");
   ptr_RegSaveRestoreOnINFW = (__vartype(ptr_RegSaveRestoreOnINFW))GetProcAddress(hModule, "RegSaveRestoreOnINFW");
   ptr_RegSaveRestoreW = (__vartype(ptr_RegSaveRestoreW))GetProcAddress(hModule, "RegSaveRestoreW");
   ptr_RegisterOCX = (__vartype(ptr_RegisterOCX))GetProcAddress(hModule, "RegisterOCX");
   ptr_RegisterOCXW = (__vartype(ptr_RegisterOCXW))GetProcAddress(hModule, "RegisterOCXW");
   ptr_RunSetupCommand = (__vartype(ptr_RunSetupCommand))GetProcAddress(hModule, "RunSetupCommand");
   ptr_RunSetupCommandA = (__vartype(ptr_RunSetupCommandA))GetProcAddress(hModule, "RunSetupCommandA");
   ptr_RunSetupCommandW = (__vartype(ptr_RunSetupCommandW))GetProcAddress(hModule, "RunSetupCommandW");
   ptr_SetPerUserSecValues = (__vartype(ptr_SetPerUserSecValues))GetProcAddress(hModule, "SetPerUserSecValues");
   ptr_SetPerUserSecValuesA = (__vartype(ptr_SetPerUserSecValuesA))GetProcAddress(hModule, "SetPerUserSecValuesA");
   ptr_SetPerUserSecValuesW = (__vartype(ptr_SetPerUserSecValuesW))GetProcAddress(hModule, "SetPerUserSecValuesW");
   ptr_TranslateInfString = (__vartype(ptr_TranslateInfString))GetProcAddress(hModule, "TranslateInfString");
   ptr_TranslateInfStringA = (__vartype(ptr_TranslateInfStringA))GetProcAddress(hModule, "TranslateInfStringA");
   ptr_TranslateInfStringEx = (__vartype(ptr_TranslateInfStringEx))GetProcAddress(hModule, "TranslateInfStringEx");
   ptr_TranslateInfStringExA = (__vartype(ptr_TranslateInfStringExA))GetProcAddress(hModule, "TranslateInfStringExA");
   ptr_TranslateInfStringExW = (__vartype(ptr_TranslateInfStringExW))GetProcAddress(hModule, "TranslateInfStringExW");
   ptr_TranslateInfStringW = (__vartype(ptr_TranslateInfStringW))GetProcAddress(hModule, "TranslateInfStringW");
   ptr_UserInstStubWrapper = (__vartype(ptr_UserInstStubWrapper))GetProcAddress(hModule, "UserInstStubWrapper");
   ptr_UserInstStubWrapperA = (__vartype(ptr_UserInstStubWrapperA))GetProcAddress(hModule, "UserInstStubWrapperA");
   ptr_UserInstStubWrapperW = (__vartype(ptr_UserInstStubWrapperW))GetProcAddress(hModule, "UserInstStubWrapperW");
   ptr_UserUnInstStubWrapper = (__vartype(ptr_UserUnInstStubWrapper))GetProcAddress(hModule, "UserUnInstStubWrapper");
   ptr_UserUnInstStubWrapperA = (__vartype(ptr_UserUnInstStubWrapperA))GetProcAddress(hModule, "UserUnInstStubWrapperA");
   ptr_UserUnInstStubWrapperW = (__vartype(ptr_UserUnInstStubWrapperW))GetProcAddress(hModule, "UserUnInstStubWrapperW");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

