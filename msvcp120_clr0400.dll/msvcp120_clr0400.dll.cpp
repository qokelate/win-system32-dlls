#include <windows.h>
#include <shlwapi.h>

extern "C" {
extern void *ptr__Call_once;
void *ptr__Call_once = NULL;
extern void *ptr__Call_onceEx;
void *ptr__Call_onceEx = NULL;
extern void *ptr__Cnd_broadcast;
void *ptr__Cnd_broadcast = NULL;
extern void *ptr__Cnd_destroy;
void *ptr__Cnd_destroy = NULL;
extern void *ptr__Cnd_do_broadcast_at_thread_exit;
void *ptr__Cnd_do_broadcast_at_thread_exit = NULL;
extern void *ptr__Cnd_init;
void *ptr__Cnd_init = NULL;
extern void *ptr__Cnd_register_at_thread_exit;
void *ptr__Cnd_register_at_thread_exit = NULL;
extern void *ptr__Cnd_signal;
void *ptr__Cnd_signal = NULL;
extern void *ptr__Cnd_timedwait;
void *ptr__Cnd_timedwait = NULL;
extern void *ptr__Cnd_unregister_at_thread_exit;
void *ptr__Cnd_unregister_at_thread_exit = NULL;
extern void *ptr__Cnd_wait;
void *ptr__Cnd_wait = NULL;
extern void *ptr__Cosh;
void *ptr__Cosh = NULL;
extern void *ptr__Denorm;
void *ptr__Denorm = NULL;
extern void *ptr__Dint;
void *ptr__Dint = NULL;
extern void *ptr__Dnorm;
void *ptr__Dnorm = NULL;
extern void *ptr__Do_call;
void *ptr__Do_call = NULL;
extern void *ptr__Dscale;
void *ptr__Dscale = NULL;
extern void *ptr__Dtento;
void *ptr__Dtento = NULL;
extern void *ptr__Dtest;
void *ptr__Dtest = NULL;
extern void *ptr__Dunscale;
void *ptr__Dunscale = NULL;
extern void *ptr__Eps;
void *ptr__Eps = NULL;
extern void *ptr__Exp;
void *ptr__Exp = NULL;
extern void *ptr__FCosh;
void *ptr__FCosh = NULL;
extern void *ptr__FDenorm;
void *ptr__FDenorm = NULL;
extern void *ptr__FDint;
void *ptr__FDint = NULL;
extern void *ptr__FDnorm;
void *ptr__FDnorm = NULL;
extern void *ptr__FDscale;
void *ptr__FDscale = NULL;
extern void *ptr__FDtento;
void *ptr__FDtento = NULL;
extern void *ptr__FDtest;
void *ptr__FDtest = NULL;
extern void *ptr__FDunscale;
void *ptr__FDunscale = NULL;
extern void *ptr__FEps;
void *ptr__FEps = NULL;
extern void *ptr__FExp;
void *ptr__FExp = NULL;
extern void *ptr__FInf;
void *ptr__FInf = NULL;
extern void *ptr__FNan;
void *ptr__FNan = NULL;
extern void *ptr__FPlsw;
void *ptr__FPlsw = NULL;
extern void *ptr__FPmsw;
void *ptr__FPmsw = NULL;
extern void *ptr__FRteps;
void *ptr__FRteps = NULL;
extern void *ptr__FSinh;
void *ptr__FSinh = NULL;
extern void *ptr__FSnan;
void *ptr__FSnan = NULL;
extern void *ptr__FXbig;
void *ptr__FXbig = NULL;
extern void *ptr__FXp_addh;
void *ptr__FXp_addh = NULL;
extern void *ptr__FXp_addx;
void *ptr__FXp_addx = NULL;
extern void *ptr__FXp_getw;
void *ptr__FXp_getw = NULL;
extern void *ptr__FXp_invx;
void *ptr__FXp_invx = NULL;
extern void *ptr__FXp_ldexpx;
void *ptr__FXp_ldexpx = NULL;
extern void *ptr__FXp_movx;
void *ptr__FXp_movx = NULL;
extern void *ptr__FXp_mulh;
void *ptr__FXp_mulh = NULL;
extern void *ptr__FXp_mulx;
void *ptr__FXp_mulx = NULL;
extern void *ptr__FXp_setn;
void *ptr__FXp_setn = NULL;
extern void *ptr__FXp_setw;
void *ptr__FXp_setw = NULL;
extern void *ptr__FXp_sqrtx;
void *ptr__FXp_sqrtx = NULL;
extern void *ptr__FXp_subx;
void *ptr__FXp_subx = NULL;
extern void *ptr__FZero;
void *ptr__FZero = NULL;
extern void *ptr__Getcoll;
void *ptr__Getcoll = NULL;
extern void *ptr__Getctype;
void *ptr__Getctype = NULL;
extern void *ptr__Getcvt;
void *ptr__Getcvt = NULL;
extern void *ptr__Getdateorder;
void *ptr__Getdateorder = NULL;
extern void *ptr__Getwctype;
void *ptr__Getwctype = NULL;
extern void *ptr__Getwctypes;
void *ptr__Getwctypes = NULL;
extern void *ptr__Hugeval;
void *ptr__Hugeval = NULL;
extern void *ptr__Inf;
void *ptr__Inf = NULL;
extern void *ptr__LCosh;
void *ptr__LCosh = NULL;
extern void *ptr__LDenorm;
void *ptr__LDenorm = NULL;
extern void *ptr__LDint;
void *ptr__LDint = NULL;
extern void *ptr__LDscale;
void *ptr__LDscale = NULL;
extern void *ptr__LDtento;
void *ptr__LDtento = NULL;
extern void *ptr__LDtest;
void *ptr__LDtest = NULL;
extern void *ptr__LDunscale;
void *ptr__LDunscale = NULL;
extern void *ptr__LEps;
void *ptr__LEps = NULL;
extern void *ptr__LExp;
void *ptr__LExp = NULL;
extern void *ptr__LInf;
void *ptr__LInf = NULL;
extern void *ptr__LNan;
void *ptr__LNan = NULL;
extern void *ptr__LPlsw;
void *ptr__LPlsw = NULL;
extern void *ptr__LPmsw;
void *ptr__LPmsw = NULL;
extern void *ptr__LPoly;
void *ptr__LPoly = NULL;
extern void *ptr__LRteps;
void *ptr__LRteps = NULL;
extern void *ptr__LSinh;
void *ptr__LSinh = NULL;
extern void *ptr__LSnan;
void *ptr__LSnan = NULL;
extern void *ptr__LXbig;
void *ptr__LXbig = NULL;
extern void *ptr__LXp_addh;
void *ptr__LXp_addh = NULL;
extern void *ptr__LXp_addx;
void *ptr__LXp_addx = NULL;
extern void *ptr__LXp_getw;
void *ptr__LXp_getw = NULL;
extern void *ptr__LXp_invx;
void *ptr__LXp_invx = NULL;
extern void *ptr__LXp_ldexpx;
void *ptr__LXp_ldexpx = NULL;
extern void *ptr__LXp_movx;
void *ptr__LXp_movx = NULL;
extern void *ptr__LXp_mulh;
void *ptr__LXp_mulh = NULL;
extern void *ptr__LXp_mulx;
void *ptr__LXp_mulx = NULL;
extern void *ptr__LXp_setn;
void *ptr__LXp_setn = NULL;
extern void *ptr__LXp_setw;
void *ptr__LXp_setw = NULL;
extern void *ptr__LXp_sqrtx;
void *ptr__LXp_sqrtx = NULL;
extern void *ptr__LXp_subx;
void *ptr__LXp_subx = NULL;
extern void *ptr__LZero;
void *ptr__LZero = NULL;
extern void *ptr__Lock_shared_ptr_spin_lock;
void *ptr__Lock_shared_ptr_spin_lock = NULL;
extern void *ptr__Mbrtowc;
void *ptr__Mbrtowc = NULL;
extern void *ptr__Mtx_clear_owner;
void *ptr__Mtx_clear_owner = NULL;
extern void *ptr__Mtx_current_owns;
void *ptr__Mtx_current_owns = NULL;
extern void *ptr__Mtx_destroy;
void *ptr__Mtx_destroy = NULL;
extern void *ptr__Mtx_getconcrtcs;
void *ptr__Mtx_getconcrtcs = NULL;
extern void *ptr__Mtx_init;
void *ptr__Mtx_init = NULL;
extern void *ptr__Mtx_lock;
void *ptr__Mtx_lock = NULL;
extern void *ptr__Mtx_reset_owner;
void *ptr__Mtx_reset_owner = NULL;
extern void *ptr__Mtx_timedlock;
void *ptr__Mtx_timedlock = NULL;
extern void *ptr__Mtx_trylock;
void *ptr__Mtx_trylock = NULL;
extern void *ptr__Mtx_unlock;
void *ptr__Mtx_unlock = NULL;
extern void *ptr__Mtxdst;
void *ptr__Mtxdst = NULL;
extern void *ptr__Mtxinit;
void *ptr__Mtxinit = NULL;
extern void *ptr__Mtxlock;
void *ptr__Mtxlock = NULL;
extern void *ptr__Mtxunlock;
void *ptr__Mtxunlock = NULL;
extern void *ptr__Nan;
void *ptr__Nan = NULL;
extern void *ptr__Once;
void *ptr__Once = NULL;
extern void *ptr__Plsw;
void *ptr__Plsw = NULL;
extern void *ptr__Pmsw;
void *ptr__Pmsw = NULL;
extern void *ptr__Poly;
void *ptr__Poly = NULL;
extern void *ptr__Rteps;
void *ptr__Rteps = NULL;
extern void *ptr__Sinh;
void *ptr__Sinh = NULL;
extern void *ptr__Snan;
void *ptr__Snan = NULL;
extern void *ptr__Stod;
void *ptr__Stod = NULL;
extern void *ptr__Stodx;
void *ptr__Stodx = NULL;
extern void *ptr__Stof;
void *ptr__Stof = NULL;
extern void *ptr__Stoflt;
void *ptr__Stoflt = NULL;
extern void *ptr__Stofx;
void *ptr__Stofx = NULL;
extern void *ptr__Stold;
void *ptr__Stold = NULL;
extern void *ptr__Stoldx;
void *ptr__Stoldx = NULL;
extern void *ptr__Stoll;
void *ptr__Stoll = NULL;
extern void *ptr__Stollx;
void *ptr__Stollx = NULL;
extern void *ptr__Stolx;
void *ptr__Stolx = NULL;
extern void *ptr__Stopfx;
void *ptr__Stopfx = NULL;
extern void *ptr__Stoul;
void *ptr__Stoul = NULL;
extern void *ptr__Stoull;
void *ptr__Stoull = NULL;
extern void *ptr__Stoullx;
void *ptr__Stoullx = NULL;
extern void *ptr__Stoulx;
void *ptr__Stoulx = NULL;
extern void *ptr__Stoxflt;
void *ptr__Stoxflt = NULL;
extern void *ptr__Strcoll;
void *ptr__Strcoll = NULL;
extern void *ptr__Strxfrm;
void *ptr__Strxfrm = NULL;
extern void *ptr__Thrd_abort;
void *ptr__Thrd_abort = NULL;
extern void *ptr__Thrd_create;
void *ptr__Thrd_create = NULL;
extern void *ptr__Thrd_current;
void *ptr__Thrd_current = NULL;
extern void *ptr__Thrd_detach;
void *ptr__Thrd_detach = NULL;
extern void *ptr__Thrd_equal;
void *ptr__Thrd_equal = NULL;
extern void *ptr__Thrd_exit;
void *ptr__Thrd_exit = NULL;
extern void *ptr__Thrd_join;
void *ptr__Thrd_join = NULL;
extern void *ptr__Thrd_lt;
void *ptr__Thrd_lt = NULL;
extern void *ptr__Thrd_sleep;
void *ptr__Thrd_sleep = NULL;
extern void *ptr__Thrd_start;
void *ptr__Thrd_start = NULL;
extern void *ptr__Thrd_yield;
void *ptr__Thrd_yield = NULL;
extern void *ptr__Tolower;
void *ptr__Tolower = NULL;
extern void *ptr__Toupper;
void *ptr__Toupper = NULL;
extern void *ptr__Towlower;
void *ptr__Towlower = NULL;
extern void *ptr__Towupper;
void *ptr__Towupper = NULL;
extern void *ptr__Tss_create;
void *ptr__Tss_create = NULL;
extern void *ptr__Tss_delete;
void *ptr__Tss_delete = NULL;
extern void *ptr__Tss_get;
void *ptr__Tss_get = NULL;
extern void *ptr__Tss_set;
void *ptr__Tss_set = NULL;
extern void *ptr__Unlock_shared_ptr_spin_lock;
void *ptr__Unlock_shared_ptr_spin_lock = NULL;
extern void *ptr__Wcrtomb;
void *ptr__Wcrtomb = NULL;
extern void *ptr__Wcscoll;
void *ptr__Wcscoll = NULL;
extern void *ptr__Wcsxfrm;
void *ptr__Wcsxfrm = NULL;
extern void *ptr__Xbig;
void *ptr__Xbig = NULL;
extern void *ptr__Xp_addh;
void *ptr__Xp_addh = NULL;
extern void *ptr__Xp_addx;
void *ptr__Xp_addx = NULL;
extern void *ptr__Xp_getw;
void *ptr__Xp_getw = NULL;
extern void *ptr__Xp_invx;
void *ptr__Xp_invx = NULL;
extern void *ptr__Xp_ldexpx;
void *ptr__Xp_ldexpx = NULL;
extern void *ptr__Xp_movx;
void *ptr__Xp_movx = NULL;
extern void *ptr__Xp_mulh;
void *ptr__Xp_mulh = NULL;
extern void *ptr__Xp_mulx;
void *ptr__Xp_mulx = NULL;
extern void *ptr__Xp_setn;
void *ptr__Xp_setn = NULL;
extern void *ptr__Xp_setw;
void *ptr__Xp_setw = NULL;
extern void *ptr__Xp_sqrtx;
void *ptr__Xp_sqrtx = NULL;
extern void *ptr__Xp_subx;
void *ptr__Xp_subx = NULL;
extern void *ptr__Xtime_diff_to_millis;
void *ptr__Xtime_diff_to_millis = NULL;
extern void *ptr__Xtime_diff_to_millis2;
void *ptr__Xtime_diff_to_millis2 = NULL;
extern void *ptr__Xtime_get_ticks;
void *ptr__Xtime_get_ticks = NULL;
extern void *ptr__Zero;
void *ptr__Zero = NULL;
extern void *ptr___Wcrtomb_lk;
void *ptr___Wcrtomb_lk = NULL;
extern void *ptr_xtime_get;
void *ptr_xtime_get = NULL;
}


static HMODULE hModule = NULL;
static void module_init()
{    
   if (hModule) return;
   wchar_t sz_module_file[MAX_PATH];
   GetSystemDirectoryW(sz_module_file, MAX_PATH);
   wcscat_s(sz_module_file, L"\\msvcp120_clr0400.dll");
   hModule = LoadLibraryW(sz_module_file);
   if (!hModule) return;

   #define __vartype(x) decltype(x)
   ptr__Call_once = (__vartype(ptr__Call_once))GetProcAddress(hModule, "_Call_once");
   ptr__Call_onceEx = (__vartype(ptr__Call_onceEx))GetProcAddress(hModule, "_Call_onceEx");
   ptr__Cnd_broadcast = (__vartype(ptr__Cnd_broadcast))GetProcAddress(hModule, "_Cnd_broadcast");
   ptr__Cnd_destroy = (__vartype(ptr__Cnd_destroy))GetProcAddress(hModule, "_Cnd_destroy");
   ptr__Cnd_do_broadcast_at_thread_exit = (__vartype(ptr__Cnd_do_broadcast_at_thread_exit))GetProcAddress(hModule, "_Cnd_do_broadcast_at_thread_exit");
   ptr__Cnd_init = (__vartype(ptr__Cnd_init))GetProcAddress(hModule, "_Cnd_init");
   ptr__Cnd_register_at_thread_exit = (__vartype(ptr__Cnd_register_at_thread_exit))GetProcAddress(hModule, "_Cnd_register_at_thread_exit");
   ptr__Cnd_signal = (__vartype(ptr__Cnd_signal))GetProcAddress(hModule, "_Cnd_signal");
   ptr__Cnd_timedwait = (__vartype(ptr__Cnd_timedwait))GetProcAddress(hModule, "_Cnd_timedwait");
   ptr__Cnd_unregister_at_thread_exit = (__vartype(ptr__Cnd_unregister_at_thread_exit))GetProcAddress(hModule, "_Cnd_unregister_at_thread_exit");
   ptr__Cnd_wait = (__vartype(ptr__Cnd_wait))GetProcAddress(hModule, "_Cnd_wait");
   ptr__Cosh = (__vartype(ptr__Cosh))GetProcAddress(hModule, "_Cosh");
   ptr__Denorm = (__vartype(ptr__Denorm))GetProcAddress(hModule, "_Denorm");
   ptr__Dint = (__vartype(ptr__Dint))GetProcAddress(hModule, "_Dint");
   ptr__Dnorm = (__vartype(ptr__Dnorm))GetProcAddress(hModule, "_Dnorm");
   ptr__Do_call = (__vartype(ptr__Do_call))GetProcAddress(hModule, "_Do_call");
   ptr__Dscale = (__vartype(ptr__Dscale))GetProcAddress(hModule, "_Dscale");
   ptr__Dtento = (__vartype(ptr__Dtento))GetProcAddress(hModule, "_Dtento");
   ptr__Dtest = (__vartype(ptr__Dtest))GetProcAddress(hModule, "_Dtest");
   ptr__Dunscale = (__vartype(ptr__Dunscale))GetProcAddress(hModule, "_Dunscale");
   ptr__Eps = (__vartype(ptr__Eps))GetProcAddress(hModule, "_Eps");
   ptr__Exp = (__vartype(ptr__Exp))GetProcAddress(hModule, "_Exp");
   ptr__FCosh = (__vartype(ptr__FCosh))GetProcAddress(hModule, "_FCosh");
   ptr__FDenorm = (__vartype(ptr__FDenorm))GetProcAddress(hModule, "_FDenorm");
   ptr__FDint = (__vartype(ptr__FDint))GetProcAddress(hModule, "_FDint");
   ptr__FDnorm = (__vartype(ptr__FDnorm))GetProcAddress(hModule, "_FDnorm");
   ptr__FDscale = (__vartype(ptr__FDscale))GetProcAddress(hModule, "_FDscale");
   ptr__FDtento = (__vartype(ptr__FDtento))GetProcAddress(hModule, "_FDtento");
   ptr__FDtest = (__vartype(ptr__FDtest))GetProcAddress(hModule, "_FDtest");
   ptr__FDunscale = (__vartype(ptr__FDunscale))GetProcAddress(hModule, "_FDunscale");
   ptr__FEps = (__vartype(ptr__FEps))GetProcAddress(hModule, "_FEps");
   ptr__FExp = (__vartype(ptr__FExp))GetProcAddress(hModule, "_FExp");
   ptr__FInf = (__vartype(ptr__FInf))GetProcAddress(hModule, "_FInf");
   ptr__FNan = (__vartype(ptr__FNan))GetProcAddress(hModule, "_FNan");
   ptr__FPlsw = (__vartype(ptr__FPlsw))GetProcAddress(hModule, "_FPlsw");
   ptr__FPmsw = (__vartype(ptr__FPmsw))GetProcAddress(hModule, "_FPmsw");
   ptr__FRteps = (__vartype(ptr__FRteps))GetProcAddress(hModule, "_FRteps");
   ptr__FSinh = (__vartype(ptr__FSinh))GetProcAddress(hModule, "_FSinh");
   ptr__FSnan = (__vartype(ptr__FSnan))GetProcAddress(hModule, "_FSnan");
   ptr__FXbig = (__vartype(ptr__FXbig))GetProcAddress(hModule, "_FXbig");
   ptr__FXp_addh = (__vartype(ptr__FXp_addh))GetProcAddress(hModule, "_FXp_addh");
   ptr__FXp_addx = (__vartype(ptr__FXp_addx))GetProcAddress(hModule, "_FXp_addx");
   ptr__FXp_getw = (__vartype(ptr__FXp_getw))GetProcAddress(hModule, "_FXp_getw");
   ptr__FXp_invx = (__vartype(ptr__FXp_invx))GetProcAddress(hModule, "_FXp_invx");
   ptr__FXp_ldexpx = (__vartype(ptr__FXp_ldexpx))GetProcAddress(hModule, "_FXp_ldexpx");
   ptr__FXp_movx = (__vartype(ptr__FXp_movx))GetProcAddress(hModule, "_FXp_movx");
   ptr__FXp_mulh = (__vartype(ptr__FXp_mulh))GetProcAddress(hModule, "_FXp_mulh");
   ptr__FXp_mulx = (__vartype(ptr__FXp_mulx))GetProcAddress(hModule, "_FXp_mulx");
   ptr__FXp_setn = (__vartype(ptr__FXp_setn))GetProcAddress(hModule, "_FXp_setn");
   ptr__FXp_setw = (__vartype(ptr__FXp_setw))GetProcAddress(hModule, "_FXp_setw");
   ptr__FXp_sqrtx = (__vartype(ptr__FXp_sqrtx))GetProcAddress(hModule, "_FXp_sqrtx");
   ptr__FXp_subx = (__vartype(ptr__FXp_subx))GetProcAddress(hModule, "_FXp_subx");
   ptr__FZero = (__vartype(ptr__FZero))GetProcAddress(hModule, "_FZero");
   ptr__Getcoll = (__vartype(ptr__Getcoll))GetProcAddress(hModule, "_Getcoll");
   ptr__Getctype = (__vartype(ptr__Getctype))GetProcAddress(hModule, "_Getctype");
   ptr__Getcvt = (__vartype(ptr__Getcvt))GetProcAddress(hModule, "_Getcvt");
   ptr__Getdateorder = (__vartype(ptr__Getdateorder))GetProcAddress(hModule, "_Getdateorder");
   ptr__Getwctype = (__vartype(ptr__Getwctype))GetProcAddress(hModule, "_Getwctype");
   ptr__Getwctypes = (__vartype(ptr__Getwctypes))GetProcAddress(hModule, "_Getwctypes");
   ptr__Hugeval = (__vartype(ptr__Hugeval))GetProcAddress(hModule, "_Hugeval");
   ptr__Inf = (__vartype(ptr__Inf))GetProcAddress(hModule, "_Inf");
   ptr__LCosh = (__vartype(ptr__LCosh))GetProcAddress(hModule, "_LCosh");
   ptr__LDenorm = (__vartype(ptr__LDenorm))GetProcAddress(hModule, "_LDenorm");
   ptr__LDint = (__vartype(ptr__LDint))GetProcAddress(hModule, "_LDint");
   ptr__LDscale = (__vartype(ptr__LDscale))GetProcAddress(hModule, "_LDscale");
   ptr__LDtento = (__vartype(ptr__LDtento))GetProcAddress(hModule, "_LDtento");
   ptr__LDtest = (__vartype(ptr__LDtest))GetProcAddress(hModule, "_LDtest");
   ptr__LDunscale = (__vartype(ptr__LDunscale))GetProcAddress(hModule, "_LDunscale");
   ptr__LEps = (__vartype(ptr__LEps))GetProcAddress(hModule, "_LEps");
   ptr__LExp = (__vartype(ptr__LExp))GetProcAddress(hModule, "_LExp");
   ptr__LInf = (__vartype(ptr__LInf))GetProcAddress(hModule, "_LInf");
   ptr__LNan = (__vartype(ptr__LNan))GetProcAddress(hModule, "_LNan");
   ptr__LPlsw = (__vartype(ptr__LPlsw))GetProcAddress(hModule, "_LPlsw");
   ptr__LPmsw = (__vartype(ptr__LPmsw))GetProcAddress(hModule, "_LPmsw");
   ptr__LPoly = (__vartype(ptr__LPoly))GetProcAddress(hModule, "_LPoly");
   ptr__LRteps = (__vartype(ptr__LRteps))GetProcAddress(hModule, "_LRteps");
   ptr__LSinh = (__vartype(ptr__LSinh))GetProcAddress(hModule, "_LSinh");
   ptr__LSnan = (__vartype(ptr__LSnan))GetProcAddress(hModule, "_LSnan");
   ptr__LXbig = (__vartype(ptr__LXbig))GetProcAddress(hModule, "_LXbig");
   ptr__LXp_addh = (__vartype(ptr__LXp_addh))GetProcAddress(hModule, "_LXp_addh");
   ptr__LXp_addx = (__vartype(ptr__LXp_addx))GetProcAddress(hModule, "_LXp_addx");
   ptr__LXp_getw = (__vartype(ptr__LXp_getw))GetProcAddress(hModule, "_LXp_getw");
   ptr__LXp_invx = (__vartype(ptr__LXp_invx))GetProcAddress(hModule, "_LXp_invx");
   ptr__LXp_ldexpx = (__vartype(ptr__LXp_ldexpx))GetProcAddress(hModule, "_LXp_ldexpx");
   ptr__LXp_movx = (__vartype(ptr__LXp_movx))GetProcAddress(hModule, "_LXp_movx");
   ptr__LXp_mulh = (__vartype(ptr__LXp_mulh))GetProcAddress(hModule, "_LXp_mulh");
   ptr__LXp_mulx = (__vartype(ptr__LXp_mulx))GetProcAddress(hModule, "_LXp_mulx");
   ptr__LXp_setn = (__vartype(ptr__LXp_setn))GetProcAddress(hModule, "_LXp_setn");
   ptr__LXp_setw = (__vartype(ptr__LXp_setw))GetProcAddress(hModule, "_LXp_setw");
   ptr__LXp_sqrtx = (__vartype(ptr__LXp_sqrtx))GetProcAddress(hModule, "_LXp_sqrtx");
   ptr__LXp_subx = (__vartype(ptr__LXp_subx))GetProcAddress(hModule, "_LXp_subx");
   ptr__LZero = (__vartype(ptr__LZero))GetProcAddress(hModule, "_LZero");
   ptr__Lock_shared_ptr_spin_lock = (__vartype(ptr__Lock_shared_ptr_spin_lock))GetProcAddress(hModule, "_Lock_shared_ptr_spin_lock");
   ptr__Mbrtowc = (__vartype(ptr__Mbrtowc))GetProcAddress(hModule, "_Mbrtowc");
   ptr__Mtx_clear_owner = (__vartype(ptr__Mtx_clear_owner))GetProcAddress(hModule, "_Mtx_clear_owner");
   ptr__Mtx_current_owns = (__vartype(ptr__Mtx_current_owns))GetProcAddress(hModule, "_Mtx_current_owns");
   ptr__Mtx_destroy = (__vartype(ptr__Mtx_destroy))GetProcAddress(hModule, "_Mtx_destroy");
   ptr__Mtx_getconcrtcs = (__vartype(ptr__Mtx_getconcrtcs))GetProcAddress(hModule, "_Mtx_getconcrtcs");
   ptr__Mtx_init = (__vartype(ptr__Mtx_init))GetProcAddress(hModule, "_Mtx_init");
   ptr__Mtx_lock = (__vartype(ptr__Mtx_lock))GetProcAddress(hModule, "_Mtx_lock");
   ptr__Mtx_reset_owner = (__vartype(ptr__Mtx_reset_owner))GetProcAddress(hModule, "_Mtx_reset_owner");
   ptr__Mtx_timedlock = (__vartype(ptr__Mtx_timedlock))GetProcAddress(hModule, "_Mtx_timedlock");
   ptr__Mtx_trylock = (__vartype(ptr__Mtx_trylock))GetProcAddress(hModule, "_Mtx_trylock");
   ptr__Mtx_unlock = (__vartype(ptr__Mtx_unlock))GetProcAddress(hModule, "_Mtx_unlock");
   ptr__Mtxdst = (__vartype(ptr__Mtxdst))GetProcAddress(hModule, "_Mtxdst");
   ptr__Mtxinit = (__vartype(ptr__Mtxinit))GetProcAddress(hModule, "_Mtxinit");
   ptr__Mtxlock = (__vartype(ptr__Mtxlock))GetProcAddress(hModule, "_Mtxlock");
   ptr__Mtxunlock = (__vartype(ptr__Mtxunlock))GetProcAddress(hModule, "_Mtxunlock");
   ptr__Nan = (__vartype(ptr__Nan))GetProcAddress(hModule, "_Nan");
   ptr__Once = (__vartype(ptr__Once))GetProcAddress(hModule, "_Once");
   ptr__Plsw = (__vartype(ptr__Plsw))GetProcAddress(hModule, "_Plsw");
   ptr__Pmsw = (__vartype(ptr__Pmsw))GetProcAddress(hModule, "_Pmsw");
   ptr__Poly = (__vartype(ptr__Poly))GetProcAddress(hModule, "_Poly");
   ptr__Rteps = (__vartype(ptr__Rteps))GetProcAddress(hModule, "_Rteps");
   ptr__Sinh = (__vartype(ptr__Sinh))GetProcAddress(hModule, "_Sinh");
   ptr__Snan = (__vartype(ptr__Snan))GetProcAddress(hModule, "_Snan");
   ptr__Stod = (__vartype(ptr__Stod))GetProcAddress(hModule, "_Stod");
   ptr__Stodx = (__vartype(ptr__Stodx))GetProcAddress(hModule, "_Stodx");
   ptr__Stof = (__vartype(ptr__Stof))GetProcAddress(hModule, "_Stof");
   ptr__Stoflt = (__vartype(ptr__Stoflt))GetProcAddress(hModule, "_Stoflt");
   ptr__Stofx = (__vartype(ptr__Stofx))GetProcAddress(hModule, "_Stofx");
   ptr__Stold = (__vartype(ptr__Stold))GetProcAddress(hModule, "_Stold");
   ptr__Stoldx = (__vartype(ptr__Stoldx))GetProcAddress(hModule, "_Stoldx");
   ptr__Stoll = (__vartype(ptr__Stoll))GetProcAddress(hModule, "_Stoll");
   ptr__Stollx = (__vartype(ptr__Stollx))GetProcAddress(hModule, "_Stollx");
   ptr__Stolx = (__vartype(ptr__Stolx))GetProcAddress(hModule, "_Stolx");
   ptr__Stopfx = (__vartype(ptr__Stopfx))GetProcAddress(hModule, "_Stopfx");
   ptr__Stoul = (__vartype(ptr__Stoul))GetProcAddress(hModule, "_Stoul");
   ptr__Stoull = (__vartype(ptr__Stoull))GetProcAddress(hModule, "_Stoull");
   ptr__Stoullx = (__vartype(ptr__Stoullx))GetProcAddress(hModule, "_Stoullx");
   ptr__Stoulx = (__vartype(ptr__Stoulx))GetProcAddress(hModule, "_Stoulx");
   ptr__Stoxflt = (__vartype(ptr__Stoxflt))GetProcAddress(hModule, "_Stoxflt");
   ptr__Strcoll = (__vartype(ptr__Strcoll))GetProcAddress(hModule, "_Strcoll");
   ptr__Strxfrm = (__vartype(ptr__Strxfrm))GetProcAddress(hModule, "_Strxfrm");
   ptr__Thrd_abort = (__vartype(ptr__Thrd_abort))GetProcAddress(hModule, "_Thrd_abort");
   ptr__Thrd_create = (__vartype(ptr__Thrd_create))GetProcAddress(hModule, "_Thrd_create");
   ptr__Thrd_current = (__vartype(ptr__Thrd_current))GetProcAddress(hModule, "_Thrd_current");
   ptr__Thrd_detach = (__vartype(ptr__Thrd_detach))GetProcAddress(hModule, "_Thrd_detach");
   ptr__Thrd_equal = (__vartype(ptr__Thrd_equal))GetProcAddress(hModule, "_Thrd_equal");
   ptr__Thrd_exit = (__vartype(ptr__Thrd_exit))GetProcAddress(hModule, "_Thrd_exit");
   ptr__Thrd_join = (__vartype(ptr__Thrd_join))GetProcAddress(hModule, "_Thrd_join");
   ptr__Thrd_lt = (__vartype(ptr__Thrd_lt))GetProcAddress(hModule, "_Thrd_lt");
   ptr__Thrd_sleep = (__vartype(ptr__Thrd_sleep))GetProcAddress(hModule, "_Thrd_sleep");
   ptr__Thrd_start = (__vartype(ptr__Thrd_start))GetProcAddress(hModule, "_Thrd_start");
   ptr__Thrd_yield = (__vartype(ptr__Thrd_yield))GetProcAddress(hModule, "_Thrd_yield");
   ptr__Tolower = (__vartype(ptr__Tolower))GetProcAddress(hModule, "_Tolower");
   ptr__Toupper = (__vartype(ptr__Toupper))GetProcAddress(hModule, "_Toupper");
   ptr__Towlower = (__vartype(ptr__Towlower))GetProcAddress(hModule, "_Towlower");
   ptr__Towupper = (__vartype(ptr__Towupper))GetProcAddress(hModule, "_Towupper");
   ptr__Tss_create = (__vartype(ptr__Tss_create))GetProcAddress(hModule, "_Tss_create");
   ptr__Tss_delete = (__vartype(ptr__Tss_delete))GetProcAddress(hModule, "_Tss_delete");
   ptr__Tss_get = (__vartype(ptr__Tss_get))GetProcAddress(hModule, "_Tss_get");
   ptr__Tss_set = (__vartype(ptr__Tss_set))GetProcAddress(hModule, "_Tss_set");
   ptr__Unlock_shared_ptr_spin_lock = (__vartype(ptr__Unlock_shared_ptr_spin_lock))GetProcAddress(hModule, "_Unlock_shared_ptr_spin_lock");
   ptr__Wcrtomb = (__vartype(ptr__Wcrtomb))GetProcAddress(hModule, "_Wcrtomb");
   ptr__Wcscoll = (__vartype(ptr__Wcscoll))GetProcAddress(hModule, "_Wcscoll");
   ptr__Wcsxfrm = (__vartype(ptr__Wcsxfrm))GetProcAddress(hModule, "_Wcsxfrm");
   ptr__Xbig = (__vartype(ptr__Xbig))GetProcAddress(hModule, "_Xbig");
   ptr__Xp_addh = (__vartype(ptr__Xp_addh))GetProcAddress(hModule, "_Xp_addh");
   ptr__Xp_addx = (__vartype(ptr__Xp_addx))GetProcAddress(hModule, "_Xp_addx");
   ptr__Xp_getw = (__vartype(ptr__Xp_getw))GetProcAddress(hModule, "_Xp_getw");
   ptr__Xp_invx = (__vartype(ptr__Xp_invx))GetProcAddress(hModule, "_Xp_invx");
   ptr__Xp_ldexpx = (__vartype(ptr__Xp_ldexpx))GetProcAddress(hModule, "_Xp_ldexpx");
   ptr__Xp_movx = (__vartype(ptr__Xp_movx))GetProcAddress(hModule, "_Xp_movx");
   ptr__Xp_mulh = (__vartype(ptr__Xp_mulh))GetProcAddress(hModule, "_Xp_mulh");
   ptr__Xp_mulx = (__vartype(ptr__Xp_mulx))GetProcAddress(hModule, "_Xp_mulx");
   ptr__Xp_setn = (__vartype(ptr__Xp_setn))GetProcAddress(hModule, "_Xp_setn");
   ptr__Xp_setw = (__vartype(ptr__Xp_setw))GetProcAddress(hModule, "_Xp_setw");
   ptr__Xp_sqrtx = (__vartype(ptr__Xp_sqrtx))GetProcAddress(hModule, "_Xp_sqrtx");
   ptr__Xp_subx = (__vartype(ptr__Xp_subx))GetProcAddress(hModule, "_Xp_subx");
   ptr__Xtime_diff_to_millis = (__vartype(ptr__Xtime_diff_to_millis))GetProcAddress(hModule, "_Xtime_diff_to_millis");
   ptr__Xtime_diff_to_millis2 = (__vartype(ptr__Xtime_diff_to_millis2))GetProcAddress(hModule, "_Xtime_diff_to_millis2");
   ptr__Xtime_get_ticks = (__vartype(ptr__Xtime_get_ticks))GetProcAddress(hModule, "_Xtime_get_ticks");
   ptr__Zero = (__vartype(ptr__Zero))GetProcAddress(hModule, "_Zero");
   ptr___Wcrtomb_lk = (__vartype(ptr___Wcrtomb_lk))GetProcAddress(hModule, "__Wcrtomb_lk");
   ptr_xtime_get = (__vartype(ptr_xtime_get))GetProcAddress(hModule, "xtime_get");
   #undef __vartype
}

extern "C" BOOL __stdcall DllMain( HMODULE hModule,	DWORD ul_reason_for_call,LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
    {
        module_init();
        wchar_t tmp1[2048];
        GetModuleFileNameW(NULL, tmp1, _countof(tmp1));
        PathRemoveExtensionW(tmp1);
        wcscat(tmp1, L".hook.dll");
        LoadLibraryW(tmp1);
        break;
    }
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

